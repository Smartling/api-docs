components:
  requestBodies:
      accountUid:
        type: object
        properties:
          accountUid:
            type: string
            description: >-
              Unique identifier of account which belongs issue.
            example: "MeR60Bcq3"
      projectId:
        type: object
        properties:
          projectId:
            type: string
            description: >-
              Unique identifier of project which belongs issue.
            example: "ye7ngrakk"
      issueUid:
        type: object
        properties:
          issueUid:
            type: string
            description: >-
              Unique identifier of issue.
            example: "60cef4fc5f05"
      string:
        type: object
        properties:
          string:
            type: object
            properties:
              hashcode:
                type: string
                description: >-
                  Unique identifier for a string in Smartling.
                  Used by the Issues API to attach an issue to a string.
                  You can get the hashcode for a string via String API.
                example: "00000003ecba5dcc412ce71f046b8acb"
              localeId:
                type: String
                description: >-
                  An identifying code for a language in Smartling.
                example: "es-ES"
      resolvedByUserUid:
        type: object
        properties:
          resolvedByUserUid:
            type: string
            description: >-
              User identifier who resolved issue
            example: "j8hD1LBFA3Ol"
      reportedByUserUid:
       type: object
       properties:
         reportedByUserUid:
           type: string
           description: >-
             User identifier who created (reported) issue
           example: "j8hD1LBFA3Ol"
      createdDate:
        type: object
        properties:
          createdDate:
            type: string
            description: >-
              Issue creation date
            example: "2019-10-09 15:20:11"
      resolvedDate:
        type: object
        properties:
          resolvedDate:
            type: String
            description: >-
              Issue resolve date
            example: "2019-10-09 15:22:16"
      issueTextModifiedDate:
        type: object
        properties:
          issueTextModifiedDate:
            type: String
            description: >-
              Issue text modification date
            example: "2019-11-09 15:22:16"
      issueText:
        type: object
        properties:
          issueText:
            type: String
            description: >-
              Issue text
            example: "Some text"
      issueStateCode:
        type: object
        properties:
          issueStateCode:
            description: >-
              Issue State identifier
            enum:
              - OPENED
              - RESOLVED
            type: string
            example: "OPENED"
      issueTypeCode:
        type: object
        properties:
          issueTypeCode:
            description: ->
              Issue Type identifier
            enum:
              - SOURCE
              - TRANSLATION
            type: string
            example: "TRANSLATION"
      issueSubTypeCode:
        type: object
        properties:
          issueSubTypeCode:
            description: >-
              Issue SubType identifier
            enum:
              - CLARIFICATION
              - MISSPELLING
              - POOR_TRANSLATION
              - DOES_NOT_FIT_SPACE
              - PLACEHOLDER_ISSUE
              - GENERAL_ISSUE
              - REVIEW_TRANSLATION
              - CUSTOM
            type: string
            example: "POOR_TRANSLATION"
      issueCommentsCount:
        type: object
        properties:
          issueCommentsCount:
            type: integer
            description: >-
              Issue comments count
            example: 0
      answered:
        type: object
        properties:
          answered:
            type: boolean
            description: >-
              Issue flag "aswered"
            example: false
      issueSeverityLevelCode:
        type: object
        properties:
          issueSeverityLevelCode:
            description: >-
              Issue Severity Level identifier
            enum:
              - LOW
              - MEDIUM
              - HIGH
            type: string
            example: "MEDIUM"
      issueNumber:
        type: object
        properties:
          issueNumber:
            type: integer
            description: >-
              Issue number
            example: 1
      assigneeUserUid:
        type: object
        properties:
          assigneeUserUid:
            type: String
            description: >-
              User identifier who is assigned to issue
            example: "j8hD1LBFA3Ol"

  schemas:
    setupWebhookRequest:
      properties:
        webhookUrl:
            description: URL were to send all issues webhooks.
            example: 'https://your.domain.com/send/webhook/here'
            type: String
        enabled:
            description: Enable/disable sending webhooks
            example: 'true'
            type: boolean
      type: object

    setupWebhookResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '../../api_common.yaml#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    webhookUrl:
                      description: URL were to send all issues webhooks.
                      type: string
                    enabled:
                      description: Sending webhooks is Enabled/disabled
                      type: boolean
                  type: object
              type: object

    receiveWebhookResponse:
      type: object

    webhooks:
      issueCreatedRequest:
        title: 'Issue created'
        properties:
          type:
            description: Event type code
            type: String
            example: 'issue.created'
            enum:
              - 'issue.created'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/string'
              - $ref: '#/components/requestBodies/resolvedByUserUid'
              - $ref: '#/components/requestBodies/reportedByUserUid'
              - $ref: '#/components/requestBodies/createdDate'
              - $ref: '#/components/requestBodies/resolvedDate'
              - $ref: '#/components/requestBodies/issueTextModifiedDate'
              - $ref: '#/components/requestBodies/issueText'
              - $ref: '#/components/requestBodies/issueStateCode'
              - $ref: '#/components/requestBodies/issueTypeCode'
              - $ref: '#/components/requestBodies/issueSubTypeCode'
              - $ref: '#/components/requestBodies/issueCommentsCount'
              - $ref: '#/components/requestBodies/answered'
              - $ref: '#/components/requestBodies/issueSeverityLevelCode'
              - $ref: '#/components/requestBodies/issueNumber'
              - $ref: '#/components/requestBodies/assigneeUserUid'
            type: object
        type: object
      issueDeletedRequest:
        title: 'Issue deleted'
        properties:
          type:
            description: Event type code
            type: String
            example: 'issue.deleted'
            enum:
              - 'issue.deleted'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/string'
              - $ref: '#/components/requestBodies/resolvedByUserUid'
              - $ref: '#/components/requestBodies/reportedByUserUid'
              - $ref: '#/components/requestBodies/createdDate'
              - $ref: '#/components/requestBodies/resolvedDate'
              - $ref: '#/components/requestBodies/issueTextModifiedDate'
              - $ref: '#/components/requestBodies/issueText'
              - $ref: '#/components/requestBodies/issueStateCode'
              - $ref: '#/components/requestBodies/issueTypeCode'
              - $ref: '#/components/requestBodies/issueSubTypeCode'
              - $ref: '#/components/requestBodies/issueCommentsCount'
              - $ref: '#/components/requestBodies/answered'
              - $ref: '#/components/requestBodies/issueSeverityLevelCode'
              - $ref: '#/components/requestBodies/issueNumber'
              - $ref: '#/components/requestBodies/assigneeUserUid'
            type: object
        type: object
      issueStateChangedRequest:
        title: 'Issue state changed'
        properties:
          eventTypeCode:
            description: Event type code
            type: String
            example: 'issue.stateChanged'
            enum:
              - 'issue.stateChanged'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/issueStateCode'
            type: object
        type: object
      issueAnsweredRequest:
        title: 'Issue answered'
        properties:
          eventTypeCode:
            description: Event type code
            type: String
            example: 'issue.answered'
            enum:
              - 'issue.answered'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/answered'
            type: object
        type: object
      issueSeverityLevelChangedRequest:
        title: 'Issue severity level changed'
        properties:
          eventTypeCode:
            description: Event type code
            type: String
            example: 'issue.severityLevelChanged'
            enum:
              - 'issue.severityLevelChanged'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/issueSeverityLevelCode'
            type: object
        type: object
      issueCommentAdded:
        title: 'Issue comment added'
        properties:
          type:
            description: Event type code
            type: String
            example: 'issue.created'
            enum:
              - 'issue.created'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/string'
              - $ref: '#/components/requestBodies/resolvedByUserUid'
              - $ref: '#/components/requestBodies/reportedByUserUid'
              - $ref: '#/components/requestBodies/createdDate'
              - $ref: '#/components/requestBodies/resolvedDate'
              - $ref: '#/components/requestBodies/issueTextModifiedDate'
              - $ref: '#/components/requestBodies/issueText'
            type: object
        type: object
      issueWatcherAdded:
        title: 'Issue comment added'
        properties:
          type:
            description: Event type code
            type: String
            example: 'issue.created'
            enum:
              - 'issue.created'
          data:
            allOf:
              - $ref: '#/components/requestBodies/accountUid'
              - $ref: '#/components/requestBodies/projectId'
              - $ref: '#/components/requestBodies/issueUid'
              - $ref: '#/components/requestBodies/string'
              - $ref: '#/components/requestBodies/resolvedByUserUid'
              - $ref: '#/components/requestBodies/reportedByUserUid'
              - $ref: '#/components/requestBodies/createdDate'
              - $ref: '#/components/requestBodies/resolvedDate'
              - $ref: '#/components/requestBodies/issueTextModifiedDate'
              - $ref: '#/components/requestBodies/issueText'
            type: object
        type: object


