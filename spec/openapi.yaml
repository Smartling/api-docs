openapi: 3.0.0
info:
  contact:
    email: support@smartling.com
  description: >
    Before you begin using the Smartling APIs, we recommend going through our
    [Getting Started](https://help.smartling.com/hc/en-us/sections/360001644894)
    section.
  termsOfService: 'https://www.smartling.com/about/terms-and-conditions/'
  title: Smartling REST API Reference
  version: 2.0.0
  x-logo:
    url: smartling_logo.png
servers:
  - url: 'https://api.smartling.com/'

externalDocs:
  description: Smartling Help Center
  url: 'https://help.smartling.com'

tags:
  - name: Authentication
    description: |-
      Smartling uses OAuth2 for [authentication](https://help.smartling.com/hc/en-us/articles/360007789914).
      To access the Smartling APIs, you'll first need to authenticate with your
      user identifier and user secret. An access token is returned that can be
      attached to the header of any API request. A refresh token is also returned.

      To obtain your [user identifier and user secret](https://help.smartling.com/hc/en-us/articles/115004187694),
      log in to Smartling.com and go to **API > Create Token**. Authenticating is as
      simple as calling the `/api.smartling.com/auth-api/v2/authenticate` with
      your `userIdentifier` and `userSecret`. The access token returned is valid
      for 5-minutes, and is used in the header of all subsequent requests.

      **Example for generating your access token:**

      ```bash
      curl -X POST https://api.smartling.com/auth-api/v2/authenticate  -H 'content-type: application/json' -d '{"userIdentifier": "userIdasdklj4348dk34!", "userSecret": "userSecret34i34kkd5634f"}'
      ```

      ```
      {
          "response": {
              "code": "SUCCESS",
              "data": {
                      "accessToken": "eyJhbGciOiJSUzI1NiJ9.eyJqdGkiOasdlkjn",
                      "refreshToken": "eyJhbGciOiJSUzI1NiJ9.eyJqdGkiOiJkMTdkMmEw",
                      "expiresIn": 480,
                      "refreshExpiresIn": 3660,
                      "tokenType": "Bearer"
              }
          }
      }
      ```

      **Example of using your access token to list all projects for your account:**

      ```bash
      curl -X GET -H "Authorization: Bearer {accessToken}" https://api.smartling.com/accounts-api/v2/accounts/{accountUid}/projects
      ```

      ```
      {
          "response": {
              "code": "SUCCESS",
              "data": {
                  "totalCount": 1,
                  "items": [{
                               "projectId": "df324sdf5",
                               "projectName": "iOS Strings files",
                               "accountUid": "ab5f1939",
                               "archived": false,
                               "projectTypeCode": "APPLICATION_RESOURCES",
                               "sourceLocaleId": "en",
                               "sourceLocaleDescription": "English"
                           }
                  ]
              }
          }
      }
      ```

  - name: Account & Projects
    description: |-
      Each client within Smartling is given their own account with a designated
      `accountUid`. Within each account is any number of projects. All files,
      content, and jobs are tied to a particular project. The Accounts &
      Projects API will allow you to programmatically find and use the projects
      within your account.

      You may wish to reference the [Overview of Smartling
      APIs](https://help.smartling.com/hc/en-us/articles/360007811673) article
      to better understand how content is organized within Smartling.

  - name: Locales
    description: |-
      Locales are the language and country pairs that are used to identify the
      source content and the desired target locale for your translated content.

  - name: Files
    description: |-
      Files are typically how you can exchange your content with Smartling to
      get translations. Smartling supports a wide variety of [file
      types](https://help.smartling.com/hc/en-us/articles/360007998893). When
      you upload a file to Smartling, it gets parsed into strings, which will
      then be sent into the translation queue.

      **List of Supported File Types and Directives**:

      * [Android XML](https://help.smartling.com/hc/en-us/articles/360008000573)
      * [CSV](https://help.smartling.com/hc/en-us/articles/360008000593)
      * [Gettext PO/POT](https://help.smartling.com/hc/en-us/articles/360007894594)
      * [HTML](https://help.smartling.com/hc/en-us/articles/360007894614)
      * [InDesign](https://help.smartling.com/hc/en-us/articles/360007894634)
      * [iOS Strings](https://help.smartling.com/hc/en-us/articles/360008000693)
      * [iOS Stringsdict](https://help.smartling.com/hc/en-us/articles/360008000713)
      * [Java Property Files](https://help.smartling.com/hc/en-us/articles/360007894714)
      * [JSON](https://help.smartling.com/hc/en-us/articles/360008000733)
      * [MadCap Lingo ZIP Package](https://help.smartling.com/hc/en-us/articles/360008000793)
      * [Microsoft Office](https://help.smartling.com/hc/en-us/articles/360007894774)
      * [Plain Text](https://help.smartling.com/hc/en-us/articles/360007894794)
      * [QT Linguist](https://help.smartling.com/hc/en-us/articles/360007894814)
      * [RESX](https://help.smartling.com/hc/en-us/articles/360008000833)
      * [SubRip SRT](https://help.smartling.com/hc/en-us/articles/360007894874)
      * [XLIFF](https://help.smartling.com/hc/en-us/articles/360007894894)
      * [XML](https://help.smartling.com/hc/en-us/articles/360008000893)
      * [YAML](https://help.smartling.com/hc/en-us/articles/360007894934)

  - name: Jobs
    description: |-
      A Smartling project (such as a mobile, web, files, or connector project)
      may contain one or more
      [jobs](https://help.smartling.com/hc/en-us/articles/360007790014). You may
      have multiple projects, each containing multiple jobs. Each job contains
      strings, consisting of words or phrases.

      The Jobs feature allows you to group and prioritize your content by name,
      due date, description, and reference number (optional). It also enables
      you to monitor the progress of your translations throughout completion.

      The Jobs API allows you to create a job, add a file to a job, authorize a
      job, and cancel a job, among many other actions. You have full control via
      the API to manage your job(s).

  - name: Job batches
    description: |-
      Job batches take care of asynchronous processes when uploading files and
      attaching them to jobs.

      Generally, adding multiple files to a job is associated with polling -
      file is parsed asynchronously and can't be added to a job until it is
      completed, adding file to a job is also asynchronous, and job can't be
      authorized until all background tasks completed.

      This forces third-party integration poll every file after every step.

      Batches hide these asynchronous processes from 3rd party integration -
      after it accepted file from client it conducts this file through all steps
      up to the Job authorization. As Job batch Service utilizes internal
      Smartling events it gets more effective than just polling files and jobs.

      From the client side flow consists of simple steps:

      1. Client creates Job (or uses existing one, which isn't currently
      processed with another Batch)

      2. Client Creates a new Batch for this Job

      3. Client adds (uploads) files into the batch giving target locales list
      for each file

      4. When all files are uploaded, client triggers "execute" for the batch.

      5. Batch execution process waiting until all files are uploaded and added
      to the Job and then, if was requested, authorizes the Job.

      6. Clients can check batch status and see if all files uploaded and
      attached successfully, what errors happened for each file, and statistics
      for added/skipped strings.

      After Batch is completed it can't be reused.

      **Job batches Limitations**

      - Service doesn't guarantee correct processing of multiple batches for the
      same job in parallel. Adding files to a new batch should be done only
      after previous batch reached "completed" state.

      - Service doesn't guarantee correct processing of Batch if Job and Files
      are modified in UI or with another integration.

  - name: Context
    description: |-
      [Visual context](https://help.smartling.com/hc/en-us/categories/360000736674)
      helps Translators make linguistic, layout, and spacing decisions based on
      where strings appear in your mobile or desktop application. The Context
      API supports uploading various forms of context (images and HTML), and
      associate the context with content in Smartling.

  - name: Issues
    description: |-
      The Issues feature is a way for users who are working on a translation
      workflow to communicate with other users about source content and
      translations. For example, a Translator might create an
      [issue](https://help.smartling.com/hc/en-us/articles/115003139313) to ask
      a question about terminology in a particular string.

      By using Issues, you can record any communication about a string, and this
      can be seen by anyone working on it. Issues streamline the translation
      workflow. Translators get answers to their questions about the original
      content so they can translate it quickly and correctly. Translation
      resources can review and provide feedback about translations
      collaboratively.

      The Issues API provides methods for creating issues, changing the state of
      an issue, commenting on an issue, requesting detailed information, as well
      as creating reports on issues and comments.

  - name: Glossaries
    description: |-
      The Glossaries API allows you to create and edit glossaries in a Smartling
      account, and populate it with glossary terms. You can also download your
      glossaries as CSV or TBX files and import Excel spreadsheets to create new
      glossaries.

      **Glossaries API Usage Limitations**:
      * Maximum request size is 10MB.
      * Maximum file upload size is 10MB.
      * Maximum HTTP header size is 128KB.
      * For requests that use pagination, maximum page size is 5000 elements.
      * For requests that return entities by their UIDs, maximum is 100 elements.

      Rate limits:

      * Maximum 5 concurrent requests.
      * Maximum rate is 200 requests per 15-second window frame.

  - name: Strings
    description: |-
      A string is a piece of translation. Based on the source content, strings
      can be parsed differently. A string is then broken down further, into one
      or more segments.

      The Strings API allows you to directly upload strings to a Smartling
      project and fetch original strings or translations.

      For each string in a Smartling project, there is a unique identifier
      created by hashing together the parsed string text, [variant
      metadata](https://help.smartling.com/hc/en-us/articles/360008143853), and
      in some cases,
      [namespace](https://help.smartling.com/hc/en-us/articles/360008143833).
      When adding strings via the Strings API, each string will be unique. If
      you try to create a string with identical variant metadata and string text
      to a string that already exists in the project, the string will be
      overwritten.

  - name: Tags
    description: |-
      Tags can help you manage your strings. The Tags API allows you to
      add/remove string tags, and search for tags in a project.

  - name: Vendors
    description: |-
      The Vendors API is for Language Service Providers to view work that's
      available in Smartling.

  - name: Reports
    description: |-
      The Reports API allows to request various reports available on Smartling
      platform and specify additional filtering criteria to narrow down data
      returned by the reports.

  - name: Translation quality check
    description: Translation quality check service provides API that allows to check translation quality.

paths:
  /auth-api/v2/authenticate:
    post:
      summary: Authenticate
      description: Verifies the credentials of the connection attempt.
      tags:
        - Authentication
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        description: Authentication Request
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        accessToken: b816424c-2e95-11e7-93ae-92361f002671
                        expiresIn: 480
                        refreshExpiresIn: 3660
                        refreshToken: c0a6f410-2e95-11e7-93ae-92361f002671
                        tokenType: Bearer
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          smartlingToken=$(curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"userIdentifier\": \"$smartlingId\", \"userSecret\": \"$smartlingSecret\"}" \
            "https://api.smartling.com/auth-api/v2/authenticate" \
            | sed -E 's/^.*accessToken":"//' | sed -E 's/","refreshToken.*//')

  /auth-api/v2/authenticate/refresh:
    post:
      tags:
      - Authentication
      description: >-
        A [renewed access token](https://help.smartling.com/hc/en-us/articles/360007789914) that
        can be attached to the header of any API request.
      summary: Refresh access token
      operationId: refreshAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRefreshRequest'
        description: Refresh token request
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST
          https://api.smartling.com/auth-api/v2/authenticate/refresh \
            -H 'content-type: application/json' \
            -d '{"refreshToken": "eyJhbGciO..."}'

#
# Accounts & Projects
#

  /accounts-api/v2/accounts/{accountUid}/projects:
    get:
      tags:
      - Account & Projects
      description: |
        Returns the list of projects for the account.
      summary: List projects
      operationId: getProjectsByAccount

      parameters:
        - in: path
          name: accountUid
          required: true
          schema:
            type: string
        - description: >-
            Substring search of the name of the project. Search is case insensitive.
          in: query
          name: projectNameFilter
          required: false
          schema:
            type: string
        - description: >-
            Indicator whether or not archived projects should be returned.
            Defaults to false if not specified.
          in: query
          name: includeArchived
          required: false
          schema:
            type: boolean
        - description: Standard Smartling limit and offset to paginate through results.
          in: query
          name: offset
          required: false
          schema:
            type: integer
        - description: >-
            Standard Smartling limit and offset to paginate through results. 500
            projects are returned by default if not specified.
          in: query
          name: limit
          required: false
          schema:
            type: integer

      responses:
        200:
          description: OK
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                          - accountUid: at724e365
                            archived: false
                            projectId: fd7244365
                            projectName: Android XML Content
                            projectTypeCode: APPLICATION_RESOURCES
                            sourceLocaleDescription: English
                            sourceLocaleId: en-US
                          - accountUid: at724e365
                            archived: false
                            projectId: eqb7243x5
                            projectName: Marketing Website GDN
                            projectTypeCode: GDN
                            sourceLocaleDescription: English
                            sourceLocaleId: en-US
                        totalCount: 2
              schema:
                $ref: '#/components/schemas/AccountAPIProjectListSuccessResponse'

        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
        - lang: curl
          source: >
            curl -H "Authorization: Bearer $smartlingToken"
            https://api.smartling.com/accounts-api/v2/accounts/$smartlingAccountId/projects

  /projects-api/v2/projects/{projectId}:
    get:
      tags:
      - Account & Projects
      description: |
        Returns the details of a project.
      summary: Get project details
      operationId: getProjectDetails

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: >-
          Indicator whether or not disabled locales configured for the project
          should be returned as part of the targetLocales. By default disabled
          target locales are not returned.
        in: query
        name: includeDisabledLocales
        required: false
        schema:
          type: boolean
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        accountUid: at724e365
                        archived: false
                        projectId: fd7244365
                        projectName: Android XML Content
                        projectTypeCode: APPLICATION_RESOURCES
                        sourceLocaleDescription: English
                        sourceLocaleId: en-US
                        targetLocales:
                        - description: German (Germany)
                          enabled: true
                          localeId: de-DE
              schema:
                $ref: '#/components/schemas/ProjectDetailsSuccessResponse'
          description: OK

        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          https://api.smartling.com/projects-api/v2/projects/$smartlingProjectId

  /projects-api/v2/projects/{projectId}/targetLocales:
    post:
      summary: Add a new target locale
      tags:
      - Account & Projects
      description: |
        Add a new target locale to the project.
      operationId: addLocaleToProject

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string

      requestBody:
        content:
          application/json:
            schema:
              properties:
                defaultWorkflowUid:
                  description: >-
                    The default workflow that should be used when content is
                    authorized. If not specified, the default workflow
                    configured for the project will be used.
                  example: ac48ht4qy
                  type: string
                localeId:
                  description: >-
                    The locale identifier (localeId) of the locale to be added
                    to the project.
                  example: ru-RU
                  type: string
              type: object

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetailsSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                      - accountUid: at724e365
                        archived: false
                        projectId: fd7244365
                        projectName: Android XML Content
                        projectTypeCode: APPLICATION_RESOURCES
                        sourceLocaleDescription: English
                        sourceLocaleId: en-US
                        targetLocales:
                        - description: German (Germany)
                          enabled: true
                          localeId: de-DE
                        - description: Russian (Russia)
                          enabled: true
                          localeId: ru-RU
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /projects-api/v2/projects/{projectId}/copy:
    post:
      summary: Copy an existing project
      tags:
      - Account & Projects
      description: >
        Make a copy of an existing project, thereby creating a new one with a
        new name
      operationId: copyProject

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string

      requestBody:
        content:
          application/json:
            schema:
              properties:
                projectName:
                  description: The name of the new project to create.
                  example: New Android Project
                  type: string
                targetLocaleIds:
                  description: >-
                    The list of target locales the new project should be created
                    for. Note, each target locale specified must valid within
                    the source project you are copying, i.e. you can copy all or
                    a subset of locales from the source project to the target
                    project.
                  example:
                  - ru-RU
                  items:
                    type: string
                  type: array
              type: object

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCopySuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        processUid: 7908ae61-3489-48e1-9e28-10652634d34e
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /projects-api/v2/projects/{projectId}/copy/{processUid}:
    get:
      tags:
      - Account & Projects
      description: >
        Used to check if the copy project request is complete and to retrieve
        the new projectId
      summary: Get the status of the project copy request
      operationId: getProjectCopyRequestStatus

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: The uid of the process to check for
        in: path
        name: processUid
        required: true
        schema:
          type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCopyProcessSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        createdDate: '2016-08-21T0B1:51:17Z'
                        modifiedDate: '2016-08-21T0B1:51:17Z'
                        newProjectUid: 8t7q4d643
                        processState: OPEN
                        processStatistics:
                          errored: 0
                          processed: 6
                          requested: 8
                          skipped: 0
                        processuid: 7908ae61-3489-48e1-9e28-10652634d34e
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

#
# Locales API
#

  /locales-api/v2/dictionary/locales:
    get:
      summary: List locales
      tags:
      - Locales
      description: |
        The list of available locales within Smartling.

        To find out the `localedID` for a specific project, refer to [Get project
        details](https://api-reference.smartling.com/#tag/Account-and-Projects%2Fpaths%2F~1projects-api~1v2~1projects~1%7BprojectId%7D%2Fget).
      operationId: getAvailableLocalesList

      parameters:
      - description: Optional parameter to filter to the specified list of locales.
        in: query
        name: localeIds
        required: false
        schema:
          items:
            type: string
          type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesAPISuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - description: English
                          language:
                            description: English
                            direction: RTL
                            languageId: en
                            wordDelimiter: CHARACTER
                          localeId: en
                        - country:
                            countryId: US
                            description: United States
                          description: English (United States)
                          language:
                            description: English
                            direction: RTL
                            languageId: en
                            wordDelimiter: CHARACTER
                          localeId: en-US
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

#
# File API
#
  /files-api/v2/projects/{projectId}/file:
    post:
      summary: Upload file
      description: |
        This uploads original source content to Smartling.

        The curl example provided will upload your Java properties file directly
        into the Smartling project identified by the `projectId`. Smartling will
        ingest this file, parse out the keys and text as strings for
        translation. At this point, content is ready for translation.
      operationId: uploadSourceFile

      tags:
      - Files
      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          format: uid
          type: string

      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: The file contents to upload.
                fileUri:
                  type: string
                  description: |
                    A value that uniquely identifies the uploaded file. This ID
                    can be used to request the file back. We recommend that you
                    use file path and file name, similar to how version control
                    systems identify the file.

                    Example: `/myproject/i18n/ui.properties`
                fileType:
                  $ref: '#/components/schemas/FileType'
                authorize:
                  type: boolean
                  default: false
                  description: |
                    Determines whether content in the file is authorized
                    (available for translation) in all locales upon submitting
                    the file via the Smartling Dashboard. An error message will
                    be returned if there are insufficient translation funds and
                    authorized is set to `true`. If a string has been completely
                    excluded for translation from all languages, or excluded
                    from translation for a specific language, `authorize` will
                    NOT authorize it.

                    To specify a limited list of locales to authorize, use the
                    `localeIdsToAuthorize[]` parameter.

                      Value | Description
                      ----- | -----------
                      true  |  Content will be available for translation in all locales upon upload.
                      false |  Content will be added to the "Awaiting Authorization" queue upon upload.
                'localeIdsToAuthorize[]':
                  description: |
                    This value, if set, authorizes strings for translation into
                    specific locales. Use the `project/locale/list` call to get
                    the list of locales for the project, or view them in the
                    dashboard on the API settings page. Use multiple the
                    `localeIdsToAuthorize` parameter pairs to authorize more
                    than one locale. You can add languages by uploading the file
                    again and indicating the language to authorize with
                    `localeIdsToAuthorize` or all languages with `authorize`, or
                    in the dashboard using the "Show Partially Authorized"
                    filter option from the Awaiting Authorization list.

                    If the string has been completely excluded for translation
                    from all languages, or excluded from translation for a
                    specific language, `localesIdsToAuthorize` will NOT
                    authorize it.

                    **Note**: Do not set the `authorize` parameter to `true` if
                    you want to specify individual locales to authorize.
                    Submitting an upload with both of these parameters set will
                    result in a validation error.
                  items:
                    type: string
                  type: array
                smartling.namespace:
                  type: string
                  description: |
                    This is only for accounts created after July 31st, 2015. Define a custom
                    [namespace](https://help.smartling.com/hc/en-us/articles/360008143833)
                    for the file.

                    **Note**: While this parameter shares the format of other
                    file directives, it will not work as an inline directive and
                    must be specified in the API call.
                smartling.file_charset:
                  type: string
                  description: |
                    Specifies a custom charset for text-format files. The value
                    should be the name of the character set. See a full list of
                    supported character sets here.

                    If this directive is not used, Smartling will use the
                    ```Content-Type``` request header to determine if the
                    content is encoded with UTF-16, UTF-16B or UTF-16LE. If
                    there is no ```Content-Type``` header, Smartling will
                    examine the file for UTF-16 characters. If none are
                    detected, UTF-8 encoding will be used.

                    **Note**: Once this property has been set for a file, it
                    cannot be changed. If you reupload the file, it will use the
                    original charset, even if you change the directive. An error
                    will be returned if this directive is used when uploading
                    binary-format file types, such as Office or IDML files.
                'smartling.[command]':
                  type: string
                  description: |
                    Provides custom parser configuration for supported file
                    types. See [Supported File Types](https://help.smartling.com/hc/en-us/articles/360007998893)
                    for more details.
                callbackUrl:
                  type: string
                  format: url
                  description: |
                    A GET request that creates a callback to a URL when a file
                    is 100% published for a locale. The callback gives the
                    fileUri and locale with the format
                    `http[/s]://your.url?locale=xx-XX&fileUri=your.file`. If you
                    upload the file again, without a callbackUrl, it will remove
                    any previous callbackUrl for that file. The RequestBin
                    (http://requestb.in) service is a convenient way to test a
                    callback. RequestBin generates a short-lived disposable URL
                    that displays all posted requests.

                    If a callback fails, Smartling will make multiple attempts
                    to reach the designated URL. However, we do not keep
                    retrying a failed callback indefinitely. Try to make sure
                    your callback URL is as stable as possible and be aware that
                    callbacks are not a 100% reliable way of being notified that
                    a file is published.

                    If the upload has begun but is taking more than a minute to
                    complete, it responds with a `202` status.
              required:
              - file
              - fileUri
              - fileType
              type: object
        required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIUploadSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        overWritten: true
                        stringCount: 10
                        wordCount: 2
        '202':
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIUploadAcceptedResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        message: >-
                          Your file was successfully uploaded. Word and string
                          counts are not available right now.
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        '423':
          description: >-
            The requested file is currently being processed by another
            operation. The file will be unlocked after the operation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error423Response'
              examples:
                response:
                  value:
                    response:
                      code: RESOURCE_LOCKED
                      errors:
                        key: resource.locked
                        message: >-
                          The file is currently being processed and will be
                          available in a few minutes.
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken"
          -F "file=@$uploadFilePath;type=text/plain"
          -F "fileUri=$uploadFileSmartlingUri" -F "fileType=$uploadFileSmartlingType"
          "https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file"

    get:
      summary: Download source file
      description: |
        This downloads the original version of the requested file from
        Smartling.

        It is important to check the HTTP response status code. If Smartling
        finds and returns the file normally, you will receive a `200` SUCCESS
        response. If you receive a response status code other than `200`, the
        requested file will not be part of the response.

        When you upload a UTF-16 character encoded file, then /file/get requests
        for that file will have a character encoding of UTF-16. All other
        uploaded files will return with a character encoding of UTF-8.

        You can always use the content-type header in the response of a file/get
        request to determine the character encoding.

        The filename is based on the fileUri associated with the requested file.
        In most cases, the filename is exactly the fileUri provided. The only
        exception to this is with .pot gettext files. When a .pot file is
        specified as the fileUri, Smartling returns a .po file.
      tags:
      - Files
      operationId: downloadSourceFile

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: fileUri
        description: Value that uniquely identifies the downloaded file.
        in: query
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -G --data-urlencode
          "fileUri=$smartlingFileUri"
          "https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file"

  '/files-api/v2/projects/{projectId}/file/status':
    get:
      summary: Status of file for each locale
      tags:
      - Files
      description: |
        Returns information on a specific file.

        **Example:**
        ```bash
          curl -X GET -H "Authorization: Bearer {token}" 'https://api.smartling.com/files-api/v2/projects/{projectId}/file/status?fileUri=file.properties'
        ```
      operationId: getFileTranslationStatusAllLocales

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: fileUri
        description: Smartling value that uniquely identifies a file in Smartling
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIStatusAllLocalesSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        created: '2017-09-06T20:29:15Z'
                        directives:
                          file_uri_as_namespace: 'true'
                        fileType: csv
                        fileUri: /files/test_translation_import.csv
                        hasInstructions: false
                        items:
                        - authorizedStringCount: 0
                          authorizedWordCount: 0
                          completedStringCount: 0
                          completedWordCount: 0
                          excludedStringCount: 0
                          excludedWordCount: 0
                          localeId: ru-RU
                        lastUploaded: '2017-09-06T20:29:15Z'
                        namespace:
                          name: /files/test_trans_import.csv
                        parserVersion: 4
                        totalCount: 1
                        totalStringCount: 1
                        totalWordCount: 1
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/files-api/v2/projects/{projectId}/locales/{localeId}/file/status':
    get:
      summary: Status of file for a single locale
      description: |
        Returns detailed status information on a specific file.

        **Example:**
        ```bash
        curl -X GET -H "Authorization: Bearer {token}" 'https://api.smartling.com/files-api/v2/projects/{projectId}/locales/{localeId}/file/status?fileUri=file.properties'
        ```
      tags:
      - Files
      operationId: getFileTranslationStatusSingleLocale

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Identifier for a locale.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      - description: Smartling value that uniquely identifies a file in Smartling
        in: query
        name: fileUri
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIStatusSingleLocaleSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        authorizedStringCount: 4
                        authorizedWordCount: 5
                        completedStringCount: 0
                        completedWordCount: 0
                        created: '2017-05-27T12:45:36Z'
                        excludedStringCount: 0
                        excludedWordCount: 0
                        fileType: javaProperties
                        fileUri: /files/4.properties
                        hasInstructions: false
                        lastUploaded: '2017-05-27T12:45:36Z'
                        parserVersion: 4
                        totalStringCount: 5
                        totalWordCount: 9
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /files-api/v2/projects/{projectId}/locales/{localeId}/file:
    get:
      summary: Download translated file (single locale)
      tags:
      - Files
      description: |
        This downloads the requested file from Smartling.

        It is important to check the HTTP response status code. If Smartling
        finds and returns the file normally, you will receive a `200` SUCCESS
        response. If you receive any other response status code other than
        `200`, the requested file will not be part of the response.

        When you upload a UTF-16 character encoded file, then /file/get requests
        for that file will have a character encoding of UTF-16. All other
        uploaded files will return with a character encoding of UTF-8.

        You can always use the content-type header in the response of a file/get
        request to determine the character encoding.

        **Note**: The filename in the response header is based on the fileUri
        associated with the requested file. In most cases, the filename is
        exactly the fileUri provided. The only exception to this is with .pot
        gettext files. When a .pot file is specified as the fileUri, Smartling
        returns a .po file.`
      operationId: downloadTranslatedFileSingleLocale

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: localeId
        description: Identifier for a locale.
        in: path
        required: true
        schema:
          type: string
      - name: fileUri
        description: Value that uniquely identifies the downloaded file
        in: query
        required: true
        schema:
          type: string
      - name: retrievalType
        description: |
          Determines the desired format for the download. Applies to translated files only.

          | retrievalType | Description |
          |---------------|-------------|
          | pending | Smartling returns any translations (including non-published translations)|
          | published | Smartling returns only published/pre-published translations.|
          | pseudo | Smartling returns a modified version of the original text with certain characters transformed and the text expanded. For example, the uploaded string "This is a sample string", will return as "T~hís ~ís á s~ámpl~é str~íñg". Pseudo translations enable you to test how a longer string integrates into your application.|
          | contextMatchingInstrumented | Smartling returns a modified version of the original file with strings wrapped in a specific set of Unicode symbols that can later be recognized and matched by the Chrome Context Capture Extension.|
        in: query
        required: false
        schema:
          enum:
          - pending
          - published
          - pseudo
          - contextMatchingInstrumented
          type: string
      - name: includeOriginalStrings
        description: |
          Specifies whether Smartling will return the original string or an
          empty string where no translation is available. This parameter is
          only supported for Android XML, gettext, Java properties, custom
          XML, and JSON files.

          | Value | Description |
          |-------|-------------|
          | true | If there is no translation, Smartling returns the original string. |
          | false | If there is no translation, Smartling returns an empty string. |
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -o $smartlingLocaleId$smartlingFileUri
          -G --data-urlencode "fileUri=$smartlingFileUri"
          "https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/locales/$smartlingLocaleId/file"

  /files-api/v2/projects/{projectId}/locales/all/file/zip:
    get:
      summary: Download all translations of file
      description: |
        Download a ZIP archive with all translations for the requested file.

        Unlike the "Download translated file" endpoint, you get a ZIP archive
        with all translations of a specific file.

        It is important to check the HTTP response status code. If Smartling
        finds and returns the file normally, you will receive a `200` SUCCESS
        response. If you receive any other response status code than `200`, the
        requested files will not be part of the response.

        When you upload a UTF-16 character encoded file, then /file/get requests
        for that file will have a character encoding of UTF-16. All other
        uploaded files will return with a character encoding of UTF-8.

        You can always use the content-type header in the response of a file/get
        request to determine the character encoding.
      tags:
      - Files
      operationId: downloadTranslatedFilesAllLocales

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: fileUri
        description: Smartling value that uniquely identifies a file in Smartling
        in: query
        required: true
        schema:
          type: string
      - name: retrievalType
        description: |
          Determines the desired format for the download. Applies to translated files only.

          | retrievalType | Description |
          |---------------|-------------|
          | pending | Smartling returns any translations (including non-published translations).|
          | published | Smartling returns only published/pre-published translations.|
          | pseudo | Smartling returns a modified version of the original text with certain characters transformed, and the text expanded. For example, the uploaded string "This is a sample string", will return as "T~hís ~ís á s~ámpl~é str~íñg". Pseudo translations enable you to test how a longer string integrates into your application.|
          | contextMatchingInstrumented | Smartling returns a modified version of the original file with strings wrapped in a specific set of Unicode symbols that can later be recognized and matched by the Chrome Context Capture Extension.|
        in: query
        required: false
        schema:
          enum:
          - pending
          - published
          - pseudo
          - contextMatchingInstrumented
          type: string
      - name: includeOriginalStrings
        description: |
          Specifies whether Smartling will return the original string or an
          empty string where no translation is available. This parameter is
          only supported for Android XML, gettext, Java properties, custom
          XML, and JSON files.

          | Value | Description |
          |-------|-------------|
          | true | If there is no translation, Smartling returns the original string. |
          | false | If there is no translation, Smartling returns an empty string. |
        in: query
        required: false
        schema:
          type: boolean
      - name: zipFileName
        description: Name for the downloaded zip file. If unset, the default is ```translations.zip```
        in: query
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken"
          'https://api.smartling.com/files-api/v2/projects/{projectId}/locales/all/file/zip?fileUri=yourfile.json&retrievalType=published'

  '/files-api/v2/projects/{projectId}/files/zip':
    get:
      summary: Download multiple translated files
      description: |
        Download ZIP archive with the requested translated files.

        Unlike "Download all translations of the file" you can specify multiple
        file URIs and locale IDs to select which files and languages you want to download.

        It is important to check the HTTP response status code. If Smartling
        finds and returns the file normally, you will receive a `200` SUCCESS
        response. If you receive any other response status code than `200`, the
        requested files will not be part of the response.

        When you upload a UTF-16 character encoded file, then /file/get requests
        for that file will have a character encoding of UTF-16. All other
        uploaded files will return with a character encoding of UTF-8.

        You can always use the content-type header in the response of a file/get
        request to determine the character encoding.

        **Example:**

        ```bash
          curl -X GET -H "Authorization: Bearer {token}" 'https://api.smartling.com/files-api/v2/projects/{projectId}/files/zip?localeIds[]=de-DE&fileUris[]=yourfile.json'
        ```
      tags:
      - Files
      operationId: downloadMultipleTranslatedFiles

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: 'fileUris[]'
        description: Smartling values that each uniquely identify a file.
        explode: true
        in: query
        required: true
        schema:
          items:
            type: string
          type: array
      - name: 'localeIds[]'
        description: List of locales to download.
        explode: true
        in: query
        required: true
        schema:
          items:
            type: string
          type: array
      - name: retrievalType
        description: |
          Determines the desired format for the download. Applies only to
          translated files.

          | retrievalType | Description |
          |---------------|-------------|
          | pending | Smartling returns any translations (including non-published translations)|
          | published | Smartling returns only published/pre-published translations.|
          | pseudo | Smartling returns a modified version of the original text with certain characters transformed and the text expanded. For example, the uploaded string "This is a sample string", will return as "T~hís ~ís á s~ámpl~é str~íñg". Pseudo translations enable you to test how a longer string integrates into your application.|
          | contextMatchingInstrumented | Smartling returns a modified version of the original file with strings wrapped in a specific set of Unicode symbols that can later be recognized and matched by the Chrome Context Capture Extension.|
        in: query
        required: false
        schema:
          enum:
          - pending
          - published
          - pseudo
          - contextMatchingInstrumented
          type: string
      - name: includeOriginalStrings
        description: |
          Specifies whether Smartling will return the original string or an
          empty string where no translation is available. This parameter is
          only supported for Android XML, gettext, Java properties, custom
          XML, and JSON files.

          | Value | Description |
          |-------|-------------|
          | true | If there is no translation, Smartling returns the original string. |
          | false | If there is no translation, Smartling returns an empty string. |
        in: query
        required: false
        schema:
          type: boolean
      - name: fileNameMode
        description: |
          Determines how files in the ZIP file will be named. If not set, the
          full original file path will be used as the filename.

          | fileNameMode | Description |
          |--------------|-------------|
          | UNCHANGED | Full original file path is used |
          | TRIM_LEADING | Remove all except the last path segment. e.g. ```/en/strings/nav.properties``` becomes ```nav.properties```|
          | LOCALE_LAST | Adds a locale folder to the file path directly before the filename. e.g. ```/strings/nav.properties``` becomes ```/strings/en/nav.properties``` |
        in: query
        required: false
        schema:
          enum:
          - UNCHANGED
          - TRIM_LEADING
          - LOCALE_LAST
          type: string
      - name: localeMode
        description: |
          Determines how locales will be handled in the downloaded zip

          | localeMode | Description |
          |------------|-------------|
          | LOCALE_IN_PATH | Locale code is added to the end of the file path. e.g. ```/strings/es-ES/nav.properties```. |
          | LOCALE_IN_NAME | Locale code is added to the end of the file name e.g. ```/strings/nav_es-ES.properties```. |
          | LOCALE_IN_NAME_AND_PATH | Locale code is added to both the path and the filename. e.g. ```/strings/es-ES/nav_es-ES.properties```. |
        in: query
        required: false
        schema:
          enum:
          - LOCALE_IN_PATH
          - LOCALE_IN_NAME
          - LOCALE_IN_NAME_AND_PATH
          type: string
      - name: zipFileName
        description: Name for the downloaded ZIP file. If unset, default is ```translations.zip```
        in: query
        required: false
        schema:
          type: string

      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/files-api/v2/projects/{projectId}/files/list':
    get:
      summary: List recently uploaded files
      description: This lists recently uploaded files, and returns a maximum of 100 files.
      tags:
      - Files
      operationId: getRecentlyUploadedSourceFilesList

      parameters:
      - name: projectId
        description: A unique identifier for a project.
        in: path
        required: true
        schema:
          type: string
      - name: uriMask
        description: >
          Returns only files with a URI containing the given substring. Case
          is ignored. For example, the value ```.json``` will match
          ```strings.json``` and ```STRINGS.JSON``` but not ```json.strings```
        in: query
        required: false
        schema:
          type: string
      - name: 'fileTypes[]'
        explode: true
        in: query
        required: false
        schema:
          items:
            $ref: '#/components/schemas/FileType'
          type: array
      - name: lastUploadedAfter
        description: Returns all files uploaded after the specified date.
        in: query
        required: false
        schema:
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
      - name: lastUploadedBefore
        description: Returns all files uploaded before the specified date.
        in: query
        required: false
        schema:
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
      - name: orderBy
        description: >
          Sets the name and direction of the parameter to order results by. If
          ascending or descending is not specified, the default is ascending
        in: query
        schema:
          enum:
          - created
          - fileUri
          - lastUploaded
          - created_asc
          - created_desc
          - fileUri_asc
          - fileUri_desc
          - lastUploaded_asc
          - lastUploaded_desc
          type: string
      - name: limit
        description: >
          In order to get consistent pagination, make sure to specify the
          ```orderBy``` parameter.
        in: query
        required: false
        schema:
          default: 100
          type: integer
      - name: offset
        description: Standard Smartling limit and offset to paginate through results.
        in: query
        required: false
        schema:
          default: 0
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIListFilesSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - created: '2017-09-06T20:29:15Z'
                          fileType: csv
                          fileUri: /files/translation_import.csv
                          hasInstructions: false
                          lastUploaded: '2017-09-06T20:29:15Z'
                        - created: '2017-05-27T12:45:36Z'
                          fileType: javaProperties
                          fileUri: /files/4.properties
                          hasInstructions: false
                          lastUploaded: '2017-05-27T12:45:36Z'
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          "https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/files/list?fileTypes[]=json&uriMask=strings"

  '/files-api/v2/projects/{projectId}/file-types':
    get:
      summary: List all file types
      description: >
        This returns a list of all file types currently represented in the project.
      tags:
      - Files
      operationId: getFileTypesList

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIListFileTypesSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - csv
                        - javaProperties
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          "https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file-types"

  '/files-api/v2/projects/{projectId}/file/rename':
    post:
      summary: Rename file
      description: >
        This renames an uploaded file by changing the `fileUri`. After renaming
        the file, it will only be identified by the new `fileUri` that you
        provide.
      tags:
      - Files
      operationId: renameUploadedSourceFile

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                fileUri:
                  description: Current value that uniquely identifies the file
                  type: string
                newFileUri:
                  description: >
                    The new value for fileUri. We recommend that you use file
                    path and file name, similar to how version control systems
                    identify the file. Example: /myproject/i18n/ui.properties.
                    This must be a fileUri that does not exist in the current
                    Smartling project.
                  type: string
              required:
              - fileUri
              - newFileUri
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken"
          -F "fileUri=filename.properties" -F "newFileUri=filename2.properties"
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file/rename'

  '/files-api/v2/projects/{projectId}/file/delete':
    post:
      summary: Delete file
      description: >
        This removes the file from Smartling. The file will no longer be
        available for download. Any complete translations for the file remain
        available for use within the system.


        Smartling deletes files asynchronously and it typically takes a few
        minutes to complete. While deleting a file, you can not upload a file
        with the same `fileUri`.
      tags:
      - Files
      operationId: deleteUploadedSourceFile

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                fileUri:
                  description: Smartling value that uniquely identifies a file in Smartling
                  type: string
              required:
              - fileUri
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -F
          "fileUri=filename.properties"
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file/delete'

  '/files-api/v2/projects/{projectId}/locales/{localeId}/file/last-modified':
    get:
      summary: Last modified date (single locale)
      description: >
        This returns the date that a file was last modified in a specified locale.
      tags:
      - Files
      operationId: getTranslatedFileLastModifiedDateSingleLocale

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Identifier for a locale.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      - description: A unique identifier for a file in Smartling.
        in: query
        name: fileUri
        required: true
        schema:
          type: string
      - description: >-
          Limits the return to only those file and locale combinations that
          have a ```lastModified``` date after the
          ```lastModifiedAfter```parameter . The items array will be empty if
          the file has not been modified in any of the locales since the
          `lastModifiedAfter` date specified.
        in: query
        name: lastModifiedAfter
        required: false
        schema:
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPILastModifiedSingleLocaleSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        lastModified: '2017-09-06T20:25:18Z'
                        localeId: ru-RU
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken"
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/locales/$smartlingLocaleId/file/last-modified?fileUri=filename.properties'

  '/files-api/v2/projects/{projectId}/file/last-modified':
    get:
      summary: Last modified date (all locales)
      description: |
        This returns the date that a file was last modified in each locale.
      tags:
      - Files
      operationId: getTranslatedFileLastModifiedDateAllLocales

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: A unique identifier for a file in Smartling.
        in: query
        name: fileUri
        required: true
        schema:
          type: string
      - description: >-
          Limits the return to only those file and locale combinations that
          have a ```lastModified``` date after the parameter
          ```lastModifiedAfter```. The items array will be empty if the file
          has not been modified in any of the locales since the
          `lastModifiedAfter` date specified.
        in: query
        name: lastModifiedAfter
        required: false
        schema:
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPILastModifiedAllLocalesSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - lastModified: '2017-09-06T20:25:18Z'
                          localeId: ru-RU
                        totalCount: 1
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken"
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/file/last-modified?fileUri=filename.properties'

  '/files-api/v2/projects/{projectId}/locales/{localeId}/file/import':
    post:
      summary: Import translations
      description: ''
      tags:
      - Files
      operationId: importFileTranslations

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Identifier for a locale.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: The file contents to upload.
                fileUri:
                  description: >-
                    The Smartling URI for a file that contains the original
                    language strings that are already uploaded to Smartling.
                  type: string
                fileType:
                  description: >-
                    Unique identifier for the file type. To allow translation
                    imports, XML and JSON files must be uploaded with
                    `source_key_paths` defined.
                  enum:
                  - android
                  - ios
                  - gettext
                  - java_properties
                  - yaml
                  - xml
                  - json
                  - qt
                  - resx
                  - csv
                  - pres
                  - stringsdict
                  - srt
                  type: string
                translationState:
                  description: |
                    Value indicating the workflow state to import the translations into.
                    Content will be imported into the language's default workflow.

                    | Value | Description |
                    |-------|-------------|
                    | PUBLISHED | The translated content is published. |
                    | POST_TRANSLATION | The translated content is imported into the first step after translation - if there is none, it will be published. |
                  enum:
                  - PUBLISHED
                  - POST_TRANSLATION
                  type: string
                overwrite:
                  description: Whether or not to overwrite existing translations.
                  type: boolean
              required:
              - file
              - fileUri
              - fileType
              - translationState
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPITranslationImportSuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        stringCount: 3
                        translationImportErrors: []
                        wordCount: 6
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -F
          "file=@filename.properties" -F "fileUri=filename.properties" -F
          "fileType=javaProperties" -F "translationState=PUBLISHED"
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/locales/$smartlingLocaleId/file/import'

  '/files-api/v2/projects/{projectId}/locales/{localeId}/file/get-translations':
    post:
      summary: Export translations
      description: >
        Temporarily uploads a file, then returns a translated version for
        requested locales.


        This call can be used instead of a standard upload/download if you keep
        different versions of a file in multiple branches or are triggering
        rebuilds, and don’t want your files in Smartling to be overwritten by
        out-of-date versions of a file.


        To use the call, you upload a file and identify the Smartling URI where
        the main version of that file is saved. Smartling will match strings
        shared between the uploaded file and the main file and return any
        available translations.
      tags:
      - Files
      operationId: exportFileTranslations

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Identifier for a locale.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                fileUri:
                  description: >-
                    The Smartling URI for a file that contains the original
                    language strings that are already uploaded to Smartling
                  type: string
                retrievalType:
                  description: |
                    Determines the desired format for the download. Applies to
                    translated files only.

                    | retrievalType | Description |
                    |---------------|-------------|
                    | pending | Smartling returns any translations (including non-published translations).|
                    | published | Smartling returns only published/pre-published translations.|
                    | pseudo | Smartling returns a modified version of the original text with certain characters transformed and the text expanded. For example, the uploaded string "This is a sample string", will return as "T~hís ~ís á s~ámpl~é str~íñg". Pseudo translations enable you to test how a longer string integrates into your application.|
                    | contextMatchingInstrumented | Smartling returns a modified version of the original file with strings wrapped in a specific set of Unicode symbols that can later be recognized and matched by the Chrome Context Capture Extension.|
                  enum:
                  - pending
                  - published
                  - pseudo
                  - contextMatchingInstrumented
                  type: string
                includeOriginalStrings:
                  description: |
                    Specifies whether Smartling will return the original string
                    or an empty string where no translation is available. This
                    parameter is only supported for Android XML, gettext, Java
                    properties, custom XML, and JSON files.

                    | Value | Description |
                    |-------|-------------|
                    | true | If there is no translation, Smartling returns the original string. |
                    | false | If there is no translation, Smartling returns an empty string. |
                  type: boolean
              required:
              - fileUri
              type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -F
          "file=@filename.properties" -F 'fileUri=filename.properties'
          'https://api.smartling.com/files-api/v2/projects/$smartlingProjectId/locales/$smartlingLocaleId/file/get-translations'

#
# Context API endpoints
#

  /context-api/v2/projects/{projectId}/contexts:
    post:
      summary: Upload new context
      description: |-
        Uploads a file or web link that can be linked to translations and shown
        to linguists as visual context for the strings they're working on.

        The following context types are supported:

        - **HTML**: HTML files or files with content type text/html
        - **Image**: Image files
        - **VIDEO**: Public link to a video, such as:
          - YouTube link
          - Vimeo link
          - Link to an .mp4 file

        Context type is not specified directly, but rather, inferred via
        analyzing the request body.

        This endpoint accepts *multipart/form-data* request body.
      tags:
      - Context
      operationId: uploadNewVisualContext

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                content:
                  type: string
                  format: binary
                  description: |-
                    The context file to upload.
                    If specified, it should be one of the supported content types:
                     - `image/\*`
                     - `text/html`

                    Maximum file upload size is `20MB`.

                    **Note**: Should be omitted for video context.
                name:
                  description: |
                    Context name. Will override context file name if specified.
                    Parameter meanings for different context types:

                    |Context Type|Meaning|
                    |----------|--------|
                    | `HTML` | Context URL or file name. If a valid URL is used, all relative links to resources within the context file will be resolved based on this URL. If the file name is used, the context file should have the `<base />` tag specified with the valid URL to resolve all relative links to resources. In all other cases, links to resources will not be resolved and the context might not show correctly. Defaults to context file name if not specified. |
                    | `IMAGE` | Image file name defaults to context file name if not specified. |
                    | `VIDEO` | Publicly available link to video. Required for this context type. |
                  type: string
              type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        contextType: IMAGE
                        contextUid: 6e66fe6b-b508-4849-9e65-1e502d65755d
                        created: '2017-05-03T20:47:38Z'
                        name: image.png
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      data:
                        errors:
                        - key: wrong_parameters
                          message: >-
                            Check request parameters, error message - 'Content
                            stream is required for this context.', ref id:
                            'af4706d9-c5c1-40aa-93e4-1ec3498c1f05'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
    get:
      summary: List contexts for the project
      description: |
        Returns a paginated list of metadata for all contexts in a project.

        Response is limited to *100* items, to retrieve all items the request
        should be repeated with **offset** parameter specified.
      tags:
      - Context
      operationId: getVisualContextsListByProject

      parameters:
      - description: Unique identifier of a project.
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Context name (or url) filter.
        in: query
        name: nameFilter
        required: false
        schema:
          type: string
      - description: |-
          If your original request returns an *offset* value, the set of results is incomplete.
          Run the request again, with the given offset value to see more results.
          When offset is null, there are no more results to return.
        in: query
        name: offset
        required: false
        schema:
          type: string
      - description: Context type filter.
        in: query
        name: type
        required: false
        schema:
          enum:
          - IMAGE
          - HTML
          - VIDEO
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - contextType: IMAGE
                          contextUid: 6e66fe6b-b508-4849-9e65-1e502d65755d
                          created: '2016-12-19T17:28:29Z'
                          name: image.png
                        - contextType: IMAGE
                          contextUid: ac79677f-0e0a-4d01-b4e3-b94e2e6ba09c
                          created: '2016-11-11T13:23:32Z'
                          name: image-context.jpg
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/contexts/{contextUid}:
    get:
      summary: Get context info
      description: Retrieves basic information about the context.
      tags:
      - Context
      operationId: getVisualContextInfo

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier of a context
        in: path
        name: contextUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        contextType: VIDEO
                        contextUid: 6e66fe6b-b508-4849-9e65-1e502d65755d
                        created: '2017-05-03T20:47:38Z'
                        name: 'http://custom-video-hosting.com/path/to/video.mp4'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        '404':
          description: Context not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found_error
                        message: >-
                          Context not found, ref id:
                          '9d0f96fa-9969-487f-8cfd-639b41d9c9ec'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
    delete:
      summary: Delete the context
      description: |-
        Removes the context metadata and the content.
        All linked context resources (e.g. CSS, images, and fonts) will also eventually be cleaned up if no other context has them linked.
        As well, bindings of this context to strings are removed, and strings are marked as having no context.
      tags:
      - Context
      operationId: deleteVisualContext

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier of a context
        in: path
        name: contextUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        '404':
          description: Context not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found_error
                        message: >-
                          Context not found, ref id: 'ffd90ec4-5ca8-4720-8ecf-15dce3404823'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/contexts/{contextUid}/content:
    get:
      summary: Download context file content
      description: |-
        Returns the context content:

        |Context Type|Content|
        |---------|--------|
        |`HTML`|HTML document enriched with `data-sl-anchor` attributes for most of the elements, also known as *binding anchors*.|
        |`IMAGE`| Binary image data. Response is accompanied with appropriate `Content-Type` header.|
        |`VIDEO`| Empty response.|
      tags:
      - Context
      operationId: downloadVisualContextFileContent

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier of a context
        in: path
        name: contextUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            '*/*':
              schema:
                type: string
                format: binary
            text/html:
              schema:
                type: string
              examples:
                response:
                  value: |-
                    <html>
                      <head>
                        <title>Document title</title>
                      </head>
                      <body>
                        <div data-sl-anchor="11">html file contents</div>
                      </body>
                    </html>
          description: OK
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        '404':
          description: Context not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found_error
                        message: >-
                          Context not found, ref id:
                          'ffd90ec4-5ca8-4720-8ecf-15dce3404823'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/contexts/upload-and-match-async:
    post:
      summary: Upload HTML file and match strings to create context bindings
      description: |-
        Uploads new HTML context and asynhronously matches it with strings.
        Strings to match are retrieved from the project specified by the `projectId` and
        can be filtered further by the optional `matchParams` parameter.

        If the uploaded file doesn't match any string, the context won't be created.
        Supported for `HTML` context only.
        Example of the raw request accepted by this API:
        ```
        Content-Type: multipart/form-data; boundary
        ----------------------------293641908835402749402839
        Content-Disposition: form-data; name="content"; filename="1.html"
        Content-Type: text/html
        <html>
          <body>
            <div> bla</div>
          </body>
        </html>
        ----------------------------293641908835402749402839
        Content-Disposition: form-data; name="name"
        bla2.html
        ----------------------------293641908835402749402839
        Content-Disposition: form-data; name="matchParams"
        Content-Type: application/json
        {
          "contentFileUri":"bla.html",
          "stringHashcodes": [],
          "overrideContextOlderThanDays": 1
        }
        ```
      tags:
      - Context
      operationId: uploadAndMatchVisualContext

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                content:
                  type: string
                  format: binary
                  description: |-
                    The context file part with content type. Supported content type is `text/html`.
                name:
                  description: |-
                    Context URL or whatever has to be served as context name.
                    Overrides the filename in the `content` part.
                  type: string
                matchParams:
                  description: |-
                    String representation of `MatchRequest` JSON object
                    Array of string hashcodes to match against, and/or context override specifier.
                    If the string hashcodes are not specified, all strings from the project will be included in the match.
                    If context override is not specified, *strings with existing context will not be bound to this context*.
                  type: string
              type: object
              required:
                - content
        required: true
      responses:
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncMatchResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        matchId: ffd90ec4-5ca8-4720-8ecf-15dce3404823
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      data:
                        errors:
                        - key: wrong_parameters
                          message: >-
                            Check request parameters, error message - 'Content
                            stream is required for this context.', ref id:
                            'af4706d9-c5c1-40aa-93e4-1ec3498c1f05'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/contexts/{contextUid}/match/async:
    post:
      summary: Run automatic context matching
      description: |-
        Automatically matches context against strings in the project and creates corresponding bindings.
        Optionally, you can restrict matching to only a set of strings that you specify to ensure that no unwanted
        bindings are created.

        Optical Character Recognition (OCR) is used for `IMAGE` context, while `HTML` context uses an approximate string matching algorithm.

        This is a convenient method provided to save time and complexity in your integration.
        While our OCR functionality is advanced, it cannot match 100% of strings. If you need complete context coverage,
        use either the manual Create Bindings request or check your context images in the Smartling Dashboard after
        running this request to fill in any blanks. Be mindful of the limitations of OCR if you are using an unusual or
        script-like font.
      tags:
      - Context
      operationId: runAutomaticContextMatching

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier of a context
        in: path
        name: contextUid
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchRequest'
        description: |-
          Array of string hashcodes to match against, and/or context override specifier.
          If string hashcodes are not specified, all strings from the project will be included in the match.
          If context override is not specified, strings with context will not be bound to this context.
      responses:
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncMatchResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        matchId: ffd90ec4-5ca8-4720-8ecf-15dce3404823
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - key: wrong_parameters
                        message: >-
                          Check request parameters, error message - 'Context
                          with Uid=cb081827-2daa-4611-915c-4d207829be27
                          doesn't exist', ref id:
                          '11f8b832-8154-4e6e-a196-a69a88009736'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/context-api/v2/projects/{projectId}/match/{matchId}':
    get:
      summary: Retrieve asynchronous match results
      description: |-
        Check the status of the match request and get results once the match is completed.
        When the match has been completed, any newly created bindings are also returned in the response.
      tags:
      - Context
      operationId: getAsyncContextMatchResults

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: >-
          Identifier of the match request obtained when running asynchronous
          match request.
        in: path
        name: matchId
        required: true
        schema:
          format: uuid
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncMatchStatsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        bindings:
                        - anchors:
                          - '11'
                          - custom.anchor
                          bindingUid: a9308883-30c7-4832-a023-6c3b10f6f9b1
                          contextUid: 428bf090-60fa-473d-ac07-4a551aa06c47
                          stringHashcode: 374825f7d147fb5700f23b2b22d6660d
                        - anchors:
                          - '12'
                          bindingUid: a9308883-30c7-4832-a023-6c3b10f6f9b1
                          contextUid: 428bf090-60fa-473d-ac07-4a551aa06c47
                          stringHashcode: 374825f7d147fb5700f23b2b22d6660d
                        createdDate: '2017-05-05T19:06:22Z'
                        matchId: a9308883-30c7-4832-a023-6c3b10f6f9b1
                        modifiedData: '2017-05-05T19:06:22Z'
                        status: COMPLETED
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Match request expired or does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found
                        message: Match not found
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/bindings/{bindingUid}:
    delete:
      summary: Remove binding of a string to a context
      description: |-
        Deletes a context binding.
        The context referenced by the binding will no longer be displayed for the referenced string in the CAT tool.
      tags:
      - Context
      operationId: deleteStringToContextBinding

      parameters:
      - description: Unique identifier of a project.
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier for the binding to be deleted.
        in: path
        name: bindingUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Not found response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found_error
                        message: Binding not found
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/contexts/{contextUid}/bindings:
    get:
      summary: Return all strings bindings for context
      description: |-
        Returns all bindings that reference the given context.
        Results are not paginated.
      tags:
      - Context
      operationId: getStringToContextBindingsByContext

      parameters:
      - description: Unique identifier of a project
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Unique identifier of a context
        in: path
        name: contextUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BindingsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - bindingUid: d6414f8c-4gdf-4415-9a69-f8e7902ca9ec
                          contextUid: 25137b65-e075-4341-8362-14b1a3e558f5
                          coordinates:
                            bottom: 400
                            left: 50
                            right: 400
                            top: 50
                          stringHashcode: bd603147d945h3ec74d6874422ebe4e0
                        totalCount: 1
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Context not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: not_found_error
                        message: >-
                          Context not found, ref id:
                          'ffd90ec4-5ca8-4720-8ecf-15dce3404823'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/strings/{stringHashcode}/bindings:
    get:
      summary: Get bindings for string
      description: Returns all bindings that reference a given string.
      tags:
      - Context
      operationId: getStringToContextBindingsByString

      parameters:
      - description: Unique identifier of a project.
        in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Hashcode for the string to get bindings for.
        in: path
        name: stringHashcode
        required: true
        schema:
          format: hash
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BindingsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - bindingUid: d6414f8c-4gdf-4415-9a69-f8e7902ca9ec
                          contextUid: 25137b65-e075-4341-8362-14b1a3e558f5
                          coordinates:
                            bottom: 400
                            left: 50
                            right: 400
                            top: 50
                          stringHashcode: bd603147d945h3ec74d6874422ebe4e0
                        totalCount: 1
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /context-api/v2/projects/{projectId}/bindings:
    post:
      summary: Create string to context bindings
      description: |-
        Link context files with the strings they contain.

        The binding tells Smartling to show Translators which context images for which strings.
        A maximum of `150` bindings can be created per request.

        A basic bindings request should contain an object with a `bindings` JSON array, with at least one element (binding) featuring `contextUid` and `stringHashcode` properties:
        ```JSON
        {
          "bindings": [
            {
               "contextUid": "25137b65-e075-4341-8362-14b1a3e558f5",
               "stringHashcode": "bd603147d945h3ec74d6874422ebe4e0"
            }
          ]
        }
        ```

        For `IMAGE` context, each binding may have additional `coordinates` data that specifies a rectangular area where the string is located in the image. If not specified, binding will still be created with coordinates `[0,0,0,0]`:
        ```JSON
        {
          "bindings": [
            {
               "contextUid": "25137b65-e075-4341-8362-14b1a3e558f5",
               "stringHashcode": "bd603147d945h3ec74d6874422ebe4e0",
               "coordinates": {
                  "top": 50,
                  "left": 50,
                  "width": 400,
                  "height": 400
               }
            }
          ]
        }
        ```

        For `HTML` context, each binding may have the `selector` element with `anchors` array, specifying the enclosing the string HTML elements with the corresponding value of the `data-sl-anchor` attribute.
        If not specified, binding will still be created with the empty `anchors` array, effectively making it not anchored to a particular element and thus invisible in CAT Tool:
        ```JSON
        {
          "bindings": [
            {
               "contextUid": "25137b65-e075-4341-8362-14b1a3e558f5",
               "stringHashcode": "bd603147d945h3ec74d6874422ebe4e0",
               "selector": {
                  "anchors": ["custom.anchor", "11", 44"]
               }
            }
          ]
        }
        ```

        For `VIDEO` context, each binding mave the `timecode` data, specifying the start and end time of the string appearance in the video:
        ```JSON
        {
          "bindings": [
            {
                "contextUid": "25137b65-e075-4341-8362-14b1a3e558f5",
                "stringHashcode": "bd603147d945h3ec74d6874422ebe4e0",
                "timecode": {
                   "startTime": 1203,
                   "endTime": 1450
                }
            }
          ]
        }
        ```
      tags:
      - Context
      operationId: createStringToContextBindings

      parameters:
        - description: Unique identifier of a project
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BindingsRequest'
        description: String-to-context bindings
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                          - bindingUid: d6414f8c-4gdf-4415-9a69-f8e7902ca9ec
                            contextUid: 25137b65-e075-4341-8362-14b1a3e558f5
                            stringHashcode: bd603147d945h3ec74d6874422ebe4e0
                            coordinates:
                              bottom: 400
                              left: 50
                              right: 400
                              top: 50
                        totalCount: 1
              schema:
                $ref: '#/components/schemas/CreateBindingsResponse'
          description: OK
        400:
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - key: wrong_parameters
                        message: >-
                          Please, limit number of bindings to no more than 150
                          in one request
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

#
# Issues API endpoints
#

  /issues-api/v2/dictionary/issue-states:
    get:
      summary: Get issue states
      description: >-
        This request returns all current allowed states. Currently, the only
        allowed issue states are `OPENED` and `RESOLVED`. However, in the
        future, Smartling may introduce additional states.
      tags:
      - Issues
      operationId: getAllIssuesStates
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - description: Opened
                          issueStateCode: OPENED
                        - description: Resolved
                          issueStateCode: RESOLVED
                        totalCount: 2
              schema:
                $ref: '#/components/schemas/IssueStatesResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/dictionary/issue-states

  /dictionary/issue-severity-levels:
    get:
      summary: Get issue severity levels
      description: Returns a list of issue severity levels.
      tags:
      - Issues
      operationId: getAllIssueSeverityLevels
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueSeverityLevelsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - description: Low
                          issueSeverityLevelCode: LOW
                        - description: Medium
                          issueSeverityLevelCode: MEDIUM
                        - description: High
                          issueSeverityLevelCode: HIGH
                        totalCount: 3
      x-code-samples:
        - lang: curl
          source: >
            curl -X GET -H "Authorization: Bearer $smartlingToken" -H
            "Content-Type: application/json"
            https://api.smartling.com/issues-api/v2/dictionary/issue-severity-levels

  /issues-api/v2/accounts/{accountUid}/issue-types:
    get:
      summary: Get account issue types
      description: >-
        This request returns all current issue types for a specific account.
        Smartling may occasionally add or change the list of allowed issue
        types.
      tags:
      - Issues
      operationId: getIssueTypesByAccount

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountIssueTypesResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - description: Source
                          issueTypeCode: SOURCE
                          subTypes:
                          - description: Clarification
                            issueSubTypeCode: CLARIFICATION
                          - description: Misspelling
                            issueSubTypeCode: MISSPELLING
                        - description: Translation
                          issueTypeCode: TRANSLATION
                          subTypes:
                          - description: Poor translation
                            issueSubTypeCode: POOR_TRANSLATION
                          - description: Doesn't fit the space
                            issueSubTypeCode: DOES_NOT_FIT_SPACE
                          - description: Placeholder issue
                            issueSubTypeCode: PLACEHOLDER_ISSUE
                          - description: General issue
                            issueSubTypeCode: GENERAL_ISSUE
                          - description: Review translation
                            issueSubTypeCode: REVIEW_TRANSLATION
                        totalCount: 2
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/issue-types

  '/issues-api/v2/projects/{projectId}/issues':
    post:
      summary: Create issue
      description: >-
        Creates a new issue for a string. Issue text is treated as plain text.
        Smartling will save the text as provided, and will not attempt to render
        this text with any special formatting in its UIs. It will not be
        rendered as HTML or markdown. Users of the Issues API should be aware,
        and escape the text as needed before attempting to render it. Maximum
        length is 4000 characters.
      tags:
      - Issues
      operationId: createIssue
      parameters:
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        description: New issue for a string
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIssueResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        answered: false
                        createdDate: '2015-11-10T16:01:22Z'
                        issueSeverityLevelCode: LOW
                        issueStateCode: OPENED
                        issueSubTypeCode: CLARIFICATION
                        issueText: asdfsd
                        issueTypeCode: SOURCE
                        issueUid: dceaa996d417
                        projectId: e8fa915fa
                        reportedByUserUid: 661801f19693
                        string:
                          hashcode: c32c16cddafd63dfa0dc12449372a093
                        issueCommentsCount: 0
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueTemlateJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues

  '/issues-api/v2/projects/{projectId}/issues/{issueUid}/issueText':
    put:
      summary: Edit issue
      description: >-
        Replaces the text of an issue with new text.


        **Note**: Only the author of the issue can perform this action. The
        `issueTextModifiedDate` property of an issue object shows when it was
        last updated.


        Issue text is treated as plain text. Smartling will save the text as
        provided and will not attempt to render this text with any special
        formatting in its UIs; it will not be rendered as HTML or markdown. When
        using the Issues API, you should escape the text as needed before
        attempting to render it. Maximum length is 4000 characters.
      tags:
      - Issues
      operationId: editIssue

      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueTextRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        issueText: Edited issue text.
                        issueTextModifiedDate: '2015-11-10T16:01:22Z'
              schema:
                $ref: '#/components/schemas/IssueTextResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken"
          -H "Content-Type: application/json" -d "$smartlingIssueTextJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/issueText

  '/issues-api/v2/projects/{projectId}/issues/{issueUid}/state':
    put:
      summary: Open or close issue
      description: The state of an issue. Accepted values are `OPENED` or `RESOLVED`.
      tags:
      - Issues
      operationId: openOrCloseIssue
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueStateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        issueStateCode: RESOLVED
              schema:
                $ref: '#/components/schemas/IssueStateResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueStateJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/state

  '/issues-api/v2/projects/{projectId}/issues/{issueUid}':
    get:
      summary: Get issue details
      description: >-
        Returns detailed information of a single issue.


        **Note**: The `resolvedByUserUid` and `reportedByUserUid` values are not
        currently usable for identifying the users who created or resolved
        issues. In the future, a People API will be exposed for looking up user
        details.
      tags:
      - Issues
      operationId: getIssueDetails
      parameters:
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        answered: false
                        createdDate: '2015-11-10T16:01:22Z'
                        issueSeverityLevelCode: LOW
                        issueStateCode: OPENED
                        issueSubTypeCode: POOR_TRANSLATION
                        issueText: This translation is incorrect. Please fix.
                        issueTypeCode: TRANSLATION
                        issueUid: dceaa996d417
                        projectId: e8fa915fa
                        reportedByUserUid: 661801f19693
                        string:
                          hashcode: c32c16cddafd63dfa0dc12449372a093
                          localeId: ru-RU
                        issueCommentsCount: 5
              schema:
                $ref: '#/components/schemas/IssueGetResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid

  '/issues-api/v2/projects/{projectId}/issues/{issueUid}/answered':
    put:
      summary: Update issue attribute (answered)
      description: >-
        Update issue attribute (answered). "Answered" is a boolean; (true/false).
      tags:
      - Issues
      operationId: updateIssueAnsweredStatus
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueAnsweredRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        answered: true
              schema:
                $ref: '#/components/schemas/IssueAnsweredResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueAnsweredJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/answered

  '/projects/{projectId}/issues/{issueUid}/severity-level':
    put:
      summary: Update issue attribute (severity level)
      description: Update issue attribute (severity level) (LOW / MEDIUM / HIGH)
      tags:
      - Issues
      operationId: updateIssueSeverityLevel
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueSeverityLevelRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        issueSeverityLevelCode: LOW
              schema:
                $ref: '#/components/schemas/IssueSeverityLevelResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingSeverityLevelJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/severity-level

  /issues-api/v2/projects/{projectId}/issues/{issueUid}/comments:
    post:
      summary: Create comment
      description: >-
        Create a comment for an issue. Comment text is treated as plain text.
        Smartling will save the text as provided, and will not attempt to render
        this text with any special formatting in its UIs. It will not be
        rendered as HTML or markdown. If you're using the Issues API, escape the
        text as needed before attempting to render it. Maximum length is 4000
        characters.
      tags:
      - Issues
      operationId: addIssueComment
      parameters:
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        commentText: comment text
                        createdByUserUid: 661801f19693
                        createdDate: '2015-12-22T12:34:49Z'
                        issueCommentUid: a75fea779bbb
              schema:
                $ref: '#/components/schemas/IssueCommentAddResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueCommentJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/comments
    get:
      summary: Get comments
      description: >-
        Returns all comments on an issue.


        **Note**: The `createdByUserUid` value is not currently usable for
        identifying the users who created comments. In the future, a People API
        will be exposed for looking up user details.
      tags:
      - Issues
      operationId: getIssueComments
      parameters:
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - commentText: comment text
                          createdByUserUid: 661801f19693
                          createdDate: '2015-12-22T12:34:49Z'
                          issueCommentUid: a75fea779bbb
                        totalCount: 1
              schema:
                $ref: '#/components/schemas/IssueCommentsGetResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/comments

  '/issues-api/v2/projects/{projectId}/issues/{issueUid}/comments/{issueCommentUid}':
    post:
      summary: Edit comment text
      description: >-
        Replaces the text of an issue with new text.


        **Note**: Only the author of an issue can perform this action. The
        `commentTextModifiedDate` property of an issue object shows when it was
        last updated.


        Comment text is treated as plain text. Smartling will save the text as
        provided and will not attempt to render this text with any special
        formatting in its UIs. It will not be rendered as HTML or markdown. If
        you're using the Issues API, escape the text as needed before attempting
        to render it. Maximum length is 4000 characters.
      tags:
      - Issues
      operationId: updateIssueComment
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue commment.
        in: path
        name: issueCommentUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        commentText: comment text
                        commentTextModifiedDate: '2016-12-22T12:34:49Z'
                        createdByUserUid: 661801f19693
                        createdDate: '2015-12-22T12:34:49Z'
                        issueCommentUid: a75fea779bbb
              schema:
                $ref: '#/components/schemas/IssueCommentEditResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueCommentJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/comments/$issueCommentUid
    get:
      summary: Get comment details
      description: >-
        Returns detailed information on a single issue comment.


        **Note**: The `createdByUserUid` value is not currently usable for
        identifying the users who created comments. In the future, a People API
        will be exposed for looking up user details.
      tags:
      - Issues
      operationId: getIssueCommentDetails
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue comment.
        in: path
        name: issueCommentUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        commentText: test comment
                        createdByUserUid: 661801f19693
                        createdDate: '2015-12-22T11:54:27Z'
                        issueCommentUid: ac5211a26eca
              schema:
                $ref: '#/components/schemas/IssueCommentGetResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/comments/$issueCommentUid
    delete:
      summary: Delete comment
      description: >-
        Delete comment.


        **Note**: The author of the issue comment, account owner and project manager can perform this action.
      tags:
      - Issues
      operationId: deleteIssueComment
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue.
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue commment.
        in: path
        name: issueCommentUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
              schema:
                $ref: '#/components/schemas/IssueCommentDeleteResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X DELETE -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/$issueUid/comments/$issueCommentUid

  '/issues-api/v2/projects/{projectId}/issues/list':
    post:
      summary: Find issues
      description: >-
        Returns a list of issues matching specified filter options. You can
        filter based on the date issues were created, target languages, strings,
        issue types, states, and which user opened the issue. Unless otherwise
        specified, the request will return a maximum of 30 results. All
        parameters are optional.
      tags:
      - Issues
      operationId: getIssuesList
      parameters:
      - description: Unique identifier of the corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssuesFindResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - answered: false
                          createdDate: '2015-12-21T16:38:48Z'
                          issueSeverityLevelCode: LOW
                          issueStateCode: OPENED
                          issueSubTypeCode: DOES_NOT_FIT_SPACE
                          issueText: does not fit space
                          issueTypeCode: TRANSLATION
                          issueUid: 902372ac8e1e
                          projectId: e8fa915fa
                          reportedByUserUid: 661801f19693
                          string:
                            hashcode: c32c16cddafd63dfa0dc12449372a093
                            localeId: ru-RU
                          issueCommentsCount: 4
                        totalCount: 1
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken"
          -H "Content-Type: application/json" -d "$smartlingIssuesFilterJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/list

  '/issues-api/v2/projects/{projectId}/issues/count':
    post:
      summary: Count issues
      description: >-
        Returns a count of issues matching specified filter options. You can
        filter based on the date issues were created, strings, target languages,
        issue types, states, and which user opened the issue. All parameters are
        optional.
      tags:
      - Issues
      operationId: getIssuesCount
      parameters:
      - description: Unique identifier of corresponding project.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CountRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        count: 2
              schema:
                $ref: '#/components/schemas/IssuesCountResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssuesFilterJSON"
          https://api.smartling.com/issues-api/v2/projects/$smartlingProjectId/issues/count

  '/issues-api/v2/accounts/{accountUid}/watchers':
    get:
      summary: List account watchers
      description: Get a list of all issue watchers for the entire account.
      tags:
      - Issues
      operationId: getIssuesWatchersListByAccount
      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Watcher email
        in: query
        name: email
        required: false
        schema:
          type: string
      - description: limit
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: number
      - description: offset
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: number
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - created: '2015-12-21T16:38:48Z'
                          email: my@mail.com
                          enabled: true
                          modified: '2015-12-21T16:38:48Z'
                          name: Mike Albert
                          uid: 323323wsss
                        totalCount: 1
              schema:
                $ref: '#/components/schemas/IssueGetWatchersResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/watchers
    post:
      summary: Create watcher
      description: Create a new watcher.
      tags:
      - Issues
      operationId: addIssuesWatcher
      parameters:
      - description: Unique identifier of the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatcherRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        created: '2015-12-21T16:38:48Z'
                        email: my@mail.com
                        enabled: true
                        modified: '2015-12-21T16:38:48Z'
                        name: Mike Albert
                        uid: 323323wsss
              schema:
                $ref: '#/components/schemas/IssueWatcherResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueWatcherJSON"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/watchers

  '/issues-api/v2/accounts/{accountUid}/watchers/{watcherUid}':
    put:
      summary: Update watcher
      description: Update the attributes of a watcher.
      tags:
      - Issues
      operationId: updateIssuesWatcher
      parameters:
      - description: Unique identifier of the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the corresponding watcher.
        in: path
        name: watcherUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WatcherRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        created: '2015-12-21T16:38:48Z'
                        email: my@mail.com
                        enabled: true
                        modified: '2015-12-21T16:38:48Z'
                        name: Mike Albert
                        uid: 323323wsss
              schema:
                $ref: '#/components/schemas/IssueWatcherResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingIssueWatcherJSON"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/watchers/$issueWatcherUid

  /issues-api/v2/accounts/{accountUid}/projects/{projectId}/issues/{issueUid}/watchers/{watcherUid}:
    put:
      summary: Link watcher to issue
      description: >-
        Associate or assign the watcher to an issue. The watcher will then begin
        receiving email notifications.  Emails do not have to have access to the
        Smartling account to be added as a Watcher. If they have access to the
        account the emails include links to view the issue in the dashboard.
      tags:
      - Issues
      operationId: addWatcherToIssue
      parameters:
      - description: Unique identifier of corresponding account
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      - description: ''
        in: path
        name: watcherUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
              schema:
                $ref: '#/components/schemas/IssueWatcherAssignResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X PUT -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/projects/$smartlingProjectId/issues/$issueUid/watchers/$issueWatcherUid
    delete:
      summary: Remove watcher from issue
      description: >-
        An update to an issue is sent to the associated/linked watcher. Once
        watchers are removed from an issue, email notifications will no longer
        be received by them.
      tags:
      - Issues
      operationId: deleteWatcherFromIssue
      parameters:
      - description: Unique identifier of corresponding account
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding watcher
        in: path
        name: watcherUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
              schema:
                $ref: '#/components/schemas/IssueWatcherDeleteResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X DELETE -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/projects/$smartlingProjectId/issues/$issueUid/watchers/$issueWatcherUid

  /issues-api/v2/accounts/{accountUid}/projects/{projectId}/issues/{issueUid}/watchers:
    get:
      summary: List watchers linked to issue
      description: Get a list of watchers that are linked to the issue.
      tags:
      - Issues
      operationId: getWatchersListLinkedToIssue
      parameters:
      - description: Unique identifier of corresponding account
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding project
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of corresponding issue
        in: path
        name: issueUid
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - created: '2015-12-21T16:38:48Z'
                          email: my@mail.com
                          enabled: true
                          modified: '2015-12-21T16:38:48Z'
                          name: Mike Albert
                          uid: 323323wsss
                        totalCount: 1
              schema:
                $ref: '#/components/schemas/IssueWatcherGetListResponse'
          description: OK
      x-code-samples:
      - lang: curl
        source: >
          curl -X GET -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json"
          https://api.smartling.com/issues-api/v2/accounts/$smartlingAccountId/projects/$smartlingProjectId/issues/$issueUid/watchers

  /issues-api/v2/dictionary/issue-types:
    get:
      summary: Get issue types
      description: >-
        This is deprecated. Instead, use this endpoint:
        /issues-api/v2/accounts/{accountUid}/issue-types. This request returns
        all current issue types. Smartling may occasionally add or change the
        list of allowed issue types.
      deprecated: true
      tags:
      - Issues
      operationId: getAllIssueTypes
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - description: Source
                          issueTypeCode: SOURCE
                          subTypes:
                          - description: Clarification
                            issueSubTypeCode: CLARIFICATION
                          - description: Misspelling
                            issueSubTypeCode: MISSPELLING
                        - description: Translation
                          issueTypeCode: TRANSLATION
                          subTypes:
                          - description: Poor Translation
                            issueSubTypeCode: POOR_TRANSLATION
                          - description: Doesn't Fit Space
                            issueSubTypeCode: DOES_NOT_FIT_SPACE
                          - description: Placeholder Issue
                            issueSubTypeCode: PLACEHOLDER_ISSUE
                          - description: General Issue
                            issueSubTypeCode: GENERAL_ISSUE
                          - description: Revieanslation
                            issueSubTypeCode: REVIEW_TRANSLATION
                        totalCount: 2
              schema:
                $ref: '#/components/schemas/IssueTypesResponse'
          description: OK

#
# Strings API
#
  '/strings-api/v2/projects/{projectId}':
    post:
      summary: Add strings
      description: >-
        Uploads an array of strings to a Smartling project. A maximum of 100
        strings can be created per request. A request with more than 100 items
        will return an error. Each string has a character limit of 10,000.


        **Note**: You cannot authorize a string via API. Once you have created
        the strings, they will need to be authorized by a content owner in the
        Smartling Dashboard.


        Smartling creates a unique hashcode for each string based on the parsed
        string text and any variant or namespace metadata provided. If you
        upload a string with the same text, variant and namespace, and therefore
        the same hashcode, the existng string will be overwritten. This will not
        change the text of the string, but may update other metadata, such as
        placeholder and callback values. If the string is currently inactive,
        overwriting it will cause it to be reactivated. Overwritten strings
        return `"overWritten": "true"` in the response object.


        Most uploads will return a `200` response indicating success. If
        processing the request takes longer than 60 seconds, a `202` request
        will be returned, including a `processUid` value that can be used to
        check on the progress of the request.


        If you set up a POST callback for the string, you can automatically
        receive the translation for a string as soon as it is complete. See
        [Callbacks](https://help.smartling.com/hc/en-us/articles/360007829194)
        for more details.
      tags:
      - Strings
      operationId: addStringsToProject

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                strings (Required):
                  items:
                    properties:
                      stringText:
                        description: >-
                          The text of the string you want to create. This is the
                          only required value for a string object.
                        type: string
                      variant:
                        description: Creates variant metadata for a new string.
                        type: string
                      callbackUrl:
                        description: >-
                          If provided a callback request will be sent to this
                          URL when translation for the string is complete. See
                          our callbacks documentation for more details.
                        type: string
                      callbackMethod:
                        description: >-
                          With a given callbackUrl, this defines the http method
                          to use. See our callbacks documentation for more
                          details.
                        type: string
                      instruction:
                        description: >-
                          Creates an instruction that is displayed to
                          translators in the Smartling Translation Interface.
                        type: string
                      maxLength:
                        description: >-
                          Set the maximum character length recommended for this
                          string and its translations.  Not specifying or
                          setting to 'null' implies no maxLength and on update
                          will remove any existing maxLegnth.
                        type: number
                      format:
                        description: >-
                          Sets whether or not the string should be parsed as
                          HTML. Accepted values are 'html', 'plain_text' and
                          'auto'. If set to auto, Smartling will attempt to
                          detect the presence of HTML tags in the string.


                          "When strings are parsed as HTML, Smartling will
                          automatically ampersand-escape special characters such
                          as angle brackets (<) and quotes (&quot;). For
                          example, if you upload the string _Dave says
                          &quot;hello&quot;_. and set format to HTML, Smartling
                          will return the string with ampersand-escaping: _Dave
                          says &amp;quot;hello&amp;quot;_."
                        type: string
                    required:
                    - stringText
                    type: object
                  minItems: 1
                  type: array
                placeholderFormat:
                  description: >-
                    Specifies a standard placeholder format. Accepted values are
                    none, c, ios, python, java, yaml, qt, resx. See
                    [Placeholders in Resource
                    Files](https://help.smartling.com/hc/en-us/articles/360008143433)
                    for more detail.
                  type: string
                placeholderFormatCustom:
                  description: >-
                    Specifies a custom placeholder with a Java Regular
                    Expression. For example \\[.+?\\] would capture all values
                    surrounded by square brackets as placeholders. See
                    [Placeholders in Resource
                    Files](https://help.smartling.com/hc/en-us/articles/360008143433)
                    for more detail.
                  type: string
                namespace:
                  description: >-
                    Used to generate the unique hashcode for all strings in the
                    request. If you want to have two versions of a string with
                    the same text and variant metadata, you can keep them unique
                    by assigning a different namespace to each string. If not
                    provided, default value is
                    _smartling.strings-api.default.namespace_. A _NULL_ value is
                    permitted.
                  type: string
              type: object
              required:
                - strings
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - hashcode: bd603147d945h3ec74d6874422ebe4e0
                          overWritten: 'true'
                          parsedStringText: 'Search results for {0}:'
                          stringText: 'Search results for [city]:'
                          variant: variant value
                        processUid: d6414f8c-4gdf-4415-9a69-f8e7902ca9ec
                        stringCount: 1
                        wordCount: 4
              schema:
                $ref: '#/components/schemas/CreateStringResponse'
          description: OK
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStringResponse'
          description: ACCEPTED
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringJSON"
          https://api.smartling.com/strings-api/v2/projects/$smartlingProjectId

  '/strings-api/v2/projects/{projectId}/processes/{processUid}':
    get:
      summary: Check string status
      description: >-
        If an **Add strings** request takes longer than 60 seconds to process, a
        `202` response will be returned, indicating that the process of creating
        strings is continuing but not yet complete. This response will include a
        `proccessUid` value which can be used to check the progress of the
        request.


        This request can return:
          * `"processState": "OPEN"` which indicates that the request is still continuing.
          * `"processState": "CLOSED"` indicates the request has successfully completed.
          * `"processState": "FAILED"` means the request could not be completed.

        Processes have a limited lifespan after they are complete. This request
        will fail if you specify an expired `processUid`.
      tags:
      - Strings
      operationId: getAddStringsToProjectRequestStatus

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - in: path
        name: processUid
        required: true
        schema:
          format: uuid
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStringStatusResponse'
          description: OK
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -G
          https://api.smartling.com/strings-api/v2/projects/$smartlingProjectId/processes/$processUid

  '/strings-api/v2/projects/{projectId}/source-strings':
    get:
      summary: List all source strings
      description: >-
        Returns source strings from Smartling. You can get strings by specifying
        a file you want strings for, or you can specify individual strings by
        hashcode.


        _If you do not specify at least one of these parameters (`hashcodes` or
        `fileUri`) no results will be returned._


        **Note**: If you use this call to get strings that are not added via the
        Strings API, you may see differences in the response.


        You may see a value for `parsedStringText` but a `null` value for
        `stringText`. The `stringText` records the raw input received by the
        Strings API, and therefore will only appear for strings uploaded via the
        Strings API.

        If you are getting a GDN string, the original placeholder values you
        used will not be returned as these are not saved by Smartling. GDN
        strings will have placeholders in the format `{0}`, `{1}`, etc.
      tags:
      - Strings
      operationId: getAllSourceStringsByProject
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Hashcodes for each string you want to get source strings for.
        in: query
        name: hashcodes
        schema:
          items:
            type: string
          type: array
      - description: URI of a file you want to get strings for.
        in: query
        name: fileUri
        schema:
          type: string
      - description: >-
          By default, responses will be limited to 500 per request. This is
          also the maximum allowed value.
        in: query
        name: limit
        schema:
          type: number
      - description: Pagination setting. Default is 0.
        in: query
        name: offset
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringResponse'
          description: OK
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -G -d
          "fileUri=$smartlingFileUri"
          https://api.smartling.com/strings-api/v2/projects/$smartlingProjectId/source-strings

  '/strings-api/v2/projects/{projectId}/translations':
    get:
      summary: List all translations
      description: >-
        Returns translated strings from Smartling. You can get translations by
        specifying a file you want strings for, or you can specify individual
        strings by hashcode.


        _If you do not specify at least one of these parameters (`hashcodes` or
        `fileUri`) no results will be returned._


        **Note**: If you use this call to get strings that were not created via
        the Strings API, you may see differences in the response.


        Only authorized and active strings will be returned. Excluded,
        unauthorized, and inactive strings will not be returned.


        You may see a value for `parsedStringText` but a `null` value for
        `stringText`. The `stringText` records the raw input received by the
        Strings API, and therefore will only appear for strings uploaded via the
        Strings API.

        If you are getting a GDN string, the original placeholder values you
        used will not be returned as these are not saved by Smartling. GDN
        strings will have placeholders in the format `{0}`, `{1}`, etc.
      tags:
      - Strings
      operationId: getAllTranslationsByProject
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      - description: Hashcodes for each string you want to get translations for.
        in: query
        name: hashcodes
        schema:
          items:
            type: string
          type: array
      - description: Smartling ID for the language you want to get translations for.
        in: query
        name: targetLocaleId
        schema:
          type: string
      - description: >-
          Sets the types of translations you want returned. `published` will
          only return translations that have completed their workflows and
          been published. `pending` will return any saved translations.
        in: query
        name: retrievalType
        schema:
          enum:
          - pending
          - published
          type: string
      - description: URI of a file you want to get translations for.
        in: query
        name: fileUri
        schema:
          type: string
      - description: >-
          Pagination setting. By default, responses will be limited to 500 per
          request. This is also the maximum allowed value.
        in: query
        name: limit
        schema:
          type: number
      - description: Pagination setting. Default is 0.
        in: query
        name: offset
        schema:
          type: number
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationResponse'
          description: OK
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken" -G
          https://api.smartling.com/strings-api/v2/projects/$smartlingProjectId/translations

#
# Glossary API endpoints
#
  '/glossary-api/v2/accounts/{accountUid}/glossaries':
    get:
      summary: List glossaries for account
      description: >-
        Returns a list of all glossaries in an account. Optional filters for
        glossary name and UID can be added.
      tags:
      - Glossaries
      operationId: getGlossariesList

      parameters:
      - in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Filter for glossary name in LIKE manner (case-insensitive).
        in: query
        name: name
        schema:
          type: string
      - description: >-
          Filter for glossary UID in IN manner (may contain up to 100 UIDs
          separated by comma e.g., glossaryUids=1234,4567)
        in: query
        name: glossaryUids
        schema:
          items:
            type: string
          type: array
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - createdByUserUid: ah27fhq8
                          createdDate: '2015-11-21T01:51:17Z'
                          description: some desc
                          glossaryUid: 50d9dab5-6b8b-11e5-ba24-127b00b163a3
                          name: Another document tester-Glossary
                          sourceLocaleId: en-US
                        - createdByUserUid: ah27fhq8
                          createdDate: '2015-11-21T01:51:17Z'
                          description: some desc
                          glossaryUid: 50e5c8d3-6b8b-11e5-ba24-127b00b163a3
                          name: BizDocs test Max's project-Glossary
                          sourceLocaleId: en-US
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    post:
      summary: Create glossary
      description: Creates a new glossary in an account.
      tags:
      - Glossaries
      operationId: addGlossary

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGlossary'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        createdByUserUid: ah27fhq8
                        createdDate: '2015-11-21T01:51:17Z'
                        description: Description of a Glossary
                        glossaryUid: 50d9dab5-6b8b-11e5-ba24-127b00b163a3
                        name: Another document tester-Glossary
                        sourceLocaleId: en-US
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}:
    get:
      summary: Get glossary details
      description: >-
        Gets the name, description, locale, and creation information for a
        glossary.
      tags:
      - Glossaries
      operationId: getGlossaryDetails

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of a glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryResponse'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    put:
      summary: Edit glossary
      description: >-
        Edits the name, description or source locale of a glossary. This will
        completely replace the name, description, and source locale of the
        target glossary. If you do not provide a field, or leave it blank, any
        existing information will be deleted.
      tags:
      - Glossaries
      operationId: updateGlossaryDetails

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGlossary'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryResponse'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    delete:
      summary: Delete glossary
      description: >-
        Deletes a glossary.


        **Note:** If a glossary has been assigned to a
        Linguistic Package, you will not be able to delete it. Linguistic
        Packages are managed in the Smartling Dashboard.
      tags:
      - Glossaries
      operationId: deleteGlossary

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}/terms:
    get:
      summary: Find terms in glossary
      description: >-
        Returns terms from a glossary. Only the source term is included in this
        response.
      tags:
      - Glossaries
      operationId: getGlossaryTerms

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      - description: Filter for term text in LIKE manner (case-insensitive).
        in: query
        name: termText
        schema:
          type: string
      - description: Pagination portion size.
        in: query
        name: limit
        schema:
          type: integer
      - description: Pagination offset value.
        in: query
        name: offset
        schema:
          type: integer
      - description: >-
          Sorting instructions. This represents a field to sort by, with
          direction separated by a comma (i.e. sort=termText,desc). We support
          sorting by all fields.
        in: query
        name: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceTermListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - antonyms: ''
                          caseSensitive: false
                          createdDate: '2015-12-30T12:43:12Z'
                          definition: ''
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          modifiedDate: '2015-12-30T12:43:12Z'
                          notes: ''
                          partOfSpeechCode: UNSPECIFIED
                          seo: false
                          synonyms: ''
                          termText: cold calls
                          termUid: e390a4d6-aef2-11e5-b159-0ad0c2f6b537
                          variations: ''
                        - antonyms: ''
                          caseSensitive: true
                          createdDate: '2015-12-30T12:43:12Z'
                          definition: My definition
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          modifiedDate: '2015-12-30T12:43:12Z'
                          notes: My notes
                          partOfSpeechCode: VERB
                          seo: false
                          synonyms: ''
                          termText: cold call
                          termUid: e390a4d6-aef2-11e5-b159-0ad0c2f6b538
                          variations: ''
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    post:
      summary: Create glossary term
      description: >-
        Creates a new glossary term. The only required parameter is `termText`.
        See our Glossary documentation for details on each term parameter. You
        can only add one translation object in this request. To add additional
        translations, use Edit Glossary term.
      tags:
      - Glossaries
      operationId: addSingleGlossaryTerm

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTerm'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslatedTermResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        antonyms: ''
                        caseSensitive: false
                        definition: ''
                        doNotTranslate: false
                        exactMatch: false
                        notes: ''
                        partOfSpeechCode: VERB
                        seo: false
                        synonyms: ''
                        termText: cold call
                        translation:
                          localeId: fr-CA
                          lockTranslation: false
                          notes: some notes from user
                          submittedForTranslation: true
                          translatedTerm: cold call french ca
                          translatorUserUid: 58870b8e965
                        variations: ''
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}/terms/batch:
    post:
      summary: Add glossary terms in bulk
      description: >-
        Creates new glossary terms. Validation for the endpoint works in atomic
        fashion - all terms either pass validation (and will be created), or
        none of them will be. Translation section is optional.
      tags:
      - Glossaries
      operationId: addGlossaryTermsBatch

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateTerm'
              type: array
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslatedTermResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - antonyms: ''
                          caseSensitive: false
                          definition: ''
                          doNotTranslate: false
                          exactMatch: false
                          notes: ''
                          partOfSpeechCode: UNSPECIFIED
                          seo: false
                          synonyms: ''
                          termText: term 22
                          variations: ''
                        - antonyms: ''
                          caseSensitive: false
                          definition: ''
                          doNotTranslate: false
                          exactMatch: false
                          notes: ''
                          partOfSpeechCode: UNSPECIFIED
                          seo: false
                          synonyms: ''
                          termText: term 33
                          translation:
                            localeId: fr-CA
                            lockTranslation: false
                            notes: some notes from user
                            submittedForTranslation: false
                            translatedTerm: term 33 french ca
                            translatorUserUid: 58870b8ee965
                          variations: ''
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}/locales/{localeId}/terms:
    get:
      summary: Find translations of terms
      description: >-
        Searches translations of glossary terms across all glossaries in the
        account. The response contains a list of original glossary terms and
        translations.
      tags:
      - Glossaries
      operationId: getGlossaryTermsTranslationsByGlossary

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      - description: A valid Smartling Locale ID.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      - description: >-
          UIDs of specific terms to be retrieved (validation allows no more
          than 100 in a single request).
        in: query
        name: termUids
        schema:
          items:
            type: string
          type: array
      - description: Filter for the term text in LIKE manner (case-insensitive).
        in: query
        name: termText
        schema:
          type: string
      - description: >-
          Flag to filter out terms by criteria of presence of translation. Ff
          not specified, it is not taken into account.
        in: query
        name: translated
        schema:
          type: boolean
      - description: Pagination portion size.
        in: query
        name: limit
        schema:
          type: integer
      - description: Pagination offset value.
        in: query
        name: offset
        schema:
          type: integer
      - description: >-
          Sorting instructions. This represents the field to sort by, and the
          direction is separated by a comma (i.e. sort=termText,desc). We
          support sorting by all fields.
        in: query
        name: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslatedTermResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - antonyms: ''
                          caseSensitive: false
                          createdDate: '2015-12-30T12:43:12Z'
                          definition: ''
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          modifiedDate: '2015-12-30T12:43:12Z'
                          notes: ''
                          partOfSpeechCode: UNSPECIFIED
                          seo: false
                          synonyms: ''
                          termText: cold calls
                          termUid: e390a4d6-aef2-11e5-b159-0ad0c2f6b537
                          translation:
                            createdDate: '2015-12-30T12:43:12Z'
                            localeId: fr-CA
                            lockTranslation: false
                            modifiedDate: '2015-12-30T12:43:12Z'
                            notes: ''
                            submittedForTranslation: true
                            translatedTerm: cold calls in french ca
                            translatorUserUid: 58870b8ee964
                          variations: ''
                        - antonyms: ''
                          caseSensitive: false
                          createdDate: '2015-12-30T12:43:12Z'
                          definition: ''
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          modifiedDate: '2015-12-30T12:43:12Z'
                          notes: ''
                          partOfSpeechCode: ADJECTIVE
                          seo: false
                          synonyms: ''
                          termText: cold call
                          termUid: e390a4d6-aef2-11e5-b159-0ad0c2f6b538
                          translation:
                            createdDate: '2015-12-30T12:43:12Z'
                            localeId: fr-CA
                            lockTranslation: false
                            modifiedDate: '2015-12-30T12:43:12Z'
                            notes: ''
                            submittedForTranslation: false
                            translatedTerm: cold call french ca
                            translatorUserUid: 58870b8ee966
                          variations: ''
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/locales/{localeId}/terms:
    get:
      summary: Find translations of terms across all glossaries
      description: >-
        Searches translations of glossary terms across all glossaries in the
        account.


        The response contains a list of original glossary terms and
        translations. There is a glossary UID for each term, in order to show to
        which glossary it belongs.
      tags:
      - Glossaries
      operationId: getGlossaryTermsTranslationsByAccount

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: A valid Smartling Locale ID.
        in: path
        name: localeId
        required: true
        schema:
          type: string
      - description: >-
          UIDs of specific terms to be retrieved (validation allows no more
          than 100 in single request).
        in: query
        name: termUids
        schema:
          items:
            type: string
          type: array
      - description: Filter for the term text in LIKE manner (case-insensitive).
        in: query
        name: termText
        schema:
          type: string
      - description: >-
          Flag to filter out terms by criteria of presence of translation. Ff
          not specified, it is not taken into account.
        in: query
        name: translated
        schema:
          type: boolean
      - description: Pagination portion size.
        in: query
        name: limit
        schema:
          type: integer
      - description: Pagination offset value.
        in: query
        name: offset
        schema:
          type: integer
      - description: >-
          Sorting instructions. Represents field to sort by and direction
          separated by comma (i.e. sort=termText,desc). We support sorting by
          all fields.
        in: query
        name: sort
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermWithGlossaryUidListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - antonyms: ''
                          caseSensitive: true
                          createdByUserUid: kjakjf82v
                          createdDate: '2015-10-19T15:48:34Z'
                          definition: ''
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          glossaryUid: bdf416ee-98ff-11e5-b159-0ad0c2f6b537
                          modifiedDate: '2015-11-09T15:33:19Z'
                          notes: ''
                          partOfSpeechCode: VERB
                          seo: true
                          synonyms: ''
                          termText: arabian architecture
                          termUid: 6b3e1e8c-eb40-4c32-a9f7-024e407b0b30
                          translation:
                            createdDate: '2015-10-21T11:08:01Z'
                            localeId: fr-FR
                            lockTranslation: false
                            modifiedDate: '2015-10-27T13:09:56Z'
                            notes: ''
                            submittedForTranslation: false
                            translatedTerm: arabian architecture in french
                          variations: ''
                        - antonyms: ''
                          caseSensitive: false
                          createdByUserUid: kjakjf82v
                          createdDate: '2015-12-02T14:19:15Z'
                          definition: ''
                          deprecated: false
                          doNotTranslate: false
                          exactMatch: false
                          glossaryUid: bbf416ee-98ff-11e5-b159-0ad0c2f6b537
                          modifiedDate: '2015-12-02T14:19:15Z'
                          notes: ''
                          partOfSpeechCode: ADJECTIVE
                          seo: false
                          synonyms: ''
                          termText: summer time
                          termUid: aaf416ee-98ff-11e5-b159-0ad0c2f6b537
                          translation:
                            createdDate: '2015-12-02T14:28:00Z'
                            localeId: fr-FR
                            lockTranslation: false
                            modifiedDate: '2015-12-02T14:28:00Z'
                            notes: ''
                            submittedForTranslation: false
                            translatedTerm: summer time french 22
                          variations: ''
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}/terms/{termUid}:
    put:
      summary: Edit glossary term
      description: >-
        Edits the details of a glossary term. With the exception of the
        translation object, you must provide all desired

        fields every time you edit the term. If you do not provide a field or
        leave it blank, any existing value for

        that field will be deleted. To add translations for multiple locales,
        make a separate request for each locale.

        Keep all fields except for the translation object identical in each
        request.
      tags:
      - Glossaries
      operationId: updateGlossaryTerm

      parameters:
      - description: Unique identifier for the corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of the glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      - description: Unique identifier of a specific glossary term.
        in: path
        name: termUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTerm'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslatedTermResponse'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    delete:
      summary: Delete glossary term
      description: Delete a glossary term. This will remove the term and all translations.
      tags:
      - Glossaries
      operationId: deleteGlossaryTerm

      parameters:
      - description: Unique identifier of a corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of a glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      - description: Unique identifier of a specific glossary term.
        in: path
        name: termUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/projects/{projectUid}/glossaries/{glossaryUid}/terms/authorization:
    put:
      summary: Authorize terms for translation
      description: >-
        Sends selected terms for translation via specified workflows to chosen
        target locales.
      tags:
      - Glossaries
      operationId: authorizeGlossaryTermForTranslation

      parameters:
      - description: Unique identifier for the corresponding project.
        in: path
        name: projectUid
        required: true
        schema:
          type: string
      - description: Unique identifier of a glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeTerms'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/glossaries/{glossaryUid}/download:
    get:
      summary: Download glossary
      description: 'Downloads a glossary as a CSV, TBX, or XLSX (Open Excel) file.'
      tags:
      - Glossaries
      operationId: downloadGlossary

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - description: Unique identifier of glossary.
        in: path
        name: glossaryUid
        required: true
        schema:
          type: string
      - description: Format that is used for glossary export.
        in: query
        name: format
        required: true
        schema:
          enum:
          - csv
          - tbx
          - xlsx
          type: string
      - description: Comma-separated list of locales for which to return translations.
        in: query
        name: localeIds
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/glossary-api/v2/accounts/{accountUid}/import-jobs':
    post:
      summary: Import glossary from Excel file
      description: >-
        Creates a new glossary in your account from an uploaded Excel
        spreadsheet. The format of the spreadsheet is important. See
        [Import Glossary](https://help.smartling.com/hc/en-us/articles/115003144633) and
        [Glossary Spreadsheet Format](https://help.smartling.com/hc/article_attachments/360002278634/Glossary%20Import%20Template.xlsx).
      tags:
      - Glossaries
      operationId: importGlossary

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: A name for the glossary. This name must be unique. Attempting to use a name already in use in the account will return an error.
                sourceLocaleId:
                  type: string
                  description: Source locale for the glossary.
                description:
                  type: string
                  description: Description for the glossary.
                importFile:
                  type: string
                  format: binary
                  description: 'File containing the glossary you wish to import. See [Glossary Spreadsheet Format](https://help.smartling.com/hc/article_attachments/360002278634/Glossary%20Import%20Template.xlsx) for details.'
              required:
                - name
                - sourceLocaleId
                - description
                - importFile
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryImportJob'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        accountUid: b76d6285
                        createdByUserUid: 58870b8ee965
                        createdDate: '2016-03-21T15:00:48Z'
                        fileName: ExampleImportGlossary2.xlsx
                        glossary:
                          accountUid: 8a196313
                          createdByUserUid: 58870b8ee965
                          createdDate: '2016-05-18T12:04:38Z'
                          description: test desc
                          glossaryUid: 5c8d2aa8-e254-4ab3-8eb3-3b96b24f8609
                          name: Import keysight test
                          sourceLocaleId: en
                        glossaryImportJobStatus: PENDING
                        glossaryImportJobUid: 78d93dde-5e3d-4beb-8171-415f82ca2c7b
                        localesNumber: 20
                        modifiedDate: '2016-03-21T15:00:48Z'
                        termsNumber: 10
                        termsProcessed: 0
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/accounts/{accountUid}/import-jobs/{glossaryImportJobUid}:
    get:
      summary: Status of glossary import
      description: Checks the status of a glossary import.
      tags:
      - Glossaries
      operationId: getGlossaryImportStatus

      parameters:
      - description: Unique identifier of corresponding account.
        in: path
        name: accountUid
        required: true
        schema:
          type: string
      - in: path
        name: glossaryImportJobUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryImportJob'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        accountUid: b76d6285
                        createdByUserUid: 58870b8ee965
                        createdDate: '2016-03-21T15:00:48Z'
                        fileName: ExampleImportGlossary2.xlsx
                        glossary:
                          accountUid: 8a196313
                          createdByUserUid: 58870b8ee965
                          createdDate: '2016-05-18T12:04:38Z'
                          description: test desc
                          glossaryUid: 5c8d2aa8-e254-4ab3-8eb3-3b96b24f8609
                          name: Import keysight test
                          sourceLocaleId: en
                        glossaryImportJobStatus: PENDING
                        glossaryImportJobUid: 78d93dde-5e3d-4beb-8171-415f82ca2c7b
                        localesNumber: 20
                        modifiedDate: '2016-03-21T15:00:48Z'
                        termsNumber: 10
                        termsProcessed: 0
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /glossary-api/v2/dictionary/parts-of-speech:
    get:
      summary: List parts of speech
      description: Order is fixed and consistent throughout the calls.
      tags:
      - Glossaries
      operationId: getGlossaryPartsOfSpeech

      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartsOfSpeechList'
              examples:
                response:
                  value:
                    code: SUCCESS
                    data:
                      items:
                      - description: Noun
                        partOfSpeechCode: NOUN
                      - description: Verb
                        partOfSpeechCode: VERB
                      - description: Adjective
                        partOfSpeechCode: ADJECTIVE
                      - description: Adverb
                        partOfSpeechCode: ADVERB
                      - description: Pronoun
                        partOfSpeechCode: PRONOUN
                      - description: Preposition
                        partOfSpeechCode: PREPOSITION
                      - description: Interjection
                        partOfSpeechCode: INTERJECTION
                      - description: Conjunction
                        partOfSpeechCode: CONJUNCTION
                      - description: Unspecified
                        partOfSpeechCode: UNSPECIFIED
                      totalCount: 9
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

#
# Jobs API endpoints
#
  '/jobs-api/v3/projects/{projectId}/jobs':
    get:
      summary: List jobs within a project
      description: List / search the jobs within a project.
      tags:
      - Jobs
      operationId: getJobsByProject

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: >-
          Used for searching jobs by `jobName`. Any entry is treated as a LIKE
          query on the name of the job.
        in: query
        name: jobName
        required: false
        schema:
          type: string
      - description: >-
          Used for searching jobs by `translationJobUid`. Supports up to 500
          `translationJobUid`s.
        in: query
        name: translationJobUids
        required: false
        schema:
          items:
            type: string
          type: array
      - description: Used for searching jobs by `jobStatus`.
        in: query
        name: translationJobStatus
        required: false
        schema:
          items:
            type: string
          type: array
      - description: The limit on the number of jobs returned.
        in: query
        name: limit
        required: false
        schema:
          type: integer
      - description: The offset to use when searching for jobs.
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: The field to sort by.
        in: query
        name: sortBy
        required: false
        schema:
          enum:
          - createdDate
          - dueDate
          - jobName
          type: string
      - description: The direction to sort.
        in: query
        name: sortDirection
        required: false
        schema:
          enum:
          - ASC
          - DESC
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - createdDate: '2015-11-21T11:51:17Z'
                          description: my job description
                          dueDate: '2015-11-21T11:51:17Z'
                          jobName: myJobName
                          jobStatus: IN_PROGRESS
                          referenceNumber: myReferenceNumber1
                          targetLocaleIds:
                          - fr-FR
                          - es
                          translationJobUid: abc123abc
                        - createdDate: '2015-11-21T11:51:17Z'
                          description: my job description
                          dueDate: '2015-11-21T11:51:17Z'
                          jobName: myJobName
                          jobStatus: IN_PROGRESS
                          referenceNumber: myReferenceNumber1
                          targetLocaleIds:
                          - fr-FR
                          - de
                          translationJobUid: abc321xyz
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          https://api.smartling.com/jobs-api/v3/projects/$smartlingProjectId/jobs

    post:
      summary: Create job
      description: Creates a job within Smartling.
      tags:
      - Jobs
      operationId: addJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          format: uuid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShallowJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        translationJobUid: abc123abc
                        jobName: myJobName
                        targetLocaleIds:
                        - fr-FR
                        callbackMethod: GET|POST
                        callbackUrl: 'https://www.callback.com/smartling/job'
                        createdByUserUid: userUid123abc
                        createdDate: '2015-11-21T11:51:17Z'
                        description: my job description
                        dueDate: '2015-11-21T11:51:17Z'
                        firstCompletedDate: '2015-11-21T11:51:17Z'
                        jobStatus: IN_PROGRESS
                        lastCompletedDate: '2015-11-21T11:51:17Z'
                        modifiedByUserUid: userUid321abc
                        modifiedDate: '2015-11-21T11:51:17Z'
                        referenceNumber: myReferenceNumber1
        400:
          description: Validation error during job creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - details:
                          field: jobName
                        key: null
                        message: >-
                          There is already a job with that name. Please provide a
                          unique name.
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingJobJSON"
          https://api.smartling.com/jobs-api/v3/projects/$smartlingProjectId/jobs


  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/strings/add:
    post:
      summary: Add strings to job
      description: >
        Adding strings to a job is useful if you don't manage strings / content
        through files, but instead need to add strings by some other means other
        than files.


        When strings are successfully added to a job, a `200` status is
        returned. When the system can't quickly add strings to the job, a `202`
        response status is returned. The response contains a link and
        `processUid` to check the progress of the request. When a `202` is
        received, the process of adding the content to the job will not be
        complete until the returned process has completed.
      tags:
      - Jobs
      operationId: addStringsToJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddStringsJobRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessFailCountJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        failCount: 0
                        successCount: 100
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          description: Validation error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - key: null
                        message: 'Invalid locales [ad]'
                        details:
                          field: targetLocaleIds
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/strings/remove:
    post:
      summary: Remove strings from job
      description: >
        Remove strings from a job. Any strings removed from the job will also be
        unauthorized within Smartling.


        If strings are successfully removed from a job, a `200` status will be
        returned. When the system can't quickly add the strings to the job, a
        `202` response is returned. The response contains a link to check the
        progress of the request. When a `202` is received, the process of
        removing the content from the job will not be complete until the
        returned process has completed.
      tags:
      - Jobs
      operationId: removeStringsFromJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveStringsJobRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessFailCountJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        failCount: 0
                        successCount: 100
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/close:
    post:
      summary: Close job
      description: >-
        This closes a completed job. In order for a job to be closed, it must be
        in a completed state. All content from the job will be removed when it
        is closed. Closing a job guarantees that no additional work will be done
        against the job.
      tags:
      - Jobs
      operationId: closeJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullDataJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        400:
          description: Validation error when closing a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - message: Only a job that is COMPLETE can be closed.
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/cancel':
    post:
      summary: Cancel job
      description: >
        This cancels a job. All content within the job will be removed from the
        job and the content will be unauthorized.


        If a job is successfully cancelled, a `200` response status will be
        returned. When the system can't quickly cancel the job, a `202` response
        is returned. The response contains a link to check the progress of the
        request. When a `202` is received, the process of canceling and removing
        the content from the job will not be complete until the returned process
        has completed.
      tags:
      - Jobs
      operationId: cancelJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelJobRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullDataJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          description: Validation error when cancelling a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - message: >-
                          Job can be cancelled only in DRAFT,
                          AWAITING_AUTHORIZATION, or IN_PROGRESS statuses
        401:
          description: Authentication error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401Response'
              examples:
                response:
                  value:
                    response:
                      code: AUTHENTICATION_ERROR
                      errors:
                      - details: {}
                        key: invalid_token
                        message: Invalid token
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/authorize':
    post:
      summary: Authorize job
      description: >-
        This authorizes all content within a job. A job can only be authorized
        when it has content and is in an AWAITING_AUTHORIZATION state.
      tags:
      - Jobs
      operationId: authorizeJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthorizeJobRequest'
        description: >-
          The payload to use when authorizing a job. If no target locales and
          workflows are provided, the empty body `{}` should be provided.
          Smartling will authorize the job for the default workflows for the
          given project.
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullDataJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        400:
          description: Validation error when authorizing a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    code: VALIDATION_ERROR
                    errors:
                    - key: null
                      message: >-
                        Job can be authorized only in AWAITING_AUTHORIZATION
                        status(es).
                      details: null
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}:
    get:
      summary: Get details of job
      description: >-
        This gets the details of a job such as job name, description, due date,
        and reference number.
      tags:
      - Jobs
      operationId: getJobDetails

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        createdByUserUid: '518252370016'
                        createdDate: '2017-11-03T14:18:37Z'
                        jobName: 'test job (Cancelled 2017/11/04 12:01:28)'
                        jobStatus: CANCELLED
                        modifiedByUserUid: 598d89cce43a
                        modifiedDate: '2017-11-04T12:01:28Z'
                        sourceFiles:
                        - name: admin.properties
                          uri: admin.properties
                        targetLocaleIds:
                        - uk-UA
                        - ru-RU
                        translationJobUid: jhcgalvnb6za
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Job not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: null
                        message: null
                        details: null
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    put:
      summary: Update job
      description: >-
        This updates the attributes of the job, such as job name, description,
        due date, and reference number.
      tags:
      - Jobs
      operationId: updateJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        createdByUserUid: '518252370016'
                        createdDate: '2017-11-03T14:18:37Z'
                        description: Description of the job
                        dueDate: '2020-11-03T14:18:37Z'
                        jobName: Test Job
                        jobStatus: AWAITING_AUTHORIZATION
                        modifiedByUserUid: 598d89cce43a
                        modifiedDate: '2017-11-04T12:01:28Z'
                        sourceFiles:
                        - name: admin.properties
                          uri: admin.properties
                        targetLocaleIds:
                        - uk-UA
                        - ru-RU
                        translationJobUid: jhcgalvnb6za
        400:
          description: Validation error on updating a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    code: VALIDATION_ERROR
                    errors:
                    - key: null
                      message: >-
                        Job can be edited only in DRAFT,
                        AWAITING_AUTHORIZATION, IN_PROGRESS or COMPLETED
                        statuses.
                      details: null
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: null
                        message: null
                        details: null
          description: Job not found error
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/search:
    post:
      summary: Search for job
      description: >-
        This searches for jobs based on hashcodes (string identifiers),
        `fileUri`s, and `translationJobUid`s.
      tags:
      - Jobs
      operationId: searchForJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchJobRequest'
        description: The filters to use when searching for jobs within the project.
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListJobsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - createdDate: '2015-11-21T11:51:17Z'
                          description: my job description
                          dueDate: '2015-11-21T11:51:17Z'
                          jobName: myJobName
                          jobStatus: IN_PROGRESS
                          referenceNumber: myReferenceNumber1
                          targetLocaleIds:
                          - uk-UA
                          - ru-RU
                          translationJobUid: abc123abc
                        - createdDate: '2015-11-21T11:51:17Z'
                          description: my job description
                          dueDate: '2015-11-21T11:51:17Z'
                          jobName: myJobName
                          jobStatus: IN_PROGRESS
                          referenceNumber: myReferenceNumber1
                          targetLocaleIds:
                          - uk-UA
                          - ru-RU
                          translationJobUid: abc321xyz
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}:
    get:
      summary: Check for an async process for job
      description: This checks for an asynchronous process for a job.
      tags:
      - Jobs
      operationId: getJobAsyncProcessStatus

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      - in: path
        name: processUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessCheckJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        createdDate: '2015-11-21T11:51:17Z'
                        modifiedDate: '2015-11-21T11:51:17Z'
                        processState: IN_PROGRESS | COMPLETED | FAILED
                        processUid: 13424r5-qaswerxs-43435ff
                        translationJobUid: 784578f-qaswerxs-43435ff
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/file/add:
    post:
      summary: Add file to job
      description: >
        This adds a file to a job. By default, the file will be added for all
        locales of the job, but you can change this by specifying
        `targetLocaleId`s for the job you wish to add the file into.


        **Validation rules:**

        - A job can contain a maximum of 5000 files.

        - Content can't be added to the job if the job doesn't contain any
        locales, and the request to add a file doesn't specify any locales.

        - The file (specified by the `fileUri`) can't be in the process of being
        uploaded / modified within Smartling. It should complete its upload
        process before being added to a job.

        - Any `targetLocale`s specified must be valid within the project the job
        has been created for.


        When the system can quickly add the file and its content to the job, it
        synchronously responds with status `200`. When the system cannot quickly
        add the file and its content to the job, then a `202` response is
        returned. The response contains a link to check the progress of the
        request. When a `202` is received, the process of adding the content to
        the job will not be complete until the returned process has completed.
      tags:
      - Jobs
      operationId: addFileToJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddFileJobRequest'
        description: >-
          The `fileUri` (unique URI of the file). The file should not currently
          be in the process of being uploaded to Smartling before being added to
          a job. To check this, you can invoke the file-api /file/status API on
          the file and verify a `200` response before requesting the file be
          added to the job.
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessFailCountJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        failCount: 1
                        successCount: 1
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          description: Validation error adding file to a job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                      - key: null
                        message: 'File not found: <fileUri>'
                        details: null
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        423:
          description: >-
            The requested file is currently being processed by another
            operation. The file will be unlocked after the operation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error423Response'
              examples:
                response:
                  value:
                    response:
                      code: RESOURCE_LOCKED
                      errors:
                        key: resource.locked
                        message: >-
                          The file is currently being processed and will be
                          available in a few minutes.
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/file/remove:
    post:
      summary: Remove file from job
      description: >
        Removes a file from a job. All content that is part of the file
        contained within that job will be removed from the job and will become
        unauthorized content.


        When the system can quickly remove the file and its content from the job
        synchronously, it responds with a `200` status. When the system cannot
        quickly remove the file and its content from the job, a `202` response
        is returned. The response contains a link to check the progress of the
        request. When a `202` is received, the process of removing the file and
        its content from the job will not be complete until the returned process
        has completed.
      tags:
      - Jobs
      operationId: removeFileFromJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveFileJobRequest'
        description: >-
          The `fileUri` (unique URI of the file) that is to be removed from the
          job.
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessFailCountJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        failCount: 1
                        successCount: 1
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Not found validation error
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: null
                        message: null
                        details: null

        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/files:
    get:
      summary: List files within job
      description: This lists all files within a job.
      tags:
      - Jobs
      operationId: getJobFilesList

      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: translationJobUid
          required: true
          schema:
            type: string
        - description: The limit on the number of files returned.
          in: query
          name: limit
          required: false
          schema:
            type: integer
        - description: The offset to use when searching for files.
          in: query
          name: offset
          required: false
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - uri: /file/app1.properties
                        - uri: /file/app2.properties
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/locales/{targetLocaleId}':
    post:
      summary: Add locale to job
      description: >
        This adds a locale to a job. When the system can quickly add the locale
        and any content to the job, it synchronously responds with status `200`.
        When the system can't quickly add the locale and any content to the job,
        a `202` response is returned. The response contains a link to check the
        progress of the request. When a `202` is received, the process of adding
        the content to the job will not be complete until the returned process
        has completed.
      tags:
      - Jobs
      operationId: addLocaleToJob

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      - in: path
        name: targetLocaleId
        required: true
        schema:
          type: string
      - description: >-
          Default to true. When a new locale is being added to a job, by
          default all content in the job will be added to the job for the new
          locale. If set to false, then no content will be added to the job,
          and only a locale placeholder will be added to the job.
        in: query
        name: syncContent
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullDataJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

    delete:
      summary: Remove locale from job
      description: >
        This removes a locale from a job. When removing a locale from a job (and
        thus any content within that job for that locale), the content being
        removed will be unauthorized.


        When the system can quickly remove the locale and any content from the
        job, it synchronously responds with status `200`. When the system cannot
        quickly remove the locale and any content from the job, then a `202`
        response is returned. The response contains a link to check the progress
        of the request. When a `202` is received, the process of removing the
        content from the job will not be complete until the returned process has
        completed.
      tags:
      - Jobs
      operationId: removeLocaleFromJob
      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      - in: path
        name: targetLocaleId
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NullDataJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncProcessJobResponse'
              examples:
                response:
                  value:
                    response:
                      code: ACCEPTED
                      data:
                        message: >-
                          This process will continue asynchronously and may take
                          up to a few minutes.
                        url: >-
                          https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  '/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/file/progress':
    get:
      summary: Get progress of file within job
      description: This shows the progress of a file within a job.
      tags:
      - Jobs
      operationId: getJobFileProgress

      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
        - in: path
          name: translationJobUid
          required: true
          schema:
            type: string
        - in: query
          name: fileUri
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        contentProgressReport:
                        - progress:
                            percentComplete: 25
                            totalWordCount: 16
                          targetLocaleDescription: Ukrainian (Ukraine)
                          targetLocaleId: uk-UA
                          unauthorizedProgressReport:
                            stringCount: 0
                            wordCount: 0
                          workflowProgressReportList:
                          - workflowName: Project Default
                            workflowStepSummaryReportItemList:
                            - stringCount: 4
                              wordCount: 16
                              workflowStepName: Translation
                              workflowStepType: TRANSLATION
                              workflowStepUid: 559ce40f2789
                            - stringCount: 0
                              wordCount: 0
                              workflowStepName: Edit
                              workflowStepType: POST_TRANSLATION__EDIT
                              workflowStepUid: 704a4b554b85
                            - stringCount: 0
                              wordCount: 0
                              workflowStepName: Published
                              workflowStepType: PUBLISH
                              workflowStepUid: b50f989af2c3
                            workflowUid: 091e04a9faca
                        - progress:
                            percentComplete: 75
                            totalWordCount: 16
                          targetLocaleDescription: Russian
                          targetLocaleId: ru-RU
                          unauthorizedProgressReport:
                            stringCount: 0
                            wordCount: 0
                          workflowProgressReportList:
                          - workflowName: Project Default
                            workflowStepSummaryReportItemList:
                            - stringCount: 1
                              wordCount: 4
                              workflowStepName: Translation
                              workflowStepType: TRANSLATION
                              workflowStepUid: 559ce40f2789
                            - stringCount: 2
                              wordCount: 8
                              workflowStepName: Edit
                              workflowStepType: POST_TRANSLATION__EDIT
                              workflowStepUid: 704a4b554b85
                            - stringCount: 1
                              wordCount: 4
                              workflowStepName: Published
                              workflowStepType: PUBLISH
                              workflowStepUid: b50f989af2c3
                            workflowUid: 091e04a9faca
                        progress:
                          percentComplete: 50
                          totalWordCount: 32
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/progress:
    get:
      summary: Get progress of job
      description: This gets the progress of a job.
      tags:
      - Jobs
      operationId: getJobProgress

      parameters:
      - in: path
        name: projectId
        required: true
        schema:
          type: string
      - in: path
        name: translationJobUid
        required: true
        schema:
          type: string
      - in: query
        name: targetLocaleId
        required: false
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgressResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        contentProgressReport:
                        - progress:
                            percentComplete: 25
                            totalWordCount: 16
                          targetLocaleDescription: Ukrainian (Ukraine)
                          targetLocaleId: uk-UA
                          unauthorizedProgressReport:
                            stringCount: 0
                            wordCount: 0
                          workflowProgressReportList:
                          - workflowName: Project Default
                            workflowStepSummaryReportItemList:
                            - stringCount: 4
                              wordCount: 16
                              workflowStepName: Translation
                              workflowStepType: TRANSLATION
                              workflowStepUid: 559ce40f2789
                            - stringCount: 0
                              wordCount: 0
                              workflowStepName: Edit
                              workflowStepType: POST_TRANSLATION__EDIT
                              workflowStepUid: 704a4b554b85
                            - stringCount: 0
                              wordCount: 0
                              workflowStepName: Published
                              workflowStepType: PUBLISH
                              workflowStepUid: b50f989af2c3
                            workflowUid: 091e04a9faca
                        - progress:
                            percentComplete: 75
                            totalWordCount: 16
                          targetLocaleDescription: Russian
                          targetLocaleId: ru-RU
                          unauthorizedProgressReport:
                            stringCount: 0
                            wordCount: 0
                          workflowProgressReportList:
                          - workflowName: Project Default
                            workflowStepSummaryReportItemList:
                            - stringCount: 1
                              wordCount: 4
                              workflowStepName: Translation
                              workflowStepType: TRANSLATION
                              workflowStepUid: 559ce40f2789
                            - stringCount: 2
                              wordCount: 8
                              workflowStepName: Edit
                              workflowStepType: POST_TRANSLATION__EDIT
                              workflowStepUid: 704a4b554b85
                            - stringCount: 1
                              wordCount: 4
                              workflowStepName: Published
                              workflowStepType: PUBLISH
                              workflowStepUid: b50f989af2c3
                            workflowUid: 091e04a9faca
                        progress:
                          percentComplete: 50
                          totalWordCount: 32
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: null
                        message: null
                        details: null

        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/locales-completion-dates:
    get:
      summary: Get last completion dates per locale of job
      description: >-
        Returns the last completion date for any locale completed within the
        job.
      tags:
      - Jobs
      operationId: getJobLastCompletionDatesPerLocale

      parameters:
        - description: A unique identifier for a project.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: A unique identifier for a job.
          in: path
          name: translationJobUid
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                          - completionDate: '2018-08-29T08:17:40Z'
                            targetLocaleId: de-DE
                        totalCount: 1
              schema:
                $ref: '#/components/schemas/ListJobLocalesCompletionDatesResponse'
          description: OK
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
              examples:
                response:
                  value:
                    response:
                      code: NOT_FOUND_ERROR
                      errors:
                      - key: null
                        message: null
                        details: null

        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

#
# Tags API
#
  /tags-api/v2/projects/{projectId}/tags:
    get:
      summary: List tags within a project
      description: List / search tags within a project.
      tags:
      - Tags
      operationId: getTagsListByProject

      parameters:
      - description: Project Id for search.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Tag mask for search.
        in: query
        name: tagMask
        required: false
        schema:
          default: ''
          type: string
      - description: The limit on the number of tags returned.
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 100
          minimum: 0
          type: number
      - description: The offset to use when searching for tags.
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProjectTagsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - tag: StringTag
                        - tag: AnotherTag
                        totalCount: 2
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          https://api.smartling.com/tags-api/v2/projects/$smartlingProjectId/tags

  /tags-api/v2/projects/{projectId}/strings/tags/search:
    post:
      summary: Get all tags for strings
      description: Retrieve all tags linked to strings.
      tags:
      - Tags
      operationId: getAllTagsForStrings

      parameters:
      - description: Project Id for search.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                stringHashcodes:
                  items:
                    description: String hashcode
                    type: string
                  maxItems: 1000
                  type: array
              required:
              - stringHashcodes
              type: object
        description: List of string hashcodes
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStringsTagsResponse'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/tags-api/v2/projects/$smartlingProjectId/strings/tags/search

  /tags-api/v2/projects/{projectId}/strings/tags/add:
    post:
      summary: Add tags to strings
      description: Add a list of tags to a list of strings.
      tags:
      - Tags
      operationId: addTagToStrings

      parameters:
      - description: Project Id.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TagsWithStrings'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/tags-api/v2/projects/$smartlingProjectId/strings/tags/add

  /tags-api/v2/projects/{projectId}/strings/tags/remove:
    post:
      summary: Remove tags from strings
      description: Remove a list of tags from a list of strings.
      tags:
      - Tags
      operationId: removeTagsFromStrings

      parameters:
      - description: Project Id.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TagsWithStrings'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/tags-api/v2/projects/$smartlingProjectId/strings/tags/remove

  /tags-api/v2/projects/{projectId}/strings/tags/remove/all:
    post:
      summary: Remove all tags from strings
      description: Remove all tags from a list of strings.
      tags:
      - Tags
      operationId: removeAllTagsFromStrings

      parameters:
      - description: Project Id.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                stringHashcodes:
                  description: List of string hashcodes
                  items:
                    type: string
                  maxItems: 1000
                  type: array
              required:
              - stringHashcodes
              type: object
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                - response
                properties:
                  response:
                    $ref: '#/components/schemas/SuccessResponse'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/tags-api/v2/projects/$smartlingProjectId/strings/tags/remove/all

  #
  # GDN url management
  #
  /gdn-url-management-api/v2/projects/{projectId}/web-pages/list:
    post:
      summary: Get list of URLs
      description: Get list of URLs.
      tags:
      - GDN url management
      operationId: getGdnUrlsList

      parameters:
      - description: Unique identifier of the project within an account.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebPageListRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPageListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - created: '2015-11-21T11:51:17Z'
                          domain:
                            name: my.domain.com
                          urlPath: /home/page.htm
                          webPageUid: 23dsd23md
                        totalCount: 1

      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/gdn-url-management-api/v2/projects/$smartlingProjectId/web-pages/list

  /gdn-url-management-api/v2/projects/{projectId}/web-pages/details:
    post:
      summary: Get details for URLs
      description: Retrieve details of the URLs.
      tags:
      - GDN url management
      operationId: getGdnUrlsDetails

      parameters:
      - description: Unique identifier of the project within an account.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebPageDetailListRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPageDetailListResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - details:
                            contextUids:
                            - 122ssasa323
                            - 334asds3434
                            created: '2015-11-21T01:51:17Z'
                            stringCount: 10
                            wordCount: 25
                          domain:
                            name: my.domain.com
                          urlPath: /home/page.htm
                          webPageUid: 23dsd23md
                        totalCount: 1
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST -H "Authorization: Bearer $smartlingToken" -H
          "Content-Type: application/json" -d "$smartlingStringTagJSON"
          https://api.smartling.com/gdn-url-management-api/v2/projects/$smartlingProjectId/web-pages/details

  /gdn-url-management-api/v2/projects/{projectId}/web-pages/{webPageUid}:
    get:
      summary: Get details for URL
      description: Retrieve detail for the URL.
      tags:
      - GDN url management
      operationId: getGdnUrlDetailsSingleUrl

      parameters:
      - description: Unique identifier of the project within an account.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      - description: Unique identifier of the URL
        in: path
        name: webPageUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPageDetailsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        details:
                          contextUids:
                          - 122ssasa323
                          - 334asds3434
                          created: '2015-11-21T01:51:17Z'
                          stringCount: 10
                          wordCount: 25
                        domain:
                          name: my.domain.com
                        urlPath: /home/page.htm
                        webPageUid: 23dsd23md
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          https://api.smartling.com/gdn-url-management-api/v2/projects/$smartlingProjectId/web-pages/$webPageUid

  /gdn-url-management-api/v2/projects/{projectId}/domains:
    get:
      summary: Get domains for project
      description: Get domains for project.
      tags:
      - GDN url management
      operationId: getProjectDomains

      parameters:
      - description: Unique identifier of the project within an account.
        in: path
        name: projectId
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebPageDomainsResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        totalCount: 1
                        items:
                        - name: my.domain.com
      x-code-samples:
      - lang: curl
        source: >
          curl -H "Authorization: Bearer $smartlingToken"
          https://api.smartling.com/gdn-url-management-api/v2/projects/$smartlingProjectId/domains

  #
  # Job batches
  #

  '/jobs-batch-api/v1/projects/{projectId}/batches':
    post:
      summary: Create batch
      description: >-
        Creates a new batch for the given Job. If `authorize` is set to `true`,
        then Job authorize will be triggered on the batch execute step. When the
        batch is created, it has the status: `NEW`.
      tags:
      - Job batches
      operationId: createJobBatch

      parameters:
      - description: A unique identifier for a project.
        in: path
        name: projectId
        required: true
        schema:
          format: uid
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBatchRequest'
        description: Create Batch Request
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBatchResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        batchUid: qwe0rty98poi
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: provided translationJobUid is not found in the TMS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                        key: job.not.found
                        message: >-
                          Job {translationJobUid} not found for project {projectId}.
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: >
          curl -X POST
          "https://api.smartling.com/jobs-batch-api/v1/projects/$smartlingProjectId/batches"
          -H "Authorization: Bearer $smartlingToken" -H "Content-Type:
          application/json" -d '{"translationJobUid":
          "$translationJobUid","authorize": true}'

    get:
      summary: List batches
      description: 'List existing batches for the project, filtered by the given criteria.'
      tags:
      - Job batches
      operationId: getJobBatchesList

      parameters:
        - description: An unique identifier for a project.
          in: path
          name: projectId
          required: true
          schema:
            format: uuid
            type: string
        - description: A unique identifier for a translationJob.
          in: query
          name: translationJobUid
          schema:
            format: uid
            type: string
        - description: The status of the Batch
          in: query
          name: status
          schema:
            $ref: '#/components/schemas/BatchStatus'
        - description: The field to sort by
          in: query
          name: sortBy
          schema:
            default: createdDate
            enum:
              - createdDate
              - status
            type: string
        - description: Sorting direction
          in: query
          name: orderBy
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - description: >-
            Standard Smartling limit and offset to paginate through results. 0
            if not specified.
          in: query
          name: offset
          schema:
            default: 0
            type: integer
        - description: >-
            Standard Smartling limit and offset to paginate through results. 20
            batches are returned by default if not specified.
          in: query
          name: limit
          schema:
            default: 20
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBatchesResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - authorized: 'true'
                          batchUid: 559ce40f2789
                          createdDate: '2015-11-21T11:51:17Z'
                          hasError: 'false'
                          modifiedDate: '2015-11-21T11:51:17Z'
                          projectId: asf53fds34
                          status: DRAFT
                          translationJobUid: 635gf40f9846
                        - authorized: 'true'
                          batchUid: 456dv32d0934
                          createdDate: '2015-11-21T11:51:17Z'
                          hasError: 'false'
                          modifiedDate: '2015-11-22T10:24:14Z'
                          projectId: asf53fds34
                          status: EXECUTING
                          translationJobUid: 635gf40f9846
                        totalCount: 2
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
        - lang: curl
          source: |
            curl -X GET \
            'https://api.smartling.com/jobs-batch-api/v1/projects/$smartlingProjectId/batches?translationJobUid={translationJobUid}&status={status}&sortBy=createdDate&orderBy=desc&offset=0&limit=20' \
            -H "Authorization: Bearer $smartlingToken"

  '/jobs-batch-api/v1/projects/{projectId}/batches/{batchUid}':
    get:
      summary: Get batch status
      description: >-
        Returns batch status with detailed statuses of all batch items and their
        locales.
      tags:
      - Job batches
      operationId: getJobBatchStatus

      parameters:
        - description: A unique identifier for a project.
          in: path
          name: projectId
          required: true
          schema:
            format: uid
            type: string
        - description: A unique identifier for a batch.
          in: path
          name: batchUid
          required: true
          schema:
            format: uid
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchStatusResponse'
              examples:
                response:
                  value:
                    response:
                      code: OK
                      data:
                        authorized: 'true'
                        files:
                        - errors: ''
                          fileUri: files/example1.json
                          status: ATTACHING
                          targetLocales:
                          - localeId: de-DE
                            stringsAdded: 0
                            stringsSkipped: 0
                          - localeId: fr-FR
                            stringsAdded: 0
                            stringsSkipped: 0
                          updatedDate: '2015-11-21T11:53:17Z'
                        - errors: ''
                          fileUri: files/example2.xml
                          status: UPLOADING
                          targetLocales:
                          - localeId: de-DE
                            stringsAdded: 0
                            stringsSkipped: 0
                          - localeId: fr-FR
                            stringsAdded: 0
                            stringsSkipped: 0
                          updatedDate: '2015-11-21T11:54:19Z'
                        generalErrors: ''
                        projectId: dg63gkb4v
                        status: ADDING_FILES
                        translationJobUid: sjhs782hdb4djf
                        updatedDate: '2015-11-21T11:51:17Z'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: provided translationJobUid is not found in the TMS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                        key: Batch.not.found
                        message: 'Bob {batchUid} not found for project {projectId}.'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
    post:
      summary: Execute batch
      description: >-
        Triggers asynchronous execution of a batch.


        In the execution flow, the batch waits until upload and attach processes
        are completed successfully (or failed for any reason). When all of these
        asynchronous processes are completed, job `authorize` is triggered if it
        was requested, and the batch becomes a status of `COMPLETED`.


        Batch execution is allowed only if the batch is in `ADDING_FILES`
        status.
      tags:
      - Job batches
      operationId: startJobBatch

      parameters:
        - description: A unique identifier for a project.
          in: path
          name: projectId
          required: true
          schema:
            format: uid
            type: string
        - description: A unique identifier for a batch.
          in: path
          name: batchUid
          required: true
          schema:
            format: uid
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchActionRequest'
      responses:
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: provided translationJobUid is not found in the TMS
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                        key: Batch.not.found
                        message: 'Bob {batchUid} not found for project {projectId}.'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
        - lang: curl
          source: |
            curl -X POST \
            'https://api.smartling.com/jobs-batch-api/v1/projects/$smartlingProjectId/batches/$batchUid' \
            -H "Authorization: Bearer $smartlingToken" \
            -H "Content-Type: application/json" \
            -d '{ "action": "execute" }'

  /jobs-batch-api/v1/projects/{projectId}/batches/{batchUid}/file:
    post:
      summary: Add file to a batch
      description: >
        This endpoint is actually a proxy for Upload File in the Files API, and
        it works with these two differences:
         1. It additionally gets `batchUid` as a path parameter.
         2. It doesn't relay `localeIdsToAuthorize` to Files Api, therefore the file stays unauthorized. Instead, `localeIdsToAuthorize` are saved just for this batch session and are used when a file is being attached to a job.

        When the first file is added to the new batch, it becomes an
        `ADDING_FILES` status. Adds original source content to a Job batch in
        Smartling.


        The curl example provided will upload your Java properties file directly
        to a Smartling project, identified by the `projectId`, and attaches it
        to a Job linked to `batchUid`. The response is returned right after the
        content of a file is accepted by the Files API. After that, the Batch
        service controls whether the file upload finished. Content is parsed,
        all strings are ingested, and the file is then attached to the Job which
        is linked to the batch for locales, described in `localeIdsToAuthorize`.
      tags:
      - Job batches
      operationId: addFileToJobBatch

      parameters:
        - description: A unique identifier for a project.
          in: path
          name: projectId
          required: true
          schema:
            format: uid
            type: string
        - description: A unique identifier for a batch.
          in: path
          name: batchUid
          required: true
          schema:
            format: uid
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  description: The file contents to upload.
                fileUri:
                  description: >
                    A value that uniquely identifies the uploaded file. This ID
                    can be used to request the file back. We recommend that you
                    use file path and file name, similar to how version control
                    systems identify the file.


                    Example: `/myproject/i18n/ui.properties`
                  type: string
                fileType:
                  $ref: '#/components/schemas/FileType'
                authorize:
                  default: false
                  description: >
                    Ignored

                    Endpoint accepts this field to be consistent with `File
                    Upload` but it doesn't relay it to File Api
                  type: boolean
                'localeIdsToAuthorize[]':
                  description: >
                    This value declares locales list which should be used when
                    file is attached to a job.


                    **Note**: File will not be authorized for these locales once
                    it is uploaded. Authorization is happened only when job is
                    authorized.
                  items:
                    type: string
                  type: array
                smartling.namespace:
                  description: >
                    This is only for accounts created after July 31st, 2015.
                    Define a custom
                    [namespace](https://developer.smartling.com/v2.0/docs/string-sharing-namespaces)
                    for the file.


                    **Note**: While this parameter shares the format of other
                    file directives, it will not work as an inline directive and
                    must be specified in the API call.
                  type: string
                smartling.file_charset:
                  description: >
                    Specifies a custom charset for text-format files. The value
                    should be the name of the character set. See a full list of
                    supported character sets here.


                    If this directive is not used, Smartling will use the
                    ```Content-Type``` request header to determine if the
                    content is encoded with UTF-16, UTF-16B or UTF-16LE. If
                    there is no ```Content-Type``` header, Smartling will
                    examine the file for UTF-16 characters. If none are
                    detected, UTF-8 encoding will be used.


                    **Note**: Once this property has been set for a file, it
                    cannot be changed. If you reupload the file, it will use the
                    original charset, even if you change the directive. An error
                    will be returned if this directive is used when uploading
                    binary-format file types, such as Office or IDML files.
                  type: string
                'smartling.[command]':
                  description: >
                    Provides custom parser configuration for supported file
                    types. See [Supported File
                    Types](https://developer.smartling.com/docs/supported-file-types)
                    for more details.
                  type: string
                callbackUrl:
                  description: >
                    A GET request that creates a callback to a URL when a file
                    is 100% published for a locale. The callback gives the
                    fileUri and locale with the format
                    `http[/s]://your.url?locale=xx-XX&fileUri=your.file`. If you
                    upload the file again, without a callbackUrl, it will remove
                    any previous callbackUrl for that file. The RequestBin
                    (http://requestb.in) service is a convenient way to test
                    callback. RequestBin generates a short-lived disposable URL
                    that displays all posted requests.


                    If a callback fails, Smartling will make multiple attempts
                    to reach the designated URL, however, we do not keep
                    retrying a failed callback indefinitely. Try to make sure
                    your callback URL is as stable as possible and be aware that
                    callbacks are not a 100% reliable way of being notified that
                    a file is published.


                    If the upload has begun but is taking more than a minute to
                    complete, it responds with status `202`.
                  format: url
                  type: string
              required:
              - file
              - fileUri
              - fileType
              - localeIdsToAuthorize[]
              type: object
        required: true
      responses:
        202:
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesAPIUploadAcceptedResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        message: >-
                          Your file was successfully uploaded. Word and string
                          counts are not available right now.
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        404:
          description: Batch provided in path is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
              examples:
                response:
                  value:
                    response:
                      code: VALIDATION_ERROR
                      errors:
                        key: batch.not.found
                        message: >-
                          Batch with uid={batchUid} and projectId={projectId}
                          not found.
        423:
          description: >-
            The requested file is currently being processed by another
            operation. The file will be unlocked after the operation completes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error423Response'
              examples:
                response:
                  value:
                    response:
                      code: RESOURCE_LOCKED
                      errors:
                        key: resource.locked
                        message: >-
                          The file is currently being processed and will be
                          available in a few minutes.
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
        - lang: curl
          source: |
            curl -X POST \
            'https://api.smartling.com/jobs-batch-api/v1/projects/$smartlingProjectId/batches/{batchUid}/file' \
            -H "Authorization: Bearer $smartlingToken" \
            -F "file=@file.properties;type=text/plain" \
            -F "fileUri=file.properties" \
            -F "fileType=javaProperties" \
            -F "localeIdsToAuthorize[]=fr-FR" \
            -F "localeIdsToAuthorize[]=ru-RU"

#
# Vendors API
#

  /vendors-api/v2/agencies/{agencyUid}/jobs:
    get:
      summary: List available jobs
      description: Returns the list of jobs available for the agency.
      tags:
      - Vendors
      operationId: getJobsListByAgency

      parameters:
      - in: path
        name: agencyUid
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorsAPIJobsListSuccessResponse'
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'
      x-code-samples:
      - lang: curl
        source: |
          curl -H "Authorization: Bearer $smartlingToken" -H "Content-Type: application/json" \
          https://api.smartling.com/vendors-api/v2/agencies/{agencyUid}/jobs

#
# Reports API
#

  /reports-api/v3/word-count:
    get:
      summary: Get Word Count Report
      description: Word Count report data for the specified parameters.
      tags:
      - Reports
      operationId: getWordCountReport

      parameters:
        - description: >-
            A parameter to limit words processed on or after the
            ```startDate```, in America/New_York timezone.
          in: query
          name: startDate
          required: true
          schema:
            format: YYYY-MM-DD
            type: string
        - description: >-
            A parameter to limit words processed on or before the ```endDate```,
            in America/New_York timezone.
          in: query
          name: endDate
          required: true
          schema:
            format: YYYY-MM-DD
            type: string
        - description: Unique identifier of corresponding account.
          in: query
          name: accountUid
          required: true
          schema:
            type: string
        - description: Optional parameter to filter to the specified list of projects.
          in: query
          name: projectIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            jobs.
          in: query
          name: jobUids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            resources.
          in: query
          name: userUids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            locale IDs.
          in: query
          name: targetLocaleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >
            Optional parameter to specify whether the report should group word
            count by translation resource name.
          in: query
          name: includeTranslationResource
          required: false
          schema:
            default: true
            type: boolean
        - description: >
            Optional parameter to specify whether the report should group word
            count by translation job name.
          in: query
          name: includeJob
          required: false
          schema:
            default: true
            type: boolean
        - description: >
            Optional parameter to specify whether the report should group word
            count by fuzzy match profile and tier.
          in: query
          name: includeFuzzyMatchProfile
          required: false
          schema:
            default: true
            type: boolean
        - description: Maximum number of records to return in the report.
          in: query
          name: limit
          required: false
          schema:
            default: 5000
            maximum: 5000
            minimum: 0
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WordCountResponse'
              examples:
                response:
                  value:
                    response:
                      code: SUCCESS
                      data:
                        items:
                        - accountName: Test Account
                          accountUid: 35a84f71
                          agencyName: Test Agency 1
                          agencyUid: 0ed85b93
                          fuzzyProfileName: Default
                          fuzzyTier: 85 - 94.9%
                          jobName: Translation Job 1
                          jobUid: f12ad8e9
                          projectId: ba952f4c
                          projectName: Test Project 1
                          targetLocaleId: es-ES
                          targetLocaleName: Spanish (Spain)
                          translationResourceName: Agency Translator 5
                          translationResourceUid: da57302e
                          weightedWordCount: 4
                          wordCount: 20
                          workflowStepType: Translation
                        - accountName: Test Account
                          accountUid: 35a84f71
                          agencyName: Test Agency 2
                          agencyUid: 4d6230e1
                          jobName: Translation Job 1
                          jobUid: f12ad8e9
                          projectId: ba952f4c
                          projectName: Test Project 1
                          targetLocaleId: es-ES
                          targetLocaleName: Spanish (Spain)
                          translationResourceName: Agency Editor 12
                          translationResourceUid: 5eb90a14
                          weightedWordCount: 20
                          wordCount: 20
                          workflowStepType: Edit
                        resultsTruncated: false
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /reports-api/v3/word-count/csv:
    get:
      summary: Export Word Count in CSV format
      description: Export Word Count report in CSV format.
      tags:
      - Reports
      operationId: expoertWordCountReport

      parameters:
        - description: >-
            A parameter to limit words processed on or after the
            ```startDate```, in America/New_York timezone.
          in: query
          name: startDate
          required: true
          schema:
            format: YYYY-MM-DD
            type: string
        - description: >-
            A parameter to limit words processed on or before the ```endDate```,
            in America/New_York timezone.
          in: query
          name: endDate
          required: true
          schema:
            format: YYYY-MM-DD
            type: string
        - description: Unique identifier of corresponding account.
          in: query
          name: accountUid
          required: true
          schema:
            type: string
        - description: Optional parameter to filter to the specified list of projects.
          in: query
          name: projectIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            jobs.
          in: query
          name: jobUids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            resources.
          in: query
          name: userUids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Optional parameter to filter to the specified list of translation
            locale IDs.
          in: query
          name: targetLocaleIds
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >
            Optional parameter to specify whether the report should group word
            count by translation resource name.
          in: query
          name: includeTranslationResource
          required: false
          schema:
            default: true
            type: boolean
        - description: >
            Optional parameter to specify whether the report should group word
            count by translation job name.
          in: query
          name: includeJob
          required: false
          schema:
            default: true
            type: boolean
        - description: >
            Optional parameter to specify whether the report should group word
            count by fuzzy match profile and tier.
          in: query
          name: includeFuzzyMatchProfile
          required: false
          schema:
            default: true
            type: boolean
      responses:
        200:
          description: OK
          content:
            text/csv:
              schema:
                type: string
              examples:
                response:
                  value: >-
                    Account,Project,Job,Translation Resource,Agency,Target
                    Language,Workflow Step,Fuzzy Profile,Fuzzy Breakdown,Word
                    Count,Weighted Words Test Account,Test Project,Translation
                    Job,Translator 1,Test Agency 1,Spanish
                    (Spain),Translation,Default,85 - 94.9%,20,4
        400:
          $ref: '#/components/responses/Error400ResponseDefinition'
        401:
          $ref: '#/components/responses/Error401ResponseDefinition'
        429:
          $ref: '#/components/responses/Error429ResponseDefinition'
        500:
          $ref: '#/components/responses/Error500ResponseDefinition'

  /translation-quality-api/v2/dictionary/check-types:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/dictionary_checkTypes'

  /translation-quality-api/v2/dictionary/check-types/{checkTypeCode}/sub-types:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/dictionary_checkType_subTypes'

  /translation-quality-api/v2/dictionary/severity-levels:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/dictionary_severity_levels'

  /translation-quality-api/v2/dictionary/check-types/GLOSSARY_COMPLIANCE/match-methods:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/dictionary_checkType_GLOSSARY_COMPLIANCE_match_methods'

  /translation-quality-api/v2/dictionary/check-types/TRADEMARK_CONSISTENCY/trademark-types:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/dictionary_checkType_TRADEMARK_CONSISTENCY_trademark_types'

  /translation-quality-api/v2/users/current/settings/dictionaries/{localeId}:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/users_current_settings_dictionaries_locale'

  /translation-quality-api/v2/users/current/settings/dictionaries/{localeId}/{wordUid}:
    $ref: './spec/translation_quality/dictionaries.yaml#/x-paths/users_current_settings_dictionaries_locale_word'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/severity-level:
    $ref: './spec/translation_quality/check_type_severity_level.yaml#/x-paths/check_type_severity_level'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/sub-types/{checkSubTypeCode}/severity-level:
    $ref: './spec/translation_quality/check_type_severity_level.yaml#/x-paths/check_type_subtype_severity_level'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/severity-level/reset:
    $ref: './spec/translation_quality/check_type_severity_level.yaml#/x-paths/check_type_severity_level_reset'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups:
    $ref: './spec/translation_quality/account_settings.yaml#/x-paths/check_type_groups'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}:
    $ref: './spec/translation_quality/account_settings.yaml#/x-paths/check_type_groups_group'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}/locales:
    $ref: './spec/translation_quality/account_settings.yaml#/x-paths/check_type_groups_group_locales'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}/locales/{targetLocaleId}:
    $ref: './spec/translation_quality/account_settings.yaml#/x-paths/check_type_groups_group_locales_locale'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}/sub-types/{checkSubTypeCode}/severity-level:
    $ref: './spec/translation_quality/check_type_severity_level.yaml#/x-paths/check_type_group_subtype_severity_level'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}/severity-level:
    $ref: './spec/translation_quality/check_type_severity_level.yaml#/x-paths/check_type_group_severity_level'

  /translation-quality-api/v2/accounts/{accountUid}/check-types:
    $ref: './spec/translation_quality/checks/accounts.yaml#/x-paths/check_types_settings'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}:
    $ref: './spec/translation_quality/checks/accounts.yaml#/x-paths/account_check_types_settings_effective'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/settings:
    $ref: './spec/translation_quality/checks/accounts.yaml#/x-paths/check_types_checkType_settings'

  /translation-quality-api/v2/accounts/{accountUid}/check-types/{checkTypeCode}/groups/{groupUid}/settings:
    $ref: './spec/translation_quality/checks/accounts.yaml#/x-paths/check_types_checkType_group_settings'

  /translation-quality-api/v2/accounts/{accountUid}/projects/{projectId}/check:
    $ref: './spec/translation_quality/tqc_check.yaml#/x-paths/tqc_check'

components:
  requestBodies:
    TagsWithStrings:
      content:
        application/json:
          schema:
            properties:
              tags:
                description: List of tags
                items:
                  type: string
                maxItems: 100
                minItems: 1
                type: array
              stringHashcodes:
                description: List of string hashcodes
                items:
                  type: string
                maxItems: 1000
                type: array
            required:
              - tags
              - stringHashcodes
            type: object
      required: true

  schemas:
    LEADING_TRAILING_SPACES:
      $ref: './spec/translation_quality/checks/leading_trailing_spaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    ORIGINAL_EQUALS_TARGET:
      $ref: './spec/translation_quality/checks/original_equals_target.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    WHITESPACES:
      $ref: './spec/translation_quality/checks/whitespaces.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    SPELLCHECK:
      $ref: './spec/translation_quality/checks/spellcheck.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    UNCATEGORIZED:
      $ref: './spec/translation_quality/checks/uncategorized.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TAG_CONSISTENCY:
      $ref: './spec/translation_quality/checks/tag_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TARGET_LENGTH_LIMIT:
      $ref: './spec/translation_quality/checks/target_length_limit.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    NUMBER_CONSISTENCY:
      $ref: './spec/translation_quality/checks/number_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    REPEATED_WORD:
      $ref: './spec/translation_quality/checks/repeated_word.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TARGET_IN_WRONG_LANGUAGE:
      $ref: './spec/translation_quality/checks/target_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    SOURCE_IN_WRONG_LANGUAGE:
      $ref: './spec/translation_quality/checks/source_in_wrong_language.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    SEGMENT_COMPLETENESS:
      $ref: './spec/translation_quality/checks/segment_completeness.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    NON_TRANSLATABLE_TEXT:
      $ref: './spec/translation_quality/checks/non_translatable_text.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    EMOJI_CONSISTENCY:
      $ref: './spec/translation_quality/checks/emoji_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TAG_VALIDITY:
      $ref: './spec/translation_quality/checks/tag_validity.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    INSERTABLE_CONSISTENCY:
      $ref: './spec/translation_quality/checks/insertable_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TARGET_SOURCE_CONSISTENCY:
      $ref: './spec/translation_quality/checks/target_source_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    BLACKLISTED_TERMS:
      $ref: './spec/translation_quality/checks/blacklisted_terms.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    GLOSSARY_COMPLIANCE:
      $ref: './spec/translation_quality/checks/glossary_compliance.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    TRADEMARK_CONSISTENCY:
      $ref: './spec/translation_quality/checks/trademark_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    GRAMMAR_CHECK:
      $ref: './spec/translation_quality/checks/grammar_check.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'
    GLOBAL_CAPITALISATION_CONSISTENCY:
      $ref: './spec/translation_quality/checks/global_capitalisation_consistency.yaml#/components/schemas/AccountCheckTypeEffectiveDTO'

    BatchStatus:
      enum:
      - DRAFT
      - ADDING_FILES
      - EXECUTING
      - COMPLETED
      type: string

    AccountAPIListProjectItem:
      example:
        accountUid: ab5f1939
        archived: false
        projectId: fd7244365
        projectName: fd7244365
        projectTypeCode: APPLICATION_RESOURCES
        sourceLocaleDescription: English
        sourceLocaleId: en-US
      properties:
        accountUid:
          description: The unique identifier for the account
          type: string
        archived:
          description: >-
            Indicator whether or not the project has been archived. Archived
            projects are typically hidden from a user's view, but can still be
            accessible
          type: boolean
        projectId:
          description: A unique identifier for the project
          type: string
        projectName:
          description: >-
            The name of the project. Names of projects are not guaranteed to be
            unique within an account.
          type: string
        projectTypeCode:
          description: Indicator for the type of the project.
          type: string
        sourceLocaleDescription:
          description: The full name of the sourceLocaleId
          type: string
        sourceLocaleId:
          description: >-
            The locale identifier for the source locale of the project. This
            indicates the base locale for which content should be uploaded to
            the project.
          type: string
      required:
        - projectId
        - projectName
        - accountUid
        - archived
        - projectTypeCode
        - sourceLocaleId
        - sourceLocaleDescription
      type: object
    AccountAPIProjectListSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/AccountAPIListProjectItem'
                      type: array
                    totalCount:
                      description: The number of projects that match your specified criteria
                      type: integer
                  required:
                    - totalCount
                    - items
                  type: object
              type: object
    AccountIssueTypesResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          description:
                            description: Issue Type description
                            type: string
                          issueTypeCode:
                            description: Issue Type identifier
                            enum:
                              - SOURCE
                              - TRANSLATION
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    AddFileJobRequest:
      description: The payload to use when adding a file to a job.
      properties:
        fileUri:
          description: >-
            The URI of the file that has been uploaded to Smartling. `fileUri`
            is required.
          type: string
        targetLocaleIds:
          description: >-
            The array of `localeId`s that the file should be added to. If not
            specified, the file will be added to all locales. If specified, the
            file will only be added for the locales provided. If the locales
            were not already part of the job, then the job will be extended to
            contain the additional locales.
          items:
            type: string
          type: array
      type: object
    AddStringsJobRequest:
      description: The payload to use when adding strings to a job.
      properties:
        hashcodes:
          description: >-
            The array of hashcodes to use to add to the job. The hashcodes must
            exist within Smartling, for the project, in order to be added to a
            job. Hashcodes are required when adding strings to a job. Hashcodes
            are limited to 1000 per API call.
          items:
            type: string
          maxItems: 1000
          type: array
        moveEnabled:
          default: false
          description: >-
            (Optional), default is false. A string for a locale can only be in
            one job. If the string identified in the request is already in a job
            for a locale then it won't be added. However, `moveEnalbed=true` can
            be specified, and in this case, the string will be moved into the
            specified job.
          type: boolean
        targetLocaleIds:
          description: >-
            The array of `localeId`s that strings should be added to. If it's
            not specified, the strings will be added to all locales within that
            job. If it's specified, the strings will only be added for the
            locales provided. If the locales were not already part of the job,
            the job will be extended to contain the additional locales.
          items:
            type: string
          type: array
      type: object
    AsyncAcceptedResponse:
      properties:
        code:
          enum:
            - ACCEPTED
          type: string
      type: object
    AsyncMatchResponse:
      properties:
        response:
          properties:
            code:
              description: Code of the completed operation.
              enum:
                - SUCCESS
              type: string
            data:
              properties:
                matchId:
                  description: >-
                    Identifier of the started match operation. Should be
                    specified for getting matching stats.
                  format: uuid
                  type: string
              type: object
          type: object
      type: object
    AsyncMatchStatsResponse:
      properties:
        response:
          properties:
            code:
              description: Code of the completed operation.
              enum:
                - SUCCESS
              type: string
            data:
              properties:
                bindings:
                  items:
                    $ref: '#/components/schemas/Binding'
                  type: array
                createdDate:
                  format: date-time
                  type: string
                matchId:
                  description: >-
                    Identifier of the started match operation. Should be
                    specified for getting matching stats.
                  format: uuid
                  type: string
                modifiedDate:
                  format: date-time
                  type: string
                status:
                  enum:
                    - IN_PROGRESS
                    - COMPLETED
                    - FAILED
                  type: string
              type: object
          type: object
      type: object
    AsyncProcessJobResponse:
      allOf:
        - $ref: '#/components/schemas/AsyncAcceptedResponse'
        - properties:
            data:
              properties:
                message:
                  description: >-
                    User friendly string for the async response explaining the
                    async action taking place.
                  type: string
                processUid:
                  description: The unique identifier crated for the async process.
                  type: string
                url:
                  description: >-
                    The URL that a system can use to check the status of the
                    async processing request.
                  type: string
              type: object
          type: object
    Authentication:
      properties:
        accessToken:
          description: >-
            Contains the security credentials for a login session and identifies
            the user.
          type: string
        expiresIn:
          description: TTL (time-to-live) in seconds for the access token.
          type: integer
        refreshExpiresIn:
          description: TTL (time-to-live) in seconds for the refresh token.
          type: integer
        refreshToken:
          description: A kind of token that can be used to obtain a renewed access token.
          type: string
        tokenType:
          description: The access token type.
          enum:
            - Bearer
          type: string
      required:
        - accessToken
        - refreshToken
      type: object
    AuthenticationRefreshRequest:
      properties:
        refreshToken:
          description: The refresh token returned from a previous authentication request.
          type: string
      required:
        - refreshToken
      type: object
    AuthenticationRequest:
      properties:
        userIdentifier:
          description: Unique integer used to identify a user.
          example: Qw**********
          type: string
        userSecret:
          description: >-
            A personal code that identifies an authorized user of the API
            endpoint.
          example: Zj**********
          type: string
      required:
        - userIdentifier
        - userSecret
      type: object

    AuthenticationResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
          - $ref: '#/components/schemas/SuccessResponse'
          - properties:
              data:
                $ref: '#/components/schemas/Authentication'
            type: object

    AuthorizeJobItemRequest:
      description: Indicates which workflow to authorize for a given locale.
      properties:
        targetLocaleId:
          description: >-
            The locale identifier to use when indicating the locale to authorize
            content for. If `targetLocaleId` is specified, then `workflowUid` is
            required as well. Both can be omitted, and the default workflow for
            that locale will be used.
          type: string
        workflowUid:
          description: The UID of the workflow to authorize content into.
          type: string
      type: object
    AuthorizeJobRequest:
      properties:
        localeWorkflows:
          items:
            $ref: '#/components/schemas/AuthorizeJobItemRequest'
          type: array
      type: object
    AuthorizeTerms:
      properties:
        authorization:
          properties:
            localeWorkflows:
              description: Locale workflows
              items:
                $ref: '#/components/schemas/LocaleWorkflow'
              type: array
          required:
            - localeWorkflows
          type: object
        termUids:
          description: Unique identifiers of glossary terms
          items:
            example: 65c62a7c-6b8b-11e5-ba24-127b00b163a3
            type: string
          type: array
      required:
        - termUids
        - authorization
      type: object
    Batch:
      description: >-
        The Job Batch is a session for uploading multiple files into tms,
        attaching them to a translationJob and authorizing this job.
      properties:
        authorized:
          description: The flag showing if authorizing job is requested for this Batch
          type: boolean
        batchUid:
          description: A unique identifier for a batch.
          format: uid
          type: string
        createdDate:
          description: The UTC value of the date the batch was created.
          example: '2015-11-21T01:51:17.000Z'
          format: date-time
          type: string
        hasError:
          description: Shows if any error occured while batch processing.
          type: boolean
        modifiedDate:
          description: The UTC value of the date the batch was modified.
          example: '2015-11-21T01:51:17.000Z'
          format: date-time
          type: string
        projectId:
          description: The UID of the project
          format: uid
          type: string
        status:
          description: The status of the Batch
          enum:
            - DRAFT
            - ADDING_FILES
            - EXECUTING
            - COMPLETED
          type: string
        translationJobUid:
          description: The UID of the translationJob
          format: uid
          type: string
      type: object
    BatchActionRequest:
      description: Describes the action to be done with the Batch
      properties:
        action:
          enum:
            - execute
          type: string
      type: object
    BatchItem:
      description: Associates an uploaded file with particular Batch. BatchItem is handled
      properties:
        errors:
          description: >-
            A list of errors occured while uploading or attaching file linked to
            this batchItem
          type: string
        fileUri:
          description: Uri of the file linked to the Batch
          type: string
        status:
          description: The status of the BatchItem
          enum:
            - UPLOADING
            - UPLOAD_FAILED
            - ATTACHING
            - ATTACH_FAILED
            - COMPLETED
          type: string
        targetLocales:
          items:
            $ref: '#/components/schemas/BatchItemLocale'
          type: array
        updatedDate:
          description: The UTC value of the date the batch item was updated.
          example: '2015-11-21T01:51:17.000Z'
          format: date-time
          type: string
      type: object
    BatchItemLocale:
      description: A smartling locale which file should be authorized to
      properties:
        localeId:
          description: Smartling locale identifier
          type: string
        stringsAdded:
          description: Number of strings added to the translationJob from this file
          type: integer
        stringsSkipped:
          description: Number of strings not added to the translationJob from this file
          type: integer
      type: object
    BatchStatusResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    authorized:
                      description: >-
                        The flag showing if authorizing job is requested for this
                        Batch
                      type: boolean
                    files:
                      items:
                        $ref: '#/components/schemas/BatchItem'
                      type: array
                    generalErrors:
                      description: >-
                        Describes a list of errors which occured while batch
                        processing
                      type: string
                    projectId:
                      description: The UID of the project
                      format: uid
                      type: string
                    status:
                      description: The status of the Batch
                      enum:
                        - DRAFT
                        - ADDING_FILES
                        - EXECUTING
                        - COMPLETED
                      type: string
                    translationJobUid:
                      description: The UID of the translationJob
                      format: uid
                      type: string
                    updatedDate:
                      description: The UTC value of the date the batch was updated.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                  type: object
              type: object
      description: 'A list of found, filtered and sorted batches'
    Binding:
      description: String to context binding
      properties:
        anchors:
          description: Wrapper HTML element anchor numbers
          items:
            type: string
          type: array
        bindingUid:
          description: Unique identifier for the context binding.
          type: string
        contextUid:
          description: Unique identifier for the context.
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        stringHashcode:
          description: Unique identifier for the translatable.
          type: string
        timecode:
          $ref: '#/components/schemas/Timecode'
      required:
        - contextUid
        - stringHashcode
      type: object
    BindingsRequest:
      properties:
        bindings:
          description: Array of string-to-context bindings
          items:
            description: Binding request
            properties:
              contextUid:
                description: Unique identifier for the context.
                format: uuid
                type: string
              stringHashcode:
                description: Unique identifier for the translatable.
                format: hash
                type: string
              coordinates:
                $ref: '#/components/schemas/Coordinates'
              selector:
                description: Values for "data-sl-anchor" attributes of HTML elements.
                properties:
                  anchors:
                    items:
                      type: string
                    type: array
                type: object
              timecode:
                $ref: '#/components/schemas/Timecode'
            required:
              - contextUid
              - stringHashcode
            type: object
          type: array
      type: object
    BindingsResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Binding'
                      type: array
                    totalCount:
                      type: integer
                  required:
                    - items
                  type: object
              type: object
    CancelJobRequest:
      description: The payload to use when cancelling a job.
      properties:
        reason:
          description: >-
            Optional field that can be used to indicate the reason the job was
            cancelled.
          type: string
      type: object
    CommentRequest:
      properties:
        commentText:
          description: Text of the comment you want to make.
          example: 'Hey, are you sure this is what you want?'
          type: string
      required:
        - commentText
      type: object
    ContentProgressReportItemResponse:
      properties:
        targetLocaleDescription:
          type: string
        targetLocaleId:
          type: string
        unuathorizedProgressReport:
          $ref: '#/components/schemas/StringCountWordCountResponse'
        workflowProgressReportList:
          items:
            $ref: '#/components/schemas/WorkflowProgressReportItemResponse'
          type: array
      type: object
    Context:
      description: Basic information about the context.
      properties:
        contextType:
          description: >-
            Type of context file. Currently, **HTML**, **IMAGE** or **VIDEO**
            types are supported.
          enum:
            - IMAGE
            - HTML
            - VIDEO
          type: string
        contextUid:
          description: Unique identifier for the context file
          type: string
        name:
          description: >-
            File name for **IMAGE** context, URL for **HTML** Context and video
            URL for **VIDEO** context.
          type: string
      required:
        - name
      type: object
    ContextListResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Context'
                      type: array
                    offset:
                      description: >-
                        Result set is partial, if not empty. To retreive everything,
                        request should be repeated with offset value.
                      type: string
                  required:
                    - items
                  type: object
              type: object
    ContextResponse:
      properties:
        response:
          properties:
            code:
              description: Code of the completed operation.
              enum:
                - SUCCESS
              type: string
            data:
              description: Basic information about the context.
              properties:
                contextType:
                  description: Type of context file.
                  enum:
                    - IMAGE
                    - HTML
                    - VIDEO
                  type: string
                contextUid:
                  description: Unique identifier for the context.
                  type: string
                created:
                  description: >-
                    A date when the context was created. Format: ISO8601 date
                    and time string
                  format: date-time
                  type: string
                name:
                  description: >-
                    File name for IMAGE context, URL for HTML Context and video
                    URL for VIDEO context.
                  type: string
              type: object
          type: object
      type: object
    Coordinates:
      description: >-
        Describes the location and size of a box enclosing the string in a
        context image. ‘top’ and ‘left’ are the distances in pixels of the top
        left corner of the string (from the top left of the image). ‘width’ and
        ‘height’ are the dimensions of the string in pixels. This information is
        used to highlight the position of the string when displaying the context
        image in the translation interface (CAT tool). If coordinates are not
        provided, Smartling will attempt to locate the string on the image using
        Optical Character Recognition. If OCR fails, coordinates will default to
        0, 0, 0, 0. This meaans that the image will be displayed when the string
        is translated, without any highlighting to show the position of the
        string.
      properties:
        height:
          type: number
        left:
          type: number
        top:
          type: number
        width:
          type: number
      required:
        - top
        - left
        - height
        - width
      type: object
    CountRequest:
      properties:
        createdDateBefore:
          description: Filter issues which created before this date
          type: string
        createdDateAfter:
          description: Filter issues which created after this date
          example: '2015-11-10T15:14:09Z'
          type: string
        resolvedDateBefore:
          description: Filter issues which resolved before this date
          example: '2015-12-23T18:14:09Z'
          type: string
        resolvedDateAfter:
          description: Filter issues which resolved after this date
          example: '2015-11-10T15:14:09Z'
          type: string
        answered:
          description: Issue flag "answered"
          example: true
          type: boolean
        issueSeverityLevelCodes:
          items:
            description: Issue Severity Level identifier
            enum:
              - LOW
              - MEDIUM
              - HIGH
            type: string
          type: array
        issueStateCodes:
          items:
            description: Issue State identifier
            enum:
              - OPENED
              - RESOLVED
            type: string
          type: array
        issueSubTypeCodes:
          items:
            description: Issue SubType identifier
            enum:
              - CLARIFICATION
              - MISSPELLING
              - POOR_TRANSLATION
              - DOES_NOT_FIT_SPACE
              - PLACEHOLDER_ISSUE
              - GENERAL_ISSUE
              - REVIEW_TRANSLATION
              - CUSTOM
            type: string
          type: array
        issueTypeCodes:
          items:
            description: Issue Type identifier
            enum:
              - SOURCE
              - TRANSLATION
            type: string
          type: array
        reportedByUserUid:
          description: User identifier who created issue
          example: 661801f19693
          type: string
        stringFilter:
          properties:
            hashcodes:
              example:
                - afe47cdaffe0c0226506919c291d9c1a
                - afe37cdaffe0c0226508919c291d9c1a
                - afe47cdaffe0c02265406919c291d2c1a
              items:
                description: >-
                  Unique identifier for a string in Smartling. Used by the
                  Issues API to attach an issue to a string. You can get the
                  hashcode for a string via String API.
                type: string
              type: array
            localeIds:
              example:
                - ru-RU
              items:
                description: An identifying code for a language in Smartling.
                type: string
              type: array
          type: object
      type: object
    CreateBatchRequest:
      description: The payload to use when creating a job batch.
      properties:
        authorize:
          description: >-
            if set true then job will be authorized when upload and attach
            processes completed for all files in the batch.
          type: boolean
        translationJobUid:
          description: The UID of the previously created translation job.
          type: string
      type: object
    CreateBatchResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    batchUid:
                      description: The UID of the created batch.
                      type: string
                  type: object
              type: object
      description: Info about created batch.
    CreateBindingsResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    created:
                      properties:
                        items:
                          items:
                            $ref: '#/components/schemas/Binding'
                          type: array
                        totalCount:
                          type: integer
                      required:
                        - items
                      type: object
                    errors:
                      properties:
                        items:
                          items:
                            properties:
                              message:
                                type: string
                            required:
                              - message
                            type: object
                          type: array
                        totalCount:
                          type: integer
                      required:
                        - items
                      type: object
                  required:
                    - created
                  type: object
              type: object
    CreateGlossary:
      properties:
        description:
          example: some desc
          type: string
        name:
          example: Some test glossary
          type: string
        sourceLocaleId:
          description: A valid Smartling Locale ID
          example: en-US
          type: string
      required:
        - name
        - description
        - sourceLocaleId
      type: object
    CreateIssueResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    answered:
                      description: Issue flag "aswered"
                      type: boolean
                    createdDate:
                      description: Issue creation date
                      type: string
                    issueSeverityLevelCode:
                      description: Issue Severity Level identifier
                      enum:
                        - LOW
                        - MEDIUM
                        - HIGH
                      type: string
                    issueStateCode:
                      description: Issue State identifier
                      enum:
                        - OPENED
                        - RESOLVED
                      type: string
                    issueSubTypeCode:
                      description: Issue SubType identifier
                      enum:
                        - CLARIFICATION
                        - MISSPELLING
                        - POOR_TRANSLATION
                        - DOES_NOT_FIT_SPACE
                        - PLACEHOLDER_ISSUE
                        - GENERAL_ISSUE
                        - REVIEW_TRANSLATION
                        - CUSTOM
                      type: string
                    issueText:
                      description: Issue text
                      type: string
                    issueTextModifiedDate:
                      description: Issue text modification date
                      type: string
                    issueTypeCode:
                      description: Issue Type identifier
                      enum:
                        - SOURCE
                        - TRANSLATION
                      type: string
                    issueUid:
                      description: Issue identifier
                      type: string
                    projectId:
                      description: Project identifier
                      type: string
                    reportedByUserUid:
                      description: User identifier who created (reported) issue
                      type: string
                    resolvedByUserUid:
                      description: User uid who resolved issue
                      type: string
                    resolvedDate:
                      description: Issue resolve date
                      type: string
                    string:
                      properties:
                        hashcode:
                          description: >-
                            Unique identifier for a string in Smartling. Used by the
                            Issues API to attach an issue to a string. You can get
                            the hashcode for a string via String API.
                          type: string
                        localeId:
                          description: An identifying code for a language in Smartling.
                          type: string
                      type: object
                    issueCommentsCount:
                      description: Issue comments count
                      type: integer

                  type: object
              type: object
    CreateJobRequest:
      description: The payload to use when creating a job.
      properties:
        jobName:
          description: >-
            The name of the job to create. It must be unique within the
            Smartling project. `jobName` is **required**.
          example: This is my job name.
          maxLength: 170
          type: string
        targetLocaleIds:
          description: >-
            The array of `localeId`s to be used when creating the job. The
            locales specified must be valid within the Smartling project.
          example:
          - ru-RU
          items:
            type: string
          type: array
        description:
          description: >-
            The description of the job. The description is limited to 2,000
            characters.
          example: This is my job description.
          type: string
        dueDate:
          description: The date the job is requested to be completed by.
          example: '2020-11-21T01:51:17Z'
          format: date-time
          type: string
        referenceNumber:
          description: Customer specific number/identifier for the job.
          example: referenceNumb1
          type: string
        callbackUrl:
          description: The URL for Smartling to invoke when the job is completed.
          example: 'https://myDomain.com'
          type: string
        callbackMethod:
          description: The HTTP method to call (GET|POST) when invoking the `callbackUrl`.
          example: GET
          type: string
      type: object
    CreateStringResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/CreatedString'
                      type: array
                    processUid:
                      description: >-
                        If the request takes longer than 60 seconds to process, a
                        `202` response will be returned, indicating the request has
                        not failed, but is not yet complete. Use the processUid
                        value to check the status of the request using the Check
                        Create String Status request.
                      type: string
                    stringCount:
                      description: Total number of strings captured as a result of the request.
                      type: number
                    totalCount:
                      type: number
                    wordCount:
                      description: Total number of words captured as a result of the request.
                      type: number
                  type: object
              type: object
    CreateStringStatusResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    createdDate:
                      description: Total number of strings captured as a result of the request.
                      type: string
                    modifiedDate:
                      description: >-
                        If the request takes longer than 60 seconds to process, a
                        `202` response will be returned, indicating the request has
                        not failed, but is not yet complete. Use the processUid
                        value to check the status of the request using the Check
                        Create String Status request.
                      type: string
                    processState:
                      description: State of the request
                      enum:
                        - OPEN
                        - CLOSED
                        - FAILED
                      type: string
                    processStatistics:
                      description: Information on the created or updated string
                      properties:
                        errored:
                          description: strings that had errors
                          type: string
                        processed:
                          description: strings processed
                          type: string
                        requested:
                          description: strings requested
                          type: string
                        skipped:
                          description: strings skipped
                          type: string
                      type: object
                    processUid:
                      description: Unique identifer for a create string request.
                      type: string
                  type: object
              type: object
    CreateTerm:
      allOf:
        - $ref: '#/components/schemas/TermData'
      type: object
    CreatedString:
      description: Information on the created or updated string
      properties:
        hashcode:
          description: The generated unique idenitfier for this created or updated string.
          type: string
        overWritten:
          description: Idenitfies if the string was already in the system.
          type: string
        parsedStringText:
          description: >-
            The text for this string used to define its uniqueness in the
            Smartling system.  This is after placeholders have been processed
            and escaping normalization has been applied.
          type: string
        stringText:
          description: The text for this string
          type: string
        variant:
          description: String variant
          type: string
      type: object
    DetailedJobResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    callbackMethod:
                      description: >-
                        The http method (GET|POST) to use when Smartling invokes the
                        callback URL upon job completion.
                      type: string
                    callbackUrl:
                      description: The callback URL to invoke when a job is completed.
                      type: string
                    createdByUserUid:
                      description: The userUid of whom created the job.
                      type: string
                    createdDate:
                      description: The UTC value of the date the job was created.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    description:
                      description: The description of the job.
                      type: string
                    dueDate:
                      description: The UTC value of the due date for the job.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    firstCompletedDate:
                      description: The UTC value of when the job was first completed.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    jobName:
                      description: The name of the job.
                      type: string
                    jobStatus:
                      description: The status of the job.
                      example: >-
                        DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED |
                        CANCELLED | CLOSED
                      type: string
                    lastCompletedDate:
                      description: The UTC value of when the job was last completed.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    modifiedByUserUid:
                      description: The userUid of whom last modified the job.
                      type: string
                    modifiedDate:
                      description: The UTC value of the date the job was modified.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    sourceFiles:
                      items:
                        $ref: '#/components/schemas/SourceFile'
                      type: array
                    targetLocaleIds:
                      description: The array of localeIds for the job.
                      items:
                        example: de-DE
                        type: string
                      type: array
                    translationJobUid:
                      description: The unique identifier created for the job.
                      type: string
                  type: object
              type: object
    EmptyResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  description: Always null.
                  type: object
              type: object

    Error:
      type: object
      properties:
        key:
          example: general_error
          type: string
        message:
          example: Unexpected server error
          type: string
        details:
          example: {}
          type: object
      required:
        - key
        - message

    Error400Response:
      type: object
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - VALIDATION_ERROR
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response

    Error401Response:
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - AUTHENTICATION_ERROR
                - AUTHORIZATION_ERROR
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response
      type: object
    Error404Response:
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - NOT_FOUND_ERROR
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response
      type: object
    Error423Response:
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - RESOURCE_LOCKED
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response
      type: object
    Error429Response:
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - MAX_OPERATIONS_LIMIT_EXCEEDED
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response
      type: object
    Error500Response:
      properties:
        response:
          properties:
            code:
              description: >-
                Indicates whether the response was successful or what error has occured.
              enum:
                - GENERAL_ERROR
                - MAINTENANCE_MODE_ERROR
              type: string
            errors:
              items:
                $ref: '#/components/schemas/Error'
              type: array
          required:
            - code
            - errors
          type: object
      required:
        - response
      type: object
    FileType:
      type: string
      description: A unique identifier for the file type.
      enum:
        - android
        - ios
        - gettext
        - html
        - java_properties
        - xliff
        - xml
        - json
        - docx
        - pptx
        - xlsx
        - idml
        - qt
        - resx
        - plain_text
        - csv
        - srt
        - stringsdict
        - xls
        - doc
        - ppt
        - pres
        - madcap
        - yaml
        - markdown
    FileUri:
      properties:
        data:
          properties:
            uri:
              description: File uri
              type: string
          type: object
      type: object
    FilesAPILastModifiedAllLocalesSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/FilesAPILastModifiedResponseItem'
                      type: array
                    totalCount:
                      description: ''
                      type: integer
                  required:
                    - totalCount
                    - items
                  type: object
              type: object
    FilesAPILastModifiedResponseItem:
      properties:
        lastModified:
          description: The date the file was last modified for the specified locale
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
        localeId:
          description: A unique identifier for the uploaded file
          type: string
      required:
        - localeId
        - lastModified
      type: object
    FilesAPILastModifiedSingleLocaleSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  $ref: '#/components/schemas/FilesAPILastModifiedResponseItem'
              type: object
    FilesAPIListFileItem:
      example:
        created: '2016-12-31T00:00:00Z'
        fileType: json
        fileUri: file.json
        hasInstructions: false
        lastUploaded: '2016-01-01T00:00:00Z'
      properties:
        created:
          description: The time and date of the first upload
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
        fileType:
          description: The type of file
          enum:
            - android
            - ios
            - gettext
            - html
            - java_properties
            - xliff
            - xml
            - json
            - docx
            - pptx
            - xlsx
            - idml
            - qt
            - resx
            - plain_text
            - csv
            - srt
            - stringsdict
            - xls
            - doc
            - ppt
            - pres
            - madcap
            - yaml
            - markdown
          type: string
        fileUri:
          description: A unique identifier for the uploaded file
          type: string
        hasInstructions:
          description: Whether translator instructions have been captured for the file.
          type: boolean
        lastUploaded:
          description: The time and date of the last upload
          format: 'YYYY-MM-DDThh:mm:ssZ'
          type: string
      required:
        - fileUri
        - created
        - lastUploaded
        - fileType
        - hasInstructions
      type: object
    FilesAPIListFileTypesSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/FileType'
                      type: array
                  required:
                    - items
                  type: object
              type: object
          example:
            application/json:
              response:
                code: SUCCESS
                data:
                  items:
                    anyOf:
                      - android
                      - ios
                      - gettext
    FilesAPIListFilesSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/FilesAPIListFileItem'
                      type: array
                    totalCount:
                      description: The number of files that match your specified criteria
                      type: integer
                  required:
                    - totalCount
                    - items
                  type: object
              type: object
    FilesAPIStatusAllLocalesItem:
      properties:
        authorizedStringCount:
          description: >-
            The number of strings in the uploaded file that are authorized
            (available for translation)
          type: integer
        authorizedWordCount:
          description: >-
            The number of words in the uploaded file that are authorized
            (available for translation)
          type: integer
        completedStringCount:
          description: The number of published strings in the uploaded file
          type: integer
        completedWordCount:
          description: The number of published words in the uploaded file
          type: integer
        excludedStringCount:
          description: The number of excluded strings in the uploaded file
          type: integer
        excludedWordCount:
          description: The number of excluded words in the uploaded file
          type: integer
        localeId:
          type: string
      required:
        - localeId
        - authorizedStringCount
        - authorizedWordCount
        - completedStringCount
        - completedWordCount
        - excludedStringCount
        - excludedWordCount
      type: object
    FilesAPIStatusAllLocalesSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    created:
                      description: The time and date of the first upload
                      format: 'YYYY-MM-DDThh:mm:ssZ'
                      type: string
                    fileType:
                      description: The type of file
                      enum:
                        - android
                        - ios
                        - gettext
                        - html
                        - java_properties
                        - xliff
                        - xml
                        - json
                        - docx
                        - pptx
                        - xlsx
                        - idml
                        - qt
                        - resx
                        - plain_text
                        - csv
                        - srt
                        - stringsdict
                        - xls
                        - doc
                        - ppt
                        - pres
                        - madcap
                        - yaml
                        - markdown
                      type: string
                    fileUri:
                      description: A unique identifier for the uploaded file
                      type: string
                    hasInstructions:
                      description: >-
                        Whether translator instructions have been captured for the
                        file
                      type: boolean
                    items:
                      items:
                        $ref: '#/components/schemas/FilesAPIStatusAllLocalesItem'
                      type: array
                    lastUploaded:
                      description: The time and date of the last upload
                      format: 'YYYY-MM-DDThh:mm:ssZ'
                      type: string
                    parserVersion:
                      description: >-
                        Records the version of Smartling's File Parser used to parse
                        the file
                      type: integer
                    totalCount:
                      description: Total number of locales status is returned for
                      type: integer
                    totalStringCount:
                      description: >-
                        The number of strings in the uploaded file, minus any
                        excluded content
                      type: integer
                    totalWordCount:
                      description: >-
                        The number of words in the uploaded file, minus any excluded
                        content
                      type: integer
                  required:
                    - fileUri
                    - totalStringCount
                    - totalWordCount
                    - fileType
                    - lastUploaded
                    - totalCount
                    - parserVersion
                    - hasInstructions
                    - items
                  type: object
              type: object
    FilesAPIStatusSingleLocaleSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    authorizedStringCount:
                      description: >-
                        The number of strings in the uploaded file that are
                        authorized (available for translation)
                      type: integer
                    authorizedWordCount:
                      description: >-
                        The number of words in the uploaded file that are authorized
                        (available for translation)
                      type: integer
                    completedStringCount:
                      description: The number of published strings in the uploaded file
                      type: integer
                    completedWordCount:
                      description: The number of published words in the uploaded file
                      type: integer
                    created:
                      description: The time and date of the first upload
                      format: 'YYYY-MM-DDThh:mm:ssZ'
                      type: string
                    excludedStringCount:
                      description: The number of excluded strings in the uploaded file
                      type: integer
                    excludedWordCount:
                      description: The number of excluded words in the uploaded file
                      type: integer
                    fileType:
                      description: The type of file
                      enum:
                        - android
                        - ios
                        - gettext
                        - html
                        - java_properties
                        - xliff
                        - xml
                        - json
                        - docx
                        - pptx
                        - xlsx
                        - idml
                        - qt
                        - resx
                        - plain_text
                        - csv
                        - srt
                        - stringsdict
                        - xls
                        - doc
                        - ppt
                        - pres
                        - madcap
                        - yaml
                        - markdown
                      type: string
                    fileUri:
                      description: A unique identifier for the uploaded file
                      type: string
                    hasInstructions:
                      description: >-
                        Whether translator instructions have been captured for the
                        file
                      type: integer
                    lastUploaded:
                      description: The time and date of the last upload
                      format: 'YYYY-MM-DDThh:mm:ssZ'
                      type: string
                    parserVersion:
                      description: >-
                        Records the version of Smartling's File Parser used to parse
                        the file
                      type: integer
                    totalStringCount:
                      description: >-
                        The number of strings in the uploaded file, minus any
                        excluded content
                      type: integer
                    totalWordCount:
                      description: >-
                        The number of words in the uploaded file, minus any excluded
                        content
                      type: integer
                  required:
                    - fileUri
                    - totalStringCount
                    - totalWordCount
                    - authorizedStringCount
                    - authorizedWordCount
                    - completedStringCount
                    - completedWordCount
                    - excludedStringCount
                    - excludedWordCount
                    - fileType
                    - lastUploaded
                    - created
                    - parserVersion
                    - hasInstructions
                  type: object
              type: object
    FilesAPITranslationImportSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    stringCount:
                      description: Strings imported
                      type: integer
                    translationImportErrors:
                      items:
                        $ref: '#/components/schemas/FilesApiTranslationImportErrorItem'
                      type: array
                    wordCount:
                      description: Words imported.
                      type: integer
                  required:
                    - wordCount
                    - stringCount
                    - translationImportErrors
                  type: object
              type: object
    FilesAPIUploadAcceptedResponse:
      properties:
        code:
          enum:
            - ACCEPTED
          type: string
        data:
          properties:
            message:
              type: string
          required:
            - message
          type: object
      required:
        - code
        - data
      type: object
    FilesAPIUploadSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    overWritten:
                      description: >-
                        Indicates whether the uploaded file has overwritten an
                        existing file.
                      type: boolean
                    stringCount:
                      description: The number of strings in the uploaded file
                      type: integer
                    wordCount:
                      description: The number of words in the uploaded file
                      type: integer
                  required:
                    - overWritten
                    - stringCount
                    - wordCount
                  type: object
              type: object
    FilesApiTranslationImportErrorItem:
      properties:
        fileUri:
          description: A unique identifier for the uploaded file
          type: string
        importKey:
          description: Key for an imported string affected by the error
          type: string
        messages:
          description: Information about an import error
          items:
            type: string
          type: array
        stringHashcode:
          description: The hashcode of a string affected by the error
          type: string
      required:
        - importKey
        - stringHashcode
        - fileUri
        - messages
      type: object
    FindRequest:
      properties:
        createdDateBefore:
          description: Filter issues which were created before this date.
          example: '2015-12-23T18:14:09Z'
          type: string
        createdDateAfter:
          description: Filter issues which were created after this date.
          example: '2015-11-10T15:14:09Z'
          type: string
        resolvedDateBefore:
          description: Filter issues which were resolved before this date.
          example: '2015-12-23T18:14:09Z'
          type: string
        resolvedDateAfter:
          description: Filter issues which were resolved after this date.
          example: '2015-11-10T15:14:09Z'
          type: string
        answered:
          description: Issue flag "answered".
          example: false
          type: boolean
        issueSeverityLevelCodes:
          items:
            description: Issue Severity Level identifier
            enum:
              - LOW
              - MEDIUM
              - HIGH
            type: string
          type: array
        issueStateCodes:
          items:
            description: Issue State identifier.
            enum:
              - OPENED
              - RESOLVED
            type: string
          type: array
        issueSubTypeCodes:
          items:
            description: Issue SubType identifier
            enum:
              - CLARIFICATION
              - MISSPELLING
              - POOR_TRANSLATION
              - DOES_NOT_FIT_SPACE
              - PLACEHOLDER_ISSUE
              - GENERAL_ISSUE
              - REVIEW_TRANSLATION
              - CUSTOM
            type: string
          type: array
        issueTypeCodes:
          items:
            description: Issue Type identifier.
            enum:
              - SOURCE
              - TRANSLATION
            type: string
          type: array
        reportedByUserUid:
          description: User identifier who created the issue.
          example: 661801f19693
          type: string
        stringFilter:
          properties:
            hashcodes:
              example:
                - afe47cdaffe0c0226506919c291d9c1a
                - afe37cdaffe0c0226508919c291d9c1a
                - afe47cdaffe0c02265406919c291d2c1a
              items:
                description: >-
                  Unique identifier for a string in Smartling. Used by the
                  Issues API to attach an issue to a string. You can get the
                  hashcode for a string via the Strings API.
                type: string
              type: array
            localeIds:
              example:
                - ru-RU
              items:
                description: An identifying code for a language in Smartling.
                type: string
              type: array
          type: object
        limit:
          default: 30
          description: limit
          example: 30
          minimum: 0
          type: integer
        offset:
          default: 0
          description: offset
          example: 0
          minimum: 0
          type: integer
        sortBy:
          description: Sort result by fields
          example:
          - direction: ASC
            fieldName: createdDate
          - direction: DESC
            fieldName: resolvedDate
          properties:
            items:
              items:
                properties:
                  direction:
                    description: Sort direction
                    enum:
                    - ASC
                    - DESC
                    type: string
                  fieldName:
                    description: Sort by certain field
                    enum:
                    - issueTypeCode
                    - issueSubTypeCode
                    - issueStateCode
                    - createdDate
                    - resolvedDate
                    - hashcode
                    - issueText
                    - issueTextModifiedDate
                    - resolvedByUserUid
                    - reportedByUserUid
                    type: string
                type: object
              type: array
          type: object
      type: object
    GetProjectTagsResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/TagInfo'
                      type: array
                    totalCount:
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    GetStringsTagsResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          tags:
                            items:
                              $ref: '#/components/schemas/TagInfo'
                            type: array
                          stringHashcode:
                            example: stringHashcode
                            type: string
                        type: object
                      type: array
                    totalCount:
                      example: 1
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    Glossary:
      properties:
        createdByUserUid:
          description: Unique identifier for the glossary creator
          example: ah27fhq8
          type: string
        createdDate:
          description: Glossary created date
          example: '2015-11-21T01:51:17Z'
          format: date-time
          type: string
        description:
          description: Description of a Glossary.
          example: Description of a Glossary
          type: string
        glossaryUid:
          description: Unique identifier for the glossary.
          example: 50d9dab5-6b8b-11e5-ba24-127b00b163a3
          type: string
        name:
          description: Glossary name
          example: Another document tester-Glossary
          type: string
        sourceLocaleId:
          description: Glossary source locale
          example: en-US
          type: string
      required:
        - glossaryUid
        - name
        - sourceLocaleId
      type: object
    GlossaryImportJob:
      properties:
        accountUid:
          description: Unique identifier for the corresponding account.
          type: string
        createdByUserUid:
          description: Unique identifier of creator user.
          type: string
        createdDate:
          description: Created date.
          type: string
        fileName:
          description: File name.
          type: string
        glossary:
          $ref: '#/components/schemas/Glossary'
        glossaryImportJobStatus:
          description: Status of glossary import jobs.
          enum:
            - PENDING
            - IN_PROGRESS
            - SUCCESSFUL
            - FAILED
          type: string
        glossaryImportJobUid:
          description: >-
            Unique identifier that corresponds to a single glossary import
            session.
          type: string
        localesNumber:
          description: Number of locales.
          format: int32
          type: integer
        modifiedDate:
          description: Modified date.
          type: string
        termsNumber:
          description: Number of terms in the import file.
          format: int32
          type: integer
        termsProcessed:
          description: Number of processed terms.
          format: int32
          type: integer
      type: object
    GlossaryListResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      description: Glossaries
                      items:
                        $ref: '#/components/schemas/Glossary'
                      type: array
                    totalCount:
                      description: Amount of returned glossaries
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    GlossaryResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  $ref: '#/components/schemas/Glossary'
              required:
                - data
              type: object
      required:
        - response
      type: object
    IssueAnsweredRequest:
      properties:
        answered:
          description: Issue flag "answered"
          type: boolean
      required:
        - answered
      type: object
    IssueAnsweredResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    answered:
                      description: Issue flag "aswered"
                      type: boolean
                  type: object
              type: object
    IssueCommentAddResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    commentText:
                      description: Issue comment text
                      type: string
                    commentTextModifiedDate:
                      description: Issue comment modification date
                      type: string
                    createdByUserUid:
                      description: User identifier who added comment
                      type: string
                    createdDate:
                      description: Issue comment creation date
                      type: string
                    issueCommentUid:
                      description: Issue comment identifier
                      type: string
                  type: object
              type: object
    IssueCommentDeleteResponse:
      type: object
      required:
        - response
      properties:
        response:
          $ref: '#/components/schemas/SuccessResponse'
    IssueCommentEditResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    commentText:
                      description: Issue comment text
                      type: string
                    commentTextModifiedDate:
                      description: Issue comment modification date
                      type: string
                    createdByUserUid:
                      description: User identifier who added comment
                      type: string
                    createdDate:
                      description: Issue comment creation date
                      type: string
                    issueCommentUid:
                      description: Issue comment identifier
                      type: string
                  type: object
              type: object
    IssueCommentGetResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    commentText:
                      description: Issue comment text
                      type: string
                    commentTextModifiedDate:
                      description: Issue comment modification date
                      type: string
                    createdByUserUid:
                      description: User identifier who added comment
                      type: string
                    createdDate:
                      description: Issue comment creation date
                      type: string
                    issueCommentUid:
                      description: Issue comment identifier
                      type: string
                  type: object
              type: object
    IssueCommentsGetResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          commentText:
                            description: Issue comment text
                            type: string
                          commentTextModifiedDate:
                            description: Issue comment modification date
                            type: string
                          createdByUserUid:
                            description: User identifier who added comment
                            type: string
                          createdDate:
                            description: Issue comment creation date
                            type: string
                          issueCommentUid:
                            description: Issue comment identifier
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueGetResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    answered:
                      description: Issue flag "aswered"
                      type: boolean
                    createdDate:
                      description: Issue creation date
                      type: string
                    issueSeverityLevelCode:
                      description: Issue Severity Level identifier
                      enum:
                        - LOW
                        - MEDIUM
                        - HIGH
                      type: string
                    issueStateCode:
                      description: Issue State identifier
                      enum:
                        - OPENED
                        - RESOLVED
                      type: string
                    issueSubTypeCode:
                      description: Issue SubType identifier
                      enum:
                        - CLARIFICATION
                        - MISSPELLING
                        - POOR_TRANSLATION
                        - DOES_NOT_FIT_SPACE
                        - PLACEHOLDER_ISSUE
                        - GENERAL_ISSUE
                        - REVIEW_TRANSLATION
                        - CUSTOM
                      type: string
                    issueText:
                      description: Issue text
                      type: string
                    issueTextModifiedDate:
                      description: Issue text modification date
                      type: string
                    issueTypeCode:
                      description: Issue Type identifier
                      enum:
                        - SOURCE
                        - TRANSLATION
                      type: string
                    issueUid:
                      description: Issue identifier
                      type: string
                    projectId:
                      description: Project identifier
                      type: string
                    reportedByUserUid:
                      description: User identifier who created (reported) issue
                      type: string
                    resolvedByUserUid:
                      description: User uid who resolved issue
                      type: string
                    resolvedDate:
                      description: Issue resolve date
                      type: string
                    string:
                      properties:
                        hashcode:
                          description: >-
                            Unique identifier for a string in Smartling. Used by the
                            Issues API to attach an issue to a string. You can get
                            the hashcode for a string via String API.
                          type: string
                        localeId:
                          description: An identifying code for a language in Smartling.
                          type: string
                      type: object
                    issueCommentsCount:
                      description: Issue comments count
                      type: integer
                  type: object
              type: object
    IssueGetWatchersResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          created:
                            description: Watcher creation date
                            type: string
                          email:
                            description: Watcher email
                            type: string
                          enabled:
                            description: Should send email notification to this email
                            type: boolean
                          modified:
                            description: Watcher modification date
                            type: string
                          name:
                            description: Watcher name
                            type: string
                          uid:
                            description: Watcher identifier
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueRequest:
      properties:
        issueText:
          description: Free text field explaining an issue.
          example: This translation is incorrect. Please fix.
          type: string
        issueTypeCode:
          description: >-
            Identifies the issue type. issueTypeCode is either `SOURCE` or
            `TRANSLATION`. Each have their own set of ```issueSubType``` values.
          enum:
          - SOURCE
          - TRANSLATION
          type: string
        issueSubTypeCode:
          description: >-
            For issueTypeCode=SOURCE - CLARIFICATION | MISSPELLING, For
            issueTypeCode=TRANSLATION - POOR_TRANSLATION | DOES_NOT_FIT_SPACE |
            PLACEHOLDER_ISSUE | GENERAL_ISSUE | REVIEW_TRANSLATION
          enum:
            - CLARIFICATION
            - MISSPELLING
            - POOR_TRANSLATION
            - DOES_NOT_FIT_SPACE
            - PLACEHOLDER_ISSUE
            - GENERAL_ISSUE
            - REVIEW_TRANSLATION
            - CUSTOM
          type: string
        string:
          properties:
            hashcode:
              description: >-
                Unique identifier for a string in Smartling. Used by the Issues
                API to attach an issue to a string. You can get the hashcode for
                a string via String API.
              example: c32c16cddafd63dfa0dc12449372a093
              type: string
            localeId:
              description: An identifying code for a language in Smartling.
              example: ru-RU
              type: string
          required:
            - hashcode
            - localeId
          type: object
        issueSeverityLevelCode:
          description: Issue Severity Level identifier
          enum:
          - LOW
          - MEDIUM
          - HIGH
          type: string
      required:
        - issueText
        - issueTypeCode
        - issueSubTypeCode
        - string
      type: object
    IssueSeverityLevelRequest:
      properties:
        issueSeverityLevelCode:
          description: Issue Severity Level identifier
          enum:
            - LOW
            - MEDIUM
            - HIGH
          type: string
      required:
        - issueSeverityLevelCode
      type: object
    IssueSeverityLevelResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    issueSeverityLevelCode:
                      description: Issue Severity Level identifier
                      enum:
                        - LOW
                        - MEDIUM
                        - HIGH
                      type: string
                  type: object
              type: object
    IssueSeverityLevelsResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          description:
                            description: Issue Severity Level description
                            type: string
                          issueSeverityLevelCode:
                            description: Issue Severity Level identifier
                            enum:
                              - LOW
                              - MEDIUM
                              - HIGH
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueStateRequest:
      properties:
        issueStateCode:
          description: The state of the issue. Accepted values are `OPENED` or `RESOLVED`.
          enum:
            - OPENED
            - RESOLVED
          type: string
      required:
        - issueStateCode
      type: object
    IssueStateResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    issueStateCode:
                      description: Issue State identifier
                      enum:
                        - OPENED
                        - RESOLVED
                      type: string
                  type: object
              type: object
    IssueStatesResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          description:
                            description: Issue State description
                            type: string
                          issueStateCode:
                            description: Issue State identifier
                            enum:
                              - OPENED
                              - RESOLVED
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueTextRequest:
      properties:
        issueText:
          description: Free text field explaining an issue.
          example: Edited issue text.
          type: string
      required:
        - issueText
      type: object
    IssueTextResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    issueText:
                      description: Issue text
                      type: string
                    issueTextModifiedDate:
                      description: Issue text modification date
                      type: string
                  type: object
              type: object
    IssueTypesResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          description:
                            description: Issue type description
                            type: string
                          issueTypeCode:
                            description: Issue type identifier
                            enum:
                              - SOURCE
                              - TRANSLATION
                            type: string
                          subTypes:
                            properties:
                              description:
                                description: Issue subtype description
                                type: string
                              issueSubTypeCode:
                                description: Issue subtype identifier
                                enum:
                                  - CLARIFICATION
                                  - MISSPELLING
                                  - POOR_TRANSLATION
                                  - DOES_NOT_FIT_SPACE
                                  - PLACEHOLDER_ISSUE
                                  - GENERAL_ISSUE
                                  - REVIEW_TRANSLATION
                                  - CUSTOM
                                type: string
                            type: object
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueWatcherAssignResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
    IssueWatcherDeleteResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  type: object
              type: object
    IssueWatcherGetListResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          created:
                            description: Watcher creation date
                            type: string
                          email:
                            description: Watcher email
                            type: string
                          enabled:
                            description: Should send email notification to this email
                            type: boolean
                          modified:
                            description: Watcher modification date
                            type: string
                          name:
                            description: Watcher name
                            type: string
                          uid:
                            description: Watcher identifier
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    IssueWatcherResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    created:
                      description: Watcher creation date
                      type: string
                    email:
                      description: Watcher email
                      type: string
                    enabled:
                      description: Should send email notification to this email
                      type: boolean
                    modified:
                      description: Watcher modification date
                      type: string
                    name:
                      description: Watcher name
                      type: string
                    uid:
                      description: Watcher identifier
                      type: string
                  type: object
              type: object
    IssuesCountResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    count:
                      description: Count issues
                      type: integer
                  type: object
              type: object
    IssuesFindResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          answered:
                            description: Issue flag "aswered"
                            type: boolean
                          createdDate:
                            description: Issue creation date
                            type: string
                          issueSeverityLevelCode:
                            description: Issue Severity Level identifier
                            enum:
                              - LOW
                              - MEDIUM
                              - HIGH
                            type: string
                          issueStateCode:
                            description: Issue State identifier
                            enum:
                              - OPENED
                              - RESOLVED
                            type: string
                          issueSubTypeCode:
                            description: Issue SubType identifier
                            enum:
                              - CLARIFICATION
                              - MISSPELLING
                              - POOR_TRANSLATION
                              - DOES_NOT_FIT_SPACE
                              - PLACEHOLDER_ISSUE
                              - GENERAL_ISSUE
                              - REVIEW_TRANSLATION
                              - CUSTOM
                            type: string
                          issueText:
                            description: Issue text
                            type: string
                          issueTextModifiedDate:
                            description: Issue text modification date
                            type: string
                          issueTypeCode:
                            description: Issue Type identifier
                            enum:
                              - SOURCE
                              - TRANSLATION
                            type: string
                          issueUid:
                            description: Issue identifier
                            type: string
                          projectId:
                            description: Project identifier
                            type: string
                          reportedByUserUid:
                            description: User identifier who created (reported) issue
                            type: string
                          resolvedByUserUid:
                            description: User uid who resolved issue
                            type: string
                          resolvedDate:
                            description: Issue resolve date
                            type: string
                          string:
                            properties:
                              hashcode:
                                description: >-
                                  Unique identifier for a string in Smartling. Used
                                  by the Issues API to attach an issue to a string.
                                  You can get the hashcode for a string via String
                                  API.
                                type: string
                              localeId:
                                description: An identifying code for a language in Smartling.
                                type: string
                            type: object
                          issueCommentsCount:
                            description: Issue comments count
                            type: integer

                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    JobLocalesCompletionDate:
      properties:
        data:
          properties:
            completionDate:
              description: The UTC value of when the locale was last completed.
              example: '2015-11-21T01:51:17.000Z'
              format: date-time
              type: string
            targetLocaleId:
              description: The locale identidier.
              example: de-DE
              type: string
          type: object
      type: object
    ListBatchesResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Batch'
                      type: array
                    totalCount:
                      description: number of batches in the current rsponse
                      type: integer
                  type: object
              type: object
      description: 'A list of found, filtered and sorted batches'
    ListFilesResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/FileUri'
                      type: array
                    totalCount:
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    ListJobLocalesCompletionDatesResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/JobLocalesCompletionDate'
                      type: array
                    totalCount:
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    ListJobsResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/ListJobsResponseItem'
                      type: array
                    totalCount:
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    ListJobsResponseItem:
      properties:
        data:
          properties:
            createdDate:
              description: The UTC value of the date the job was created.
              example: '2015-11-21T01:51:17.000Z'
              format: date-time
              type: string
            description:
              description: The description of the job.
              type: string
            dueDate:
              description: The UTC value of the due date for the job.
              example: '2015-11-21T01:51:17.000Z'
              format: date-time
              type: string
            jobName:
              description: The name of the job.
              type: string
            jobStatus:
              description: The status of the job
              example: >-
                DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED |
                CANCELLED | CLOSED
              type: string
            targetLocaleIds:
              description: The array of localeIds for the job.
              items:
                example: de-DE
                type: string
              type: array
            translationJobUid:
              description: The unique identifier of the job.
              type: string
          type: object
      type: object
    LocaleApiItem:
      example:
        country:
          countryId: US
          description: United States
        description: English (United States)
        language:
          description: English
          direction: LTR
          languageId: en
          wordDelimiter: SPACE
        localeId: en-US
      properties:
        country:
          description: >-
            The country that makes up the locale. Not all locales have a country
            specified.
          properties:
            countryId:
              description: The identifier of the country.
              type: string
            description:
              description: The name of the country.
              type: string
          type: object
        description:
          description: The name of the locale.
          type: string
        language:
          description: The language that makes up the locale. All locales have a language.
          properties:
            description:
              description: The name of the language.
              type: string
            direction:
              enum:
                - LTR
                - RTL
              type: string
            languageId:
              description: The identifier of the language.
              type: string
            wordDelimiter:
              enum:
                - SPACE
                - CHARACTER
              type: string
          type: object
        localeId:
          description: >-
            The identifier for the locale. Locales are defined as a unique
            combination of language and country pairs.
          type: string
      required:
        - localeId
        - description
        - language
      type: object
    LocaleWorkflow:
      properties:
        targetLocaleId:
          description: A valid Smartling Locale ID
          example: cy-GB
          type: string
        workflowUid:
          description: Unique identifier for workflow
          example: 9422471c2202
          type: string
      required:
        - targetLocaleId
        - workflowUid
      type: object
    LocalesAPISuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/LocaleApiItem'
                      type: array
                    totalCount:
                      description: The total number of locales matching the request
                      type: integer
                  required:
                    - totalCount
                    - items
                  type: object
              type: object
    MatchRequest:
      properties:
        contentFileUri:
          description: >-
            File URI containing strings to perform matching with context. Can't
            be used with the `stringHashcodes` parameter.
          type: string
        overrideContextOlderThanDays:
          description: >-
            Specifies whether to override context for strings that were already
            bound to other context, and that context is at least as
            "overrideContextOlderThanDays" old.
          minimum: 1
          type: integer
        stringHashcodes:
          description: >-
            String hashcodes to perform matching with context. Can't be used
            with the `contentFileUri` parameter.
          items:
            format: hash
            type: string
          type: array
      type: object
    NullDataJobResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    data:
                      type: object
                  type: object
              type: object
    PartsOfSpeech:
      properties:
        description:
          description: Description
          example: Adjective
          type: string
        partOfSpeechCode:
          description: Part of speech
          example: ADJECTIVE
          type: string
      required:
        - partOfSpeechCode
      type: object

    PartsOfSpeechList:
      type: object
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      description: Parts of speech
                      items:
                        $ref: '#/components/schemas/PartsOfSpeech'
                      type: array
                    totalCount:
                      description: Total count
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
    ProcessCheckJobResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    createdDate:
                      description: The UTC value of when the process was created.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    modifiedDate:
                      description: The UTC value of when the process was last modified.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    processState:
                      description: >-
                        The current state of the process. Values returned are
                        IN_PROGRESS | COMPLETED | FAILED.
                      type: string
                    processUid:
                      description: The unique identifier for a process.
                      type: string
                  type: object
              type: object
    ProgressInfoResponse:
      properties:
        data:
          properties:
            percentComplete:
              description: 'The percent of group (locale/file/job) completeness, 0 - 100.'
              example: 52
              type: number
            totalWordCount:
              description: >-
                The total number of words within that particular group
                (locale/file/job).
              example: 192
              type: number
          type: object
      type: object
    ProgressResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    contentProgressReport:
                      items:
                        $ref: '#/components/schemas/ContentProgressReportItemResponse'
                      type: array
                    progress:
                      $ref: '#/components/schemas/ProgressInfoResponse'
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    ProjectCopyProcessSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    createdDate:
                      format: date-time
                      type: string
                    modifiedDate:
                      format: date-time
                      type: string
                    newProjectUid:
                      description: >-
                        A unique identifier for the newly created project. This is
                        available once the project copying has finished, which is
                        indicated once it has a processState of CLOSED.
                      type: string
                    processState:
                      description: >-
                        The status of the copy request. The new projectId will be
                        available once the state is marked as CLOSED.
                      enum:
                        - OPEN
                        - CLOSED
                        - FAILED
                      type: string
                    processStatistics:
                      description: Information on the copying of the project
                      properties:
                        errored:
                          description: The number of entities that failed to copy
                          type: string
                        processed:
                          description: The number of entities processed successfully
                          type: string
                        requested:
                          description: The number of entities being copied
                          type: string
                        skipped:
                          description: The number of entities that were skipped
                          type: string
                      type: object
                    processUid:
                      description: A unique identifier for a long running process
                      type: string
                  required:
                    - processUid
                    - newProjectUid
                    - processState
                    - createdDate
                    - modifiedDate
                    - processStatistics
                  type: object
              type: object
    ProjectCopySuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    processUid:
                      description: A unique identifier for a long running process
                      type: string
                  required:
                    - processUid
                  type: object
              type: object
    ProjectDetailsLocaleItem:
      example:
        description: Russian (Russia)
        enabled: 'true'
        localeId: ru-RU
      properties:
        description:
          description: The name of the locale.
          type: string
        enabled:
          description: Boolean indicator of the locale is enabled for the project.
          type: boolean
        localeId:
          description: The identifier for the specific locale configured for the project.
          type: string
      required:
        - localeId
        - description
        - enabled
      type: object
    ProjectDetailsSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  example:
                    accountUid: ab5f1939
                    archived: false
                    projectId: fd7244365
                    projectName: fd7244365
                    projectTypeCode: APPLICATION_RESOURCES
                    sourceLocaleDescription: English
                    sourceLocaleId: en-US
                  properties:
                    accountUid:
                      description: The unique identifier for the account
                      type: string
                    archived:
                      description: >-
                        Indicator whether or not the project has been archived.
                        Archived projects are typically hidden from a user's view,
                        but can still be accessible
                      type: boolean
                    projectId:
                      description: A unique identifier for the project
                      type: string
                    projectName:
                      description: The name of the project.
                      type: string
                    projectTypeCode:
                      description: Indicator for the type of the project.
                      type: string
                    sourceLocaleDescription:
                      description: The full name of the sourceLocaleId
                      type: string
                    sourceLocaleId:
                      description: >-
                        The locale identifier for the source locale of the project.
                        This indicates the base locale for which content should be
                        uploaded to the project.
                      type: string
                    targetLocales:
                      description: The locales configured for translation for this project.
                      items:
                        $ref: '#/components/schemas/ProjectDetailsLocaleItem'
                      type: array
                  required:
                    - projectId
                    - projectName
                    - accountUid
                    - archived
                    - projectTypeCode
                    - sourceLocaleId
                    - sourceLocaleDescription
                    - targetLocales
                  type: object
              type: object
    RemoveFileJobRequest:
      description: The payload to use when removing a file from a job.
      properties:
        fileUri:
          description: The URI of the file that is to be removed from the job.
          type: string
      type: object
    RemoveStringsJobRequest:
      description: The payload to use when removing strings from a job.
      properties:
        hashcodes:
          description: >-
            The hashcodes (string identifiers) that should be removed from the
            job.
          items:
            example:
              - ca51a04da69cf64dce022bb4f146c962
            type: string
          type: array
        localeIds:
          description: >-
            (Optional) The array of `localeId`s that the strings should be
            removed from. If not specified, the strings will be removed from all
            locales within that job.
          items:
            example:
              - ru-RU
            type: string
          type: array
      type: object
    SearchJobRequest:
      description: >-
        The payload to use for searching for jobs. At least one of hashcodes,
        fileUris, and translationJobUids must be specified. The individual param
        results are AND'd together.
      properties:
        fileUris:
          description: >-
            (Optional) The `fileUri`s (file identifiers) used to search for
            jobs. Any job containing the specified `fileUri` will be returned.
          items:
            type: string
          type: array
        hashcodes:
          description: >-
            (Optional) The hashcodes (string identifiers) used to search for
            jobs. Any job containing specified hashcodes will be returned.
          items:
            type: string
          type: array
        translationJobUids:
          description: >-
            (Optional) The `translationJobUid`s (translation job identifiers)
            used to search for jobs. Any job containing the specified `fileUri`
            will be returned.
          items:
            type: string
          type: array
      type: object
    ShallowJobResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    callbackMethod:
                      description: >-
                        The http method (GET|POST) to use when Smartling invokes the
                        callback URL upon job completion.
                      type: string
                    callbackUrl:
                      description: The callback URL to invoke when a job is completed.
                      type: string
                    createdByUserUid:
                      description: The userUid of who created the job.
                      type: string
                    createdDate:
                      description: The UTC value of the date the job was created.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    description:
                      description: The description of the job.
                      type: string
                    dueDate:
                      description: The UTC value of the due date for the job.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    firstCompletedDate:
                      description: The UTC value of when the job was first completed.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    jobName:
                      description: The name of the job.
                      type: string
                    jobStatus:
                      description: The status of the job.
                      example: >-
                        DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED |
                        CANCELLED | CLOSED
                      type: string
                    lastCompletedDate:
                      description: The UTC value of when the job was last completed.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    modifiedByUserUid:
                      description: The userUid of who last modified the job.
                      type: string
                    modifiedDate:
                      description: The UTC value of the date the job was modified.
                      example: '2015-11-21T01:51:17.000Z'
                      format: date-time
                      type: string
                    targetLocaleIds:
                      description: The array of localeIds for the job.
                      items:
                        type: string
                      type: array
                    translationJobUid:
                      description: The unique identifier for the job.
                      type: string
                  type: object
              type: object
    SourceFile:
      properties:
        data:
          properties:
            name:
              description: File name
              type: string
            uri:
              description: File uri
              type: string
          type: object
      type: object
    SourceTerm:
      allOf:
        - $ref: '#/components/schemas/TermData'
        - properties:
            createdDate:
              description: Created date
              format: date-time
              type: string
            modifiedDate:
              description: Modified date
              format: date-time
              type: string
            termUid:
              description: Unique identifier of a specific glossary term.
              example: e390a4d6-aef2-11e5-b159-0ad0c2f6b537
              type: string
          type: object
    SourceTermListResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      description: Source terms
                      items:
                        $ref: '#/components/schemas/SourceTerm'
                      type: array
                    totalCount:
                      description: Total count
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    StringCountWordCountResponse:
      properties:
        stringCount:
          description: The total number of strings within that particular step.
          type: number
        wordCount:
          description: The total number of words within that particular step.
          type: number
      type: object
    StringInfo:
      description: Information on string
      properties:
        hashcode:
          description: The generated unique idenitfier for this created or updated string.
          type: string
        keys:
          description: >-
            If this string is associated with one or more resource files this is
            a list of the associated resource keys.
          items:
            properties:
              fileUri:
                description: resource key
                type: string
              key:
                description: fileUri of the key
                type: string
            type: object
          type: array
        parsedStringText:
          description: >-
            The text for this string used to define its uniqueness in the
            Smartling system.  This is after placeholders have been processed
            and escaping normalization has been applied.
          type: string
        stringText:
          description: The text for this string
          type: string
        variant:
          description: String variant
          type: string
      type: object
    StringResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/StringInfo'
                      type: array
                    totalCount:
                      type: number
                  type: object
              type: object
    SuccessFailCountJobResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    failCount:
                      description: >-
                        The number of strings per locale that could not be added to
                        the job.
                      type: string
                    successCount:
                      description: The number of strings per locale added to the job.
                      type: string
                  type: object
              type: object
    SuccessResponse:
      properties:
        code:
          description: >-
            Indicates whether the response was successful or what error has
            occured.
          enum:
            - SUCCESS
          type: string
      required:
        - code
      type: object
    TagInfo:
      properties:
        tag:
          description: Tag text
          example: SomeTag
          type: string
      required:
        - tag
      type: object
    TermData:
      properties:
        antonyms:
          description: Glossary term antonyms.
          type: string
        caseSensitive:
          description: Matching of this glossarry term should be case sensitive.
          type: boolean
        definition:
          description: Glossary term definition.
          type: string
        doNotTranslate:
          description: An indicator to users that the term is not translatable.
          type: boolean
        exactMatch:
          description: Should be matched exactly.
          type: boolean
        notes:
          description: Notes
          type: string
        partOfSpeechCode:
          description: Glossary term part of speech.
          example: UNSPECIFIED
          type: string
        seo:
          description: >-
            An indicator to users whether the term is for search engine
            optimziation.
          type: boolean
        synonyms:
          description: Glossary term synonyms.
          type: string
        termText:
          description: Glossary term text.
          example: cold calls
          type: string
        variations:
          description: Glossary term variations.
          type: string
      required:
        - termText
      type: object
    TermTranslation:
      allOf:
        - $ref: '#/components/schemas/TermTranslationData'
        - properties:
            createdDate:
              description: Created date
              format: date-time
              type: string
            modifiedDate:
              description: Modified date
              format: date-time
              type: string
            translatorUserUid:
              description: Unique identifier of translator user.
              type: string
          type: object
    TermTranslationData:
      properties:
        localeId:
          description: A valid Smartling Locale ID.
          example: fr-CA
          type: string
        lockTranslation:
          description: It is an indicator that shows if the translation is editable.
          type: boolean
        notes:
          description: Notes
          type: string
        translatedTerm:
          description: Translated term
          example: cold calls in french ca
          type: string
      required:
        - localeId
        - translatedTerm
      type: object
    TermWithGlossaryUid:
      allOf:
        - $ref: '#/components/schemas/TranslatedTerm'
        - properties:
            createdByUserUid:
              description: Unique identifier of creator user
              type: string
            glossaryUid:
              description: Unique identifier for the glossary
              type: string
          type: object
    TermWithGlossaryUidListResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      description: Terms with glossary uids
                      items:
                        $ref: '#/components/schemas/TermWithGlossaryUid'
                      type: array
                    totalCount:
                      description: Total count
                      type: number
                  type: object
              required:
                - data
              type: object
      required:
        - response
      type: object
    Timecode:
      description: >-
        Number of seconds for the period of time that a string appears in a
        video, relative to the video start time.
      properties:
        endTime:
          format: int64
          type: integer
        startTime:
          format: int64
          type: integer
      type: object
    TranslatedTerm:
      allOf:
        - $ref: '#/components/schemas/SourceTerm'
        - properties:
            translation:
              $ref: '#/components/schemas/TermTranslation'
          type: object
    TranslatedTermResponse:
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  $ref: '#/components/schemas/TranslatedTerm'
              required:
                - data
              type: object
      required:
        - response
      type: object
    Translation:
      description: Information on a translation
      properties:
        hashcode:
          description: The generated unique idenitfier for this created or updated string.
          type: string
        keys:
          description: >-
            If this string is associated with one or more resource files this is
            a list of the associated resource keys.
          items:
            properties:
              fileUri:
                description: resource key
                type: string
              key:
                description: fileUri of the key
                type: string
            type: object
          type: array
        parsedStringText:
          description: >-
            The text for this string used to define its uniqueness in the
            Smartling system.  This is after placeholders have been processed
            and escaping normalization has been applied.
          type: string
        stringText:
          description: The text for this string.
          type: string
        targetlocaleId:
          description: Locale ID of this translation
          type: string
        translations:
          items:
            properties:
              modifiedDate:
                description: When this translation was last modified.
                type: string
              pluralForm:
                description: >-
                  Pural form of the translation.  `null` if this translation is
                  not a plural.
                type: string
              translation:
                description: Translation text
                type: string
            type: object
          type: array
        variant:
          description: String variant
          type: string
        workflowStepUid:
          description: Current workflow step for this translation
          format: uuid
          type: string
      type: object
    TranslationResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        $ref: '#/components/schemas/Translation'
                      type: array
                    totalCount:
                      type: number
                  type: object
              type: object
    UpdateGlossary:
      allOf:
        - $ref: '#/components/schemas/CreateGlossary'
    UpdateJobRequest:
      description: The payload to use when updating a job.
      properties:
        jobName:
          description: The name of the job. It must be unique within the Smartling project.
          maxLength: 170
          type: string
        description:
          description: The description of the job.
          type: string
        dueDate:
          description: The date by which the job is requested to be completed.
          example: '2020-11-21T01:51:17Z'
          format: date-time
          type: string
        referenceNumber:
          description: Customer specific number/identifier for the job.
          example: CustomerReferenceNum1
          type: string
        callbackUrl:
          description: The URL for Smartling to invoke once the job is completed.
          example: 'https://myDomain.com'
          type: string
        callbackMethod:
          description: The HTTP method to call (GET|POST) when invoking the `callbackUrl`.
          example: GET
          type: string
      type: object
    UpdateTerm:
      allOf:
        - $ref: '#/components/schemas/TermData'
      type: object
    VendorsAPIJobsListAgencyItem:
      properties:
        agencyName:
          type: string
        agencyUid:
          type: string
      required:
        - agencyUid
        - agencyName
      type: object
    VendorsAPIJobsListAgencyItemProgressDetailsItem:
      properties:
        aggregatedPerWorkflow:
          properties:
            workflows:
              items:
                $ref: '#/components/schemas/VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItem'
              type: array
          type: object
      type: object
    VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItem:
      properties:
        targetLocales:
          items:
            $ref: '#/components/schemas/VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItemTargetLocalesItem'
          type: array
        workflowName:
          type: string
        workflowUid:
          type: string
      type: object
    VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItemTargetLocalesItem:
      properties:
        issues:
          properties:
            totalIssuesCount:
              type: integer
          type: object
        localeId:
          type: string
        workflowSteps:
          $ref: '#/components/schemas/VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItemTargetLocalesItemWorkflowStepsItem'
      type: object
    VendorsAPIJobsListAgencyItemProgressDetailsItemWorkflowsItemTargetLocalesItemWorkflowStepsItem:
      properties:
        unassignedWordCount:
          type: integer
        wordCount:
          type: integer
        workflowStepName:
          type: string
        workflowStepOrder:
          description: A workflow step position in workflow
          type: integer
        workflowStepUid:
          type: string
      type: object
    VendorsAPIJobsListAgencyItemTranslationJobItem:
      properties:
        translationJobAuthorizedDate:
          format: date-time
          type: string
        translationJobDueDate:
          format: date-time
          type: string
        translationJobName:
          type: string
        translationJobRisk:
          properties:
            status:
              enum:
                - AT_RISK
                - ON_TRACK
                - LATE
              type: string
          type: object
        translationJobUid:
          type: string
      type: object
    VendorsAPIJobsListSuccessResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    agency:
                      $ref: '#/components/schemas/VendorsAPIJobsListAgencyItem'
                    lastUpdatedDate:
                      description: Date when data for the API response was last refreshed.
                      format: date-time
                      type: string
                    translationJobs:
                      items:
                        $ref: '#/components/schemas/VendorsAPIJobsListTranslationJobItem'
                      type: array
                  required:
                    - lastUpdatedDate
                    - agency
                    - translationJobs
                  type: object
              type: object
    VendorsAPIJobsListTranslationJobItem:
      properties:
        account:
          properties:
            accountName:
              type: string
            accountUid:
              type: string
          type: object
        progressDetails:
          $ref: '#/components/schemas/VendorsAPIJobsListAgencyItemProgressDetailsItem'
        project:
          properties:
            projectId:
              type: string
            projectName:
              type: string
          type: object
        translationJob:
          $ref: '#/components/schemas/VendorsAPIJobsListAgencyItemTranslationJobItem'
      required:
        - account
        - project
        - progressDetails
        - translationJob
      type: object
    WatcherRequest:
      properties:
        email:
          description: watcher email
          example: my@maul.com
          type: string
        enabled:
          description: Should send email notification to this email.
          example: true
          type: boolean
        name:
          description: watcher name
          example: Alonso
          type: string
      required:
        - email
        - name
      type: object
    WebPageDetailListRequest:
      properties:
        webPageUids:
          description: list of url identifiers
          example:
            - 4423d44
            - 123jd44
          items:
            type: string
          maximum: 200
          minimum: 1
          type: array
      type: object
    WebPageDetailListResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          details:
                            properties:
                              contextUids:
                                description: context identifiers
                                example:
                                  - 122ssasa323
                                  - 334asds3434
                                items:
                                  type: string
                                type: array
                              created:
                                description: capture url date
                                example: '2015-11-21T01:51:17Z'
                                type: string
                              stringCount:
                                description: string count
                                example: 10
                                type: integer
                              wordCount:
                                description: word count
                                example: 25
                                type: integer
                            type: object
                          domain:
                            description: domain
                            properties:
                              name:
                                description: url domain name
                                example: my.domain.com
                                type: string
                            type: object
                          urlPath:
                            description: Url path
                            type: string
                          webPageUid:
                            description: url identifier
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    WebPageDetailsResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    details:
                      properties:
                        contextUids:
                          description: context identifiers
                          example:
                            - 122ssasa323
                            - 334asds3434
                          items:
                            type: string
                          type: array
                        created:
                          description: capture url date
                          example: '2015-11-21T01:51:17Z'
                          type: string
                        stringCount:
                          description: string count
                          example: 10
                          type: integer
                        wordCount:
                          description: word count
                          example: 25
                          type: integer
                      type: object
                    domain:
                      description: domain
                      properties:
                        name:
                          description: url domain name
                          example: my.domain.com
                          type: string
                      type: object
                    urlPath:
                      description: Url path
                      type: string
                    webPageUid:
                      description: url identifier
                      type: string
                  type: object
              type: object
    WebPageDomainsResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          name:
                            description: url domain name
                            example: my.domain.com
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    WebPageListRequest:
      properties:
        domainName:
          description: domain name
          example: my.domain.com
          type: string
        limit:
          default: 100
          description: limit
          example: 30
          maximum: 200
          minimum: 1
          type: integer
        localeIds:
          example:
            - ru-RU
          items:
            description: An identifying code for a language in Smartling.
            type: string
          type: array
        offset:
          default: 0
          description: offset
          example: 0
          maximum: 100
          minimum: 0
          type: integer
        orderBy:
          description: Sort result by fields
          example:
            - DOMAIN
            - URL_PATH
          properties:
            items:
              items:
                properties:
                  direction:
                    description: Sort direction
                    enum:
                      - DOMAIN
                      - URL_PATH
                    type: string
                type: object
              type: array
          type: object
        orderDirection:
          default: ASC
          description: Sort direction
          enum:
            - ASC
            - DESC
          example: ASC
          type: string
        urlCaptureDateAfter:
          description: The date after which the URL was captured.
          example: '2020-11-21T01:51:17Z'
          format: date-time
          type: string
        urlCaptureDateBefore:
          description: The date by which the URL was captured.
          example: '2020-11-21T01:51:17Z'
          format: date-time
          type: string
        urlPath:
          description: url
          example: /home/page.htm
          type: string
        urlPathExactMatch:
          description: Should or should not apply exact match.
          example: false
          type: boolean
      type: object
    WebPageListResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          created:
                            description: url capture date
                            type: string
                          domain:
                            description: domain
                            properties:
                              name:
                                description: url domain name
                                example: my.domain.com
                                type: string
                            type: object
                          urlPath:
                            description: Watcher name
                            type: string
                          webPageUid:
                            description: url identifier
                            type: string
                        type: object
                      type: array
                    totalCount:
                      description: Total element count
                      type: integer
                  type: object
              type: object
    WordCountResponse:
      type: object
      required:
      - response
      properties:
        response:
          allOf:
            - $ref: '#/components/schemas/SuccessResponse'
            - properties:
                data:
                  properties:
                    items:
                      items:
                        properties:
                          accountName:
                            description: Name of the account
                            type: string
                          accountUid:
                            description: The unique identifier of the account
                            type: string
                          agencyName:
                            description: Name of the agency that was credited for the words
                            type: string
                          agencyUid:
                            description: >-
                              The unique identifier of the agency that was credited
                              for the words
                            type: string
                          fuzzyProfileName:
                            description: Name of the fuzzy match profile used
                            type: string
                          fuzzyTier:
                            description: >-
                              Fuzzy match tier that matches fuzzy score of the
                              processed words
                            type: string
                          jobName:
                            description: Name of the translation job
                            type: string
                          jobUid:
                            description: The unique identifier of the translation job
                            type: string
                          projectId:
                            description: The unique identifier of the project
                            type: string
                          projectName:
                            description: Name of the project
                            type: string
                          targetLocaleId:
                            description: Locale ID of the translations
                            type: string
                          targetLocaleName:
                            description: Name of the locale of the translations
                            type: string
                          translationResourceName:
                            description: >-
                              Name of the translation resource who was credited for
                              the words
                            type: string
                          translationResourceUid:
                            description: >-
                              The unique identifier of the translation resource who
                              was credited for the words
                            type: string
                          weightedWordCount:
                            description: >-
                              The number of weighted words processed by a
                              translation resource
                            type: integer
                          wordCount:
                            description: >-
                              The number of words processed by a translation
                              resource
                            type: integer
                          workflowStepType:
                            description: >-
                              Type of the workflow step (Translation, Edit, Review)
                              the words transitioned through
                            type: string
                        type: object
                      type: array
                    resultsTruncated:
                      description: >-
                        The flag showing whether all qualified records returned by
                        the response.
                      type: boolean
                  type: object
              type: object
      description: A list of report records
    WorkflowProgressReportItemResponse:
      properties:
        workflowName:
          description: The name of the workflow.
          type: string
        workflowStepSummaryReportItemList:
          items:
            $ref: '#/components/schemas/WorkflowStepSummaryReportItemResponse'
          type: array
        workflowUid:
          description: The uid of the workflow.
          type: string
      type: object
    WorkflowStepSummaryReportItemResponse:
      properties:
        stringCount:
          description: The total number of strings within that particular step.
          type: number
        wordCount:
          description: The total number of words within that particular step.
          type: number
        workflowStepName:
          description: The name of the workflow step.
          type: string
        workflowStepType:
          description: The type of the step.
          type: string
        workflowStepUid:
          description: The uid of the workflow step.
          type: string
      type: object

  responses:
    Error400ResponseDefinition:
      description: Provided request parameters are invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error400Response'
          examples:
            response:
              value:
                response:
                  code: VALIDATION_ERROR
                  errors:
                    key: unknown.field
                    message: >-
                      The field unknown.parameter was not expected. Please
                      consult the documentation to verify the fields you are
                      submitting.
                    details: unknown.parameter

    Error401ResponseDefinition:
      description: Provided credentials are not valid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error401Response'
          examples:
            response:
              value:
                response:
                  code: AUTHENTICATION_ERROR
                  errors:
                    details: {}
                    key: invalid_token
                    message: Invalid token

    Error429ResponseDefinition:
      description: Too many simultaneous API requests.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error429Response'
          examples:
            response:
              value:
                response:
                  code: MAX_OPERATIONS_LIMIT_EXCEEDED
                  errors:
                    key: too.many.requests
                    message: >-
                      The limit of 10 concurrent Smartling file API
                      operations for this project has been exceeded.

    Error500ResponseDefinition:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error500Response'
